{"version":3,"file":"static/js/978.732a62a3.chunk.js","mappings":"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","sources":["../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../../node_modules/buffer-layout/lib/Layout.js","../../client/layout.js","../../client/util/send-and-confirm-transaction.js","../../client/token.js","../node_modules/decimal.js/decimal.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n"],"names":["b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","ieee754","require$$1","customInspectSymbol","Symbol","exports","Buffer","alloc","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","g","self","window","create","ctor","superCtor","super_","TempCtor","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","JSON","stringify","isNull","formatPrimitive","keys","visibleKeys","hash","forEach","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","ar","base","braces","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","line","re","isObject","objectToString","isPrimitive","o","origin","add","prop","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","global","DataView","assert","fail","ok","regex","getName","func","AssertionError","options","expected","operator","generatedMessage","truncate","stackStartFunction","captureStackTrace","err","fn_name","next_line","substring","something","utilInspect","rawname","_deepEqual","strict","memos","getTime","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","kb","sort","objEquiv","object","expectedException","test","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Layout","span","property","makeDestinationObject","decode","encode","getSpan","replicate","rv","assign","fromArray","values","nameWithProperty","Class","layout","layout_","boundConstructor_","ExternalLayout","isCount","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","count","elo","v","Structure","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","CString","srcb","UTF8","maxSpan","Constant","publicKey","BufferLayout","uint64","sendAndConfirmTransaction","realSendAndConfirmTransaction","connection","transaction","signers","skipPreflight","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","u64","toBuffer","toArray","zeroPad","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","associatedProgramId","mintAccount","Keypair","token","balanceNeeded","SystemProgram","fromPubkey","payer","newAccountPubkey","lamports","space","programId","owner","newAccount","mintPublicKey","associatedAddress","createAssociatedTokenAccountInternal","getAccountInfo","toPubkey","amount","multisigAccount","pubkey","isSigner","isWritable","signer","dataLayout","instruction","info","mintInfo","account","accountInfo","multisig","multisigInfo","ownerPublicKey","currentAuthorityPublicKey","currentAuthority","authority","authorityPublicKey","nativeAccount","commandDataLayout","encodeLength","mintAuthority","option","freezeAuthority","multiSigners","authorityType","newAuthority","decimals","PublicKey","mint","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","k","ws","indexOfLastWord","w","getZeroString","checkInt32","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","arrL","strL","charAt","reverse","absoluteValue","finalise","clampedTo","clamp","Ctor","gt","cmp","comparedTo","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","isZero","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","rep","t","t3","t3plusx","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInt","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","isBase10","denominator","inf","naturalLogarithm","getLn10","xe","xLTy","getBase10Exponent","mod","q","naturalExponential","exp","negated","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","multiplyInteger","temp","aL","bL","subtract","logBase","more","prod","prodL","qd","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","isExp","nonFiniteToString","zs","isOdd","maxOrMin","args","ltgt","guard","c0","numerator","x1","parseDecimal","search","parseOther","divisor","isFloat","p","isHyperbolic","u","pi","atan2","config","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","random","Uint32Array","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","define"],"sourceRoot":""}