{"version":3,"file":"static/js/636.0a729344.chunk.js","mappings":"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","sources":["../../../src/state.ts","../../../src/instructions.ts","../../../../src/helpers/loadAccount.ts","../../../src/index.ts","../../../../src/helpers/sleep.ts","../../../../src/transaction/programErr.ts","../../../../src/utils/instructions.ts","../../../../src/utils/printTXTable.ts","../../../src/layout.ts","../../../src/constants.ts","../../../src/utils.ts","../../../src/fraction.ts","../../../src/percent.ts","../../../src/tokenAmount.ts","../../../src/splTokenRegistry.ts","../../../src/token.ts","../../../src/common.ts","../../../../src/calculator/curve.ts","../../../../src/calculator/amounts.ts","../../../../src/state/fees.ts","../../../../src/state/layout.ts","../../../../src/instructions/common.ts","../../../../src/instructions/admin.ts","../../../../src/state/index.ts","../../../../src/instructions/swap.ts","../../../src/stable-swap.ts","../../../../src/util/account.ts","../../../../src/provider.ts","../../../../src/error.ts","../../../../src/coder/idl.ts","../../../node_modules/snake-case/node_modules/tslib/tslib.es6.js","../../../node_modules/dot-case/node_modules/tslib/tslib.es6.js","../../../node_modules/lower-case/dist.es2015/index.js","../../../node_modules/no-case/dist.es2015/index.js","../../../node_modules/dot-case/dist.es2015/index.js","../../../../src/coder/common.ts","../../../node_modules/snake-case/dist.es2015/index.js","../../../../src/coder/instruction.ts","../../../../src/coder/accounts.ts","../../../../src/coder/event.ts","../../../../src/utils/features.ts","../../../../src/coder/state.ts","../../../../src/coder/index.ts","../../../../src/utils/sha256.ts","../../../../src/program/common.ts","../../../../src/utils/rpc.ts","../../../../src/utils/common.ts","../../../../src/utils/pubkey.ts","../../../../src/utils/bytes/hex.ts","../../../../src/utils/bytes/utf8.ts","../../../../src/utils/bytes/bs58.ts","../../../../src/utils/bytes/base64.ts","../../../../src/utils/token.ts","../../../../src/idl.ts","../../../../src/program/context.ts","../../../../src/program/namespace/instruction.ts","../../../../src/program/namespace/rpc.ts","../../../../src/program/namespace/transaction.ts","../../../../src/program/namespace/state.ts","../../../../src/program/namespace/account.ts","../../../../src/program/event.ts","../../../../src/program/index.ts","../../../../src/program/namespace/index.ts","../../../../src/program/namespace/simulate.ts","../../src/utils.ts","../../src/math/curve.ts","../../src/amm/stable.ts","../../src/amm/tokenswap-stable.ts","../../src/amm/tokenswap-constant-product.ts","../../src/fraction.ts","../../src/lib/idl/jupiter.ts","../../src/constants.ts","../../src/utils/layout.ts","../../src/lib/cropper/swapLayout.ts","../../src/lib/jupiterInstruction.ts","../../src/lib/saber/saberAddDecimalsAmm.ts","../../src/utils/getTwoPermutations.ts","../../src/lib/amm.ts","../../src/lib/raydium/pools.ts","../../src/lib/raydium/raydiumAmm.ts","../../src/lib/split-trade/splitTradeAmm.ts","../../src/lib/market.ts","../../src/lib/serum/market.ts","../../src/lib/serum/serumAmm.ts","../../src/utils/deserializeAccount.ts","../../src/lib/saber/saberAmm.ts","../../src/lib/aldrin/percentage.ts","../../src/lib/aldrin/poolState.ts","../../src/lib/aldrin/aldrinAmm.ts","../../src/lib/spl-token-swap/splTokenSwapPools.ts","../../src/lib/spl-token-swap/tokenSwapLayout.ts","../../src/lib/spl-token-swap/splTokenSwapAmm.ts","../../src/lib/mercurial/mercurialAmm.ts","../../src/lib/cropper/cropperAmm.ts","../../src/lib/sencha/swapLayout.ts","../../src/lib/sencha/senchaAmm.ts","../../src/lib/routes.ts","../../src/lib/ammFactory.ts","../../src/lib/cache.ts","../../src/utils/instruction.ts","../../src/utils/token.ts","../../src/lib/routeToInstructions.ts","../../src/utils/wait.ts","../../src/lib/serum/openOrders.ts","../../src/lib/fee.ts","../../src/utils/TransactionBuilder.ts","../../src/utils/Owner.ts","../../src/lib/error.ts","../../src/utils/transactionHelpers.ts","../../src/utils/chunks.ts","../../src/lib/computeRouteInfos.ts","../../src/utils/chunkedGetMultipleAccountInfos.ts","../../src/lib/jupiter.ts","../../src/Layout.ts","../node_modules/@jup-ag/react-hook/dist/index.js","../../src/error.tsx","../../src/index.tsx","../../src/utils/useDebounce.ts","../../src/error.ts","../../src/fees.ts","../../src/index.js","../../src/instructions.js","../../src/layout.js","../../../src/market-proxy/index.ts","../../../src/market-proxy/middleware.ts","../../src/market.ts","../../src/queue.ts","../../src/slab.ts","../../src/token-instructions.js","../../src/tokens_and_markets.ts","../../../src/provider.ts","../../../src/error.ts","../../src/index.ts","../../../../src/coder/types.ts","../../../src/idl.ts","../../../../../src/program/namespace/instruction.ts","../../../../../src/program/namespace/rpc.ts","../../../../../src/program/namespace/transaction.ts","../../../../../src/program/namespace/state.ts","../../../../../src/program/namespace/account.ts","../../../../../src/utils/bytes/hex.ts","../../../../../src/utils/bytes/utf8.ts","../../../../../src/utils/bytes/bs58.ts","../../../../../src/utils/bytes/base64.ts","../../../../../src/program/namespace/index.ts","../../../../../src/program/namespace/simulate.ts","../../../src/workspace.ts","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/big.js/big.js","../node_modules/buffer-layout/lib/Layout.js","../node_modules/camelcase/index.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/decimal.js-light/decimal.js","../node_modules/define-properties/index.js","../node_modules/es6-object-assign/index.js","../node_modules/is-nan/implementation.js","../node_modules/is-nan/index.js","../node_modules/is-nan/polyfill.js","../node_modules/is-nan/shim.js","../node_modules/js-sha256/src/sha256.js","../../tsc-out/jsbi.mjs","../node_modules/lodash.mapvalues/index.js","../node_modules/object-is/implementation.js","../node_modules/object-is/index.js","../node_modules/object-is/polyfill.js","../node_modules/object-is/shim.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/isArguments.js","../node_modules/os-browserify/browser.js","../node_modules/path-browserify/index.js","../node_modules/process/browser.js","../node_modules/promise-retry/index.js","../node_modules/promise-retry/node_modules/retry/index.js","../node_modules/promise-retry/node_modules/retry/lib/retry.js","../node_modules/promise-retry/node_modules/retry/lib/retry_operation.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/toformat/toFormat.js","../node_modules/toml/index.js","../node_modules/toml/lib/compiler.js","../node_modules/toml/lib/parser.js","../node_modules/tslib/tslib.es6.js","../node_modules/pako/dist/pako.esm.mjs"],"sourcesContent":["import { array, bool, publicKey, u64 } from '@project-serum/borsh';\nimport { struct, u32, u8 } from 'buffer-layout';\nexport const MAX_N_COINS = 4;\nexport const AdminSettings = struct([bool('swapEnabled'), bool('addLiquidityEnabled')]);\n// SwapState is always the latest\nexport const SwapState = struct([\n    u8('version'),\n    bool('isInitialized'),\n    u8('nonce'),\n    u64('amplificationCoefficient'),\n    u64('feeNumerator'),\n    u64('adminFeeNumerator'),\n    u32('tokenAccountsLength'),\n    u64('precisionFactor'),\n    array(u64(), MAX_N_COINS, 'precisionMultipliers'),\n    array(publicKey(), MAX_N_COINS, 'tokenAccounts'),\n    publicKey('poolMint'),\n    publicKey('adminTokenMint'),\n    AdminSettings.replicate('adminSettings')\n]);\n//# sourceMappingURL=state.js.map","// Inspired from https://github.com/project-serum/serum-ts/blob/master/packages/token/src/instructions.ts\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { rustEnum, u64, struct, u8, vec } from '@project-serum/borsh';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport BN from 'bn.js';\nimport { AdminSettings } from './state';\nexport const STABLE_SWAP_N_POOL_PROGRAM_ID = new PublicKey('MERLuDFBMmsHnsBPZw2sDQZHvXFMwp8EdjudcU2HKky');\nconst swapInstructions = [\n    struct([\n        u8('nonce'),\n        u8('nCoins'),\n        u64('amplificationCoefficient'),\n        u64('feeNumerator'),\n        u64('adminFeeNumerator'),\n        AdminSettings.replicate('adminSettings')\n    ], 'initialize'),\n    struct([vec(u64(), 'depositAmounts'), u64('minMintAmount')], 'addLiquidity'),\n    struct([u64('unmintAmount'), vec(u64(), 'minimumAmounts')], 'removeLiquidity'),\n    struct([u64('unmintAmount'), u64('minimumOutAmount')], 'removeLiquidityOneToken'),\n    struct([u64('inAmount'), u64('minimumOutAmount')], 'exchange'),\n    struct([], 'getVirtualPrice')\n];\nexport const SwapInstructionLayout = rustEnum(swapInstructions);\nfunction encodeSwapInstructionData(instruction) {\n    const b = Buffer.alloc(1000); // Because we have vec, we cannot infer a correct max span\n    const span = SwapInstructionLayout.encode(instruction, b);\n    return b.slice(0, span);\n}\nexport class SwapInstruction {\n    static initialize(swapInfo, authority, tokenAccounts, tokenMints, poolTokenMint, adminTokenMint, nonce, amplificationCoefficient, feeNumerator, adminFeeNumerator, adminSettings) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: true, isWritable: true },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: false })),\n            ...tokenMints.map((tokenMint) => ({ pubkey: tokenMint, isSigner: false, isWritable: false })),\n            { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n            { pubkey: adminTokenMint, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                initialize: {\n                    nonce,\n                    nCoins: tokenAccounts.length,\n                    amplificationCoefficient: new BN(amplificationCoefficient),\n                    feeNumerator: new BN(feeNumerator),\n                    adminFeeNumerator: new BN(adminFeeNumerator),\n                    adminSettings\n                }\n            })\n        });\n    }\n    static addLiquidity(swapInfo, authority, userTransferAuthority, tokenAccounts, poolTokenMint, sourceTokenAccounts, userLpTokenAccount, depositAmounts, minMintAmount) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: false, isWritable: false },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: true })),\n            { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n            ...sourceTokenAccounts.map((sourceTokenAccount) => ({\n                pubkey: sourceTokenAccount,\n                isSigner: false,\n                isWritable: true\n            })),\n            { pubkey: userLpTokenAccount, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                addLiquidity: {\n                    depositAmounts: depositAmounts,\n                    minMintAmount: minMintAmount\n                }\n            })\n        });\n    }\n    static removeLiquidity(swapInfo, authority, userTransferAuthority, tokenAccounts, poolTokenMint, destinationTokenAccounts, userLpTokenAccount, unmintAmount, minimumAmounts) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: false, isWritable: false },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: true })),\n            { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n            ...destinationTokenAccounts.map((destinationTokenAccount) => ({\n                pubkey: destinationTokenAccount,\n                isSigner: false,\n                isWritable: true\n            })),\n            { pubkey: userLpTokenAccount, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                removeLiquidity: {\n                    unmintAmount: new BN(unmintAmount),\n                    minimumAmounts: minimumAmounts.map((i) => new BN(i))\n                }\n            })\n        });\n    }\n    static removeLiquidityOneToken(swapInfo, authority, userTransferAuthority, tokenAccounts, poolTokenMint, destinationTokenAccount, userLpTokenAccount, unmintAmount, minimumOutAmount) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: false, isWritable: true },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: true })),\n            { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n            { pubkey: destinationTokenAccount, isSigner: false, isWritable: true },\n            { pubkey: userLpTokenAccount, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                removeLiquidityOneToken: {\n                    unmintAmount,\n                    minimumOutAmount\n                }\n            })\n        });\n    }\n    static exchange(swapInfo, authority, userTransferAuthority, tokenAccounts, userSourceTokenAccount, userDestinationTokenAccount, inAmount, minimumOutAmount) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: false, isWritable: true },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: true })),\n            { pubkey: userSourceTokenAccount, isSigner: false, isWritable: true },\n            { pubkey: userDestinationTokenAccount, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                exchange: {\n                    inAmount,\n                    minimumOutAmount\n                }\n            })\n        });\n    }\n    static getVirtualPrice(swapInfo, authority, userTransferAuthority, tokenAccounts, poolTokenMint) {\n        const keys = [\n            { pubkey: swapInfo, isSigner: false, isWritable: true },\n            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: authority, isSigner: false, isWritable: false },\n            { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n            ...tokenAccounts.map((tokenAccount) => ({ pubkey: tokenAccount, isSigner: false, isWritable: true })),\n            { pubkey: poolTokenMint, isSigner: false, isWritable: true }\n        ];\n        return new TransactionInstruction({\n            programId: STABLE_SWAP_N_POOL_PROGRAM_ID,\n            keys,\n            data: encodeSwapInstructionData({\n                getVirtualPrice: {}\n            })\n        });\n    }\n}\n//# sourceMappingURL=instructions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function loadAccount(connection, address, programId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const accountInfo = yield connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Failed to find account');\n        }\n        if (!accountInfo.owner.equals(programId)) {\n            throw new Error(`Invalid owner: ${JSON.stringify(accountInfo.owner)}`);\n        }\n        return Buffer.from(accountInfo.data);\n    });\n}\n//# sourceMappingURL=loadAccount.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SwapState } from './state';\nimport { SwapInstruction, STABLE_SWAP_N_POOL_PROGRAM_ID } from './instructions';\nimport { loadAccount } from './helpers/loadAccount';\nimport { Transaction } from '@solana/web3.js';\nimport { Keypair, PublicKey, SystemProgram } from '@solana/web3.js';\nimport { AccountLayout, ASSOCIATED_TOKEN_PROGRAM_ID, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { sleep } from './helpers/sleep';\nimport tokenMints from './token-mints.json';\nimport BN from 'bn.js';\nexport { STABLE_SWAP_N_POOL_PROGRAM_ID } from './instructions';\nexport const SIMULATION_USER = new PublicKey('HrY9qR5TiB2xPzzvbBu5KrBorMfYGQXh9osXydz4jy9s');\nexport const FEE_DENOMINATOR = Math.pow(10, 10);\nconst RENT_EXEMPT_TOKEN_ACCOUNT_LAMPORTS = 2039280;\n// For some reason, toBuffer will be required for u64 to work.\nBN.prototype.toBuffer = function () {\n    const a = this.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n        return b;\n    }\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n};\n/**\n * Our main swap\n */\nexport class StableSwapNPool {\n    /**\n     * Create a StableSwapNPool object attached to the specific Vault pool\n     *\n     * @param connection The connection to use\n     * @param poolAccount The pool account\n     * @param poolTokenMint The pool token mint\n     * @param authority The authority over the vault and accounts\n     * @param tokenAccounts: The vault pool token accounts\n     * @param tokenMints: The vault pool token mints\n     */\n    constructor(poolAccount, poolTokenMint, authority, amplificationCoefficient, feeNumerator, adminFeeNumerator, precisionFactor, precisionMultipliers, addLiquidityEnabled, tokenAccounts, tokenMints, connection, simulationUser, simulationTokenAccounts) {\n        this.poolAccount = poolAccount;\n        this.poolTokenMint = poolTokenMint;\n        this.authority = authority;\n        this.amplificationCoefficient = amplificationCoefficient;\n        this.feeNumerator = feeNumerator;\n        this.adminFeeNumerator = adminFeeNumerator;\n        this.precisionFactor = precisionFactor;\n        this.precisionMultipliers = precisionMultipliers;\n        this.addLiquidityEnabled = addLiquidityEnabled;\n        this.tokenAccounts = tokenAccounts;\n        this.tokenMints = tokenMints;\n        this.connection = connection;\n        this.simulationUser = simulationUser;\n        this.simulationTokenAccounts = simulationTokenAccounts;\n    }\n    /**\n     * Get the minimum balance for the token swap account to be rent exempt\n     *\n     * @return Number of lamports required\n     */\n    static getMinBalanceRentForExemptSwapState(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield connection.getMinimumBalanceForRentExemption(SwapState.span);\n        });\n    }\n    /**\n     * Create a new StableSwapNPool\n     *\n     * @param connection The connection to use\n     * @param poolAccount The pool account\n     * @param authority The authority over the pool and accounts\n     * @param tokenAccounts: The pool token accounts\n     * @param poolTokenMint The pool token mint\n     * @param nonce The nonce used to generate the authority\n     * @return The new StableSwapNPool\n     */\n    static create(connection, sender, poolAccount, authority, tokenAccounts, poolTokenMint, adminTokenMint, nonce, amplificationCoefficient, feeNumerator, adminFeeNumerator, addLiquidityEnabled, simulationPayer, simulationUser) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tokenMints = yield Promise.all(tokenAccounts.map((tokenAccount) => StableSwapNPool.getTokenAccountMint(connection, tokenAccount)));\n            yield StableSwapNPool.setupSimulationUser(connection, simulationUser, tokenMints, poolTokenMint, simulationPayer);\n            const minBalanceForRentExemption = yield StableSwapNPool.getMinBalanceRentForExemptSwapState(connection);\n            const instructions = [\n                SystemProgram.createAccount({\n                    fromPubkey: sender.userPublicKey,\n                    newAccountPubkey: poolAccount.publicKey,\n                    lamports: minBalanceForRentExemption,\n                    space: SwapState.span,\n                    programId: STABLE_SWAP_N_POOL_PROGRAM_ID\n                }),\n                SwapInstruction.initialize(poolAccount.publicKey, authority, tokenAccounts, tokenMints, poolTokenMint, adminTokenMint, nonce, amplificationCoefficient, feeNumerator, adminFeeNumerator, {\n                    swapEnabled: true,\n                    addLiquidityEnabled: addLiquidityEnabled\n                })\n            ];\n            yield sender.send(connection, instructions, [poolAccount]);\n            yield sleep(2000);\n            return StableSwapNPool.load(connection, poolAccount.publicKey, simulationUser);\n        });\n    }\n    static getTokenMints(connection, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = yield loadAccount(connection, address, STABLE_SWAP_N_POOL_PROGRAM_ID);\n            const swapState = SwapState.decode(data);\n            if (!swapState.isInitialized) {\n                throw new Error(`Invalid vault state`);\n            }\n            // Hand manipulation of the underlying vec\n            swapState.tokenAccounts = swapState.tokenAccounts.slice(0, swapState.tokenAccountsLength);\n            const tokenMints = {};\n            yield Promise.all(swapState.tokenAccounts.map((tokenAccount) => __awaiter(this, void 0, void 0, function* () {\n                const tokenMint = yield StableSwapNPool.getTokenAccountMint(connection, tokenAccount);\n                tokenMints[tokenAccount.toBase58()] = tokenMint.toBase58();\n            })));\n            return tokenMints;\n        });\n    }\n    static loadWithData(poolAddress, poolData, authority) {\n        const swapState = SwapState.decode(poolData);\n        if (!swapState.isInitialized) {\n            throw new Error(`Invalid vault state`);\n        }\n        // Hand manipulation of the underlying vec\n        swapState.tokenAccounts = swapState.tokenAccounts.slice(0, swapState.tokenAccountsLength);\n        const tokenMints = swapState.tokenAccounts.map((tokenAccount) => StableSwapNPool.getTokenAccountMintAsync(tokenAccount));\n        return new StableSwapNPool(poolAddress, swapState.poolMint, authority, swapState.amplificationCoefficient.toNumber(), swapState.feeNumerator.toNumber(), swapState.adminFeeNumerator.toNumber(), swapState.precisionFactor.toNumber(), swapState.precisionMultipliers.map((precisionMultiplier) => precisionMultiplier.toNumber()), swapState.adminSettings.addLiquidityEnabled, swapState.tokenAccounts, tokenMints);\n    }\n    static load(connection, address, simulationUser, cache = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = yield loadAccount(connection, address, STABLE_SWAP_N_POOL_PROGRAM_ID);\n            const swapState = SwapState.decode(data);\n            if (!swapState.isInitialized) {\n                throw new Error(`Invalid vault state`);\n            }\n            // Hand manipulation of the underlying vec\n            swapState.tokenAccounts = swapState.tokenAccounts.slice(0, swapState.tokenAccountsLength);\n            const tokenMints = yield Promise.all(swapState.tokenAccounts.map((tokenAccount) => StableSwapNPool.getTokenAccountMint(connection, tokenAccount, cache)));\n            const simulationTokenAccounts = yield StableSwapNPool.setupSimulationUser(connection, simulationUser, tokenMints, swapState.poolMint);\n            const [authority] = yield PublicKey.findProgramAddress([address.toBuffer()], STABLE_SWAP_N_POOL_PROGRAM_ID);\n            return new StableSwapNPool(address, swapState.poolMint, authority, swapState.amplificationCoefficient.toNumber(), swapState.feeNumerator.toNumber(), swapState.adminFeeNumerator.toNumber(), swapState.precisionFactor.toNumber(), swapState.precisionMultipliers.map((precisionMultiplier) => precisionMultiplier.toNumber()), swapState.adminSettings.addLiquidityEnabled, swapState.tokenAccounts, tokenMints, connection, simulationUser, simulationTokenAccounts);\n        });\n    }\n    addLiquidity(sender, userSourceTokenAccounts, userLpTokenAccount, depositAmounts, minMintAmount, instructions, cleanupInstructions = [], signers = []) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const ephemeralKeypair = new Keypair();\n            instructions = instructions.concat([\n                ...userSourceTokenAccounts.map((userSourceTokenAccount, i) => Token.createApproveInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, ephemeralKeypair.publicKey, sender.userPublicKey, [], depositAmounts[i])),\n                SwapInstruction.addLiquidity(this.poolAccount, this.authority, ephemeralKeypair.publicKey, this.tokenAccounts, this.poolTokenMint, userSourceTokenAccounts, userLpTokenAccount, depositAmounts, minMintAmount),\n                ...userSourceTokenAccounts.map((userSourceTokenAccount) => Token.createRevokeInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, sender.userPublicKey, [])),\n                ...cleanupInstructions\n            ]);\n            const txid = yield sender.send(this.connection, instructions, signers.concat([ephemeralKeypair]));\n            const result = findLogAndParseWithRegex(((_b = (_a = (yield this.connection.getTransaction(txid))) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.logMessages) || [], new RegExp('GetMintAmount: {\"mintAmount\": (.+)}', 'i'));\n            return { txid, result };\n        });\n    }\n    removeLiquidity(sender, userDestinationTokenAccounts, userLpTokenAccount, unmintAmount, minimumAmounts, instructions, cleanupInstructions = [], signers = []) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const ephemeralKeypair = new Keypair();\n            instructions = instructions.concat([\n                Token.createApproveInstruction(TOKEN_PROGRAM_ID, userLpTokenAccount, ephemeralKeypair.publicKey, sender.userPublicKey, [], unmintAmount),\n                SwapInstruction.removeLiquidity(this.poolAccount, this.authority, ephemeralKeypair.publicKey, this.tokenAccounts, this.poolTokenMint, userDestinationTokenAccounts, userLpTokenAccount, unmintAmount, minimumAmounts),\n                Token.createRevokeInstruction(TOKEN_PROGRAM_ID, userLpTokenAccount, sender.userPublicKey, []),\n                ...cleanupInstructions\n            ]);\n            const txid = yield sender.send(this.connection, instructions, signers.concat([ephemeralKeypair]));\n            const result = findLogAndParse(((_b = (_a = (yield this.connection.getTransaction(txid))) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.logMessages) || [], 'GetWithdrawalAmounts');\n            return { txid, result };\n        });\n    }\n    removeLiquidityOneToken(sender, userDestinationTokenAccount, userLpTokenAccount, unmintAmount, minimumAmount, instructions, cleanupInstructions = [], signers = []) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const ephemeralKeypair = new Keypair();\n            instructions = instructions.concat([\n                Token.createApproveInstruction(TOKEN_PROGRAM_ID, userLpTokenAccount, ephemeralKeypair.publicKey, sender.userPublicKey, [], unmintAmount),\n                SwapInstruction.removeLiquidityOneToken(this.poolAccount, this.authority, ephemeralKeypair.publicKey, this.tokenAccounts, this.poolTokenMint, userDestinationTokenAccount, userLpTokenAccount, unmintAmount, minimumAmount),\n                Token.createRevokeInstruction(TOKEN_PROGRAM_ID, userLpTokenAccount, sender.userPublicKey, []),\n                ...cleanupInstructions\n            ]);\n            const txid = yield sender.send(this.connection, instructions, signers.concat([ephemeralKeypair]));\n            const result = findLogAndParse(((_b = (_a = (yield this.connection.getTransaction(txid))) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.logMessages) || [], 'GetWithdrawalAmount');\n            return { txid, result };\n        });\n    }\n    exchange(sender, userSourceTokenAccount, userDestinationTokenAccount, inAmount, minimumOutAmount, instructions) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const cleanupInstructions = [];\n            const ephemeralKeypair = new Keypair();\n            instructions = instructions.concat([\n                Token.createApproveInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, ephemeralKeypair.publicKey, sender.userPublicKey, [], inAmount),\n                SwapInstruction.exchange(this.poolAccount, this.authority, ephemeralKeypair.publicKey, this.tokenAccounts, userSourceTokenAccount, userDestinationTokenAccount, inAmount, minimumOutAmount),\n                Token.createRevokeInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, sender.userPublicKey, [])\n            ]);\n            const txid = yield sender.send(this.connection, instructions.concat(cleanupInstructions), [ephemeralKeypair]);\n            const result = findLogAndParse(((_b = (_a = (yield this.connection.getTransaction(txid))) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.logMessages) || [], 'GetDyUnderlying');\n            return { txid, result };\n        });\n    }\n    // TODO: Resolve this hack with a design that is homogeneous across libs\n    // This is to bypass the need to delegate sending to the exchange method\n    exchangeHack(user, userSourceTokenAccount, userDestinationTokenAccount, inAmount, minimumOutAmount, instructions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanupInstructions = [];\n            const ephemeralKeypair = new Keypair();\n            instructions = instructions.concat([\n                Token.createApproveInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, ephemeralKeypair.publicKey, user, [], inAmount),\n                SwapInstruction.exchange(this.poolAccount, this.authority, ephemeralKeypair.publicKey, this.tokenAccounts, userSourceTokenAccount, userDestinationTokenAccount, inAmount, minimumOutAmount),\n                Token.createRevokeInstruction(TOKEN_PROGRAM_ID, userSourceTokenAccount, user, [])\n            ]);\n            return { instructions, signers: [ephemeralKeypair] };\n        });\n    }\n    getOutAmount(sourceTokenMint, destinationTokenMint, inAmount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.simulationUser) {\n                throw new Error('Simulation user is empty');\n            }\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const kp1 = Keypair.generate();\n            const kp2 = Keypair.generate();\n            // We use new fresh token accounts so we don't need the user to have any to simulate\n            const instructions = [\n                SystemProgram.createAccount({\n                    fromPubkey: this.simulationUser,\n                    newAccountPubkey: kp1.publicKey,\n                    lamports: RENT_EXEMPT_TOKEN_ACCOUNT_LAMPORTS,\n                    space: AccountLayout.span,\n                    programId: TOKEN_PROGRAM_ID\n                }),\n                Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, sourceTokenMint, kp1.publicKey, this.simulationUser),\n                SystemProgram.createAccount({\n                    fromPubkey: this.simulationUser,\n                    newAccountPubkey: kp2.publicKey,\n                    lamports: RENT_EXEMPT_TOKEN_ACCOUNT_LAMPORTS,\n                    space: AccountLayout.span,\n                    programId: TOKEN_PROGRAM_ID\n                }),\n                Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, destinationTokenMint, kp2.publicKey, this.simulationUser),\n                SwapInstruction.exchange(this.poolAccount, this.authority, this.simulationUser, this.tokenAccounts, kp1.publicKey, kp2.publicKey, inAmount, new BN(0))\n            ];\n            const { value } = yield this.connection.simulateTransaction(new Transaction({ feePayer: this.simulationUser }).add(...instructions));\n            const result = findLogAndParse(value === null || value === void 0 ? void 0 : value.logs, 'GetDyUnderlying');\n            if (!result) {\n                throw new Error('Failed to fetch out amount');\n            }\n            return result.dy;\n        });\n    }\n    getMintAmount(depositAmounts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.simulationUser) {\n                throw new Error('Simulation user is empty');\n            }\n            if (!this.simulationTokenAccounts) {\n                throw new Error('Simulation accounts are empty');\n            }\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const instructions = [\n                SwapInstruction.addLiquidity(this.poolAccount, this.authority, this.simulationUser, this.tokenAccounts, this.poolTokenMint, this.simulationTokenAccounts.tokenAccounts, this.simulationTokenAccounts.tokenAccountLP, depositAmounts, new BN(0))\n            ];\n            const { value } = yield this.connection.simulateTransaction(new Transaction({ feePayer: this.simulationUser }).add(...instructions));\n            const result = findLogAndParseWithRegex(value === null || value === void 0 ? void 0 : value.logs, new RegExp('GetMintAmount: {\"mintAmount\": (.+)}', 'i'));\n            if (!result) {\n                throw new Error('Failed to fetch mint amount');\n            }\n            return result;\n        });\n    }\n    getWithdrawalAmounts(unmintAmount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.simulationUser) {\n                throw new Error('Simulation user is empty');\n            }\n            if (!this.simulationTokenAccounts) {\n                throw new Error('Simulation accounts are empty');\n            }\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const instructions = [\n                SwapInstruction.removeLiquidity(this.poolAccount, this.authority, this.simulationUser, this.tokenAccounts, this.poolTokenMint, this.simulationTokenAccounts.tokenAccounts, this.simulationTokenAccounts.tokenAccountLP, unmintAmount, [new BN(0), new BN(0), new BN(0)])\n            ];\n            const { value } = yield this.connection.simulateTransaction(new Transaction({ feePayer: this.simulationUser }).add(...instructions));\n            const result = findLogAndParse(value === null || value === void 0 ? void 0 : value.logs, 'GetWithdrawalAmounts');\n            if (!result) {\n                throw new Error('Failed to fetch withdrawal amounts');\n            }\n            return result;\n        });\n    }\n    getWithdrawalAmount(destinationTokenMint, unmintAmount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.simulationUser) {\n                throw new Error('Simulation user is empty');\n            }\n            if (!this.simulationTokenAccounts) {\n                throw new Error('Simulation accounts are empty');\n            }\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const tokenIndex = this.tokenMints.findIndex((tokenMint) => destinationTokenMint.equals(tokenMint));\n            if (tokenIndex < 0) {\n                throw Error(`Failed to find ${destinationTokenMint.toBase58()} in tokenMints`);\n            }\n            const instructions = [\n                SwapInstruction.removeLiquidityOneToken(this.poolAccount, this.authority, this.simulationUser, this.tokenAccounts, this.poolTokenMint, this.simulationTokenAccounts.tokenAccounts[tokenIndex], this.simulationTokenAccounts.tokenAccountLP, unmintAmount, new BN(0))\n            ];\n            const { value } = yield this.connection.simulateTransaction(new Transaction({ feePayer: this.simulationUser }).add(...instructions));\n            const result = findLogAndParse(value === null || value === void 0 ? void 0 : value.logs, 'GetWithdrawalAmount');\n            if (!result) {\n                throw new Error('Failed to fetch withdrawal amount');\n            }\n            return result;\n        });\n    }\n    getVirtualPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.simulationUser) {\n                throw new Error('Simulation user is empty');\n            }\n            if (!this.connection) {\n                throw new Error('Connection is not defined');\n            }\n            const instructions = [\n                SwapInstruction.getVirtualPrice(this.poolAccount, this.authority, this.simulationUser, this.tokenAccounts, this.poolTokenMint)\n            ];\n            const { value } = yield this.connection.simulateTransaction(new Transaction({ feePayer: this.simulationUser }).add(...instructions));\n            const result = findLogAndParse(value === null || value === void 0 ? void 0 : value.logs, 'GetVirtualPrice');\n            if (!result) {\n                throw new Error('Failed to fetch virtual price');\n            }\n            return result;\n        });\n    }\n    /**\n     * Setup simulation user, if payer is provided tries to create token accounts, otherwise assumes they are created\n     */\n    static setupSimulationUser(connection, simulationUser, tokenMints, poolTokenMint, payer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (payer) {\n                // Fund the system program account to avoid early failures\n                const transferIx = SystemProgram.transfer({\n                    fromPubkey: payer.publicKey,\n                    toPubkey: simulationUser,\n                    lamports: 100000000\n                });\n                const signature = yield connection.sendTransaction(new Transaction().add(transferIx), [payer], {\n                    skipPreflight: true\n                });\n                yield connection.confirmTransaction(signature, 'confirmed');\n                // Create necessary accounts if they do not exist\n                const tokenAccounts = yield Promise.all(tokenMints.map((tokenMint) => __awaiter(this, void 0, void 0, function* () {\n                    const token = new Token(connection, tokenMint, TOKEN_PROGRAM_ID, payer);\n                    const accountInfo = yield token.getOrCreateAssociatedAccountInfo(simulationUser);\n                    return accountInfo.address;\n                })));\n                const tokenLP = new Token(connection, poolTokenMint, TOKEN_PROGRAM_ID, payer);\n                return {\n                    tokenAccounts,\n                    tokenAccountLP: (yield tokenLP.getOrCreateAssociatedAccountInfo(simulationUser)).address\n                };\n            }\n            else {\n                return {\n                    tokenAccounts: yield Promise.all(tokenMints.map((tokenMint) => Token.getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, tokenMint, simulationUser))),\n                    tokenAccountLP: yield Token.getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, poolTokenMint, simulationUser)\n                };\n            }\n        });\n    }\n    static getTokenAccountMint(connection, publicKey, cache = false) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (cache) {\n                const allTokenMints = tokenMints;\n                const tokenMint = allTokenMints[publicKey.toBase58()];\n                if (tokenMint) {\n                    return new PublicKey(tokenMint);\n                }\n            }\n            const accountInfoData = (_a = (yield connection.getAccountInfo(publicKey))) === null || _a === void 0 ? void 0 : _a.data;\n            if (!accountInfoData) {\n                throw new Error(`Missing pool token account ${publicKey.toBase58()}`);\n            }\n            return new PublicKey(AccountLayout.decode(accountInfoData).mint);\n        });\n    }\n    static getTokenAccountMintAsync(publicKey) {\n        const allTokenMints = tokenMints;\n        const tokenMint = allTokenMints[publicKey.toBase58()];\n        if (!tokenMint) {\n            throw new Error('Token mint does not exist in token-mints.json');\n        }\n        return new PublicKey(tokenMint);\n    }\n}\nexport function findLogAndParse(logs, name) {\n    // State of the art solana methodology to consume return values\n    const re = new RegExp(`${name}: (\\\\{.+\\\\})`, 'i');\n    let result;\n    logs === null || logs === void 0 ? void 0 : logs.find((log) => {\n        const match = log.match(re);\n        if ((match === null || match === void 0 ? void 0 : match.length) === 2) {\n            result = JSON.parse(match[1]);\n        }\n        return match;\n    });\n    if (!result) {\n        return null;\n    }\n    return result;\n}\nexport function findLogAndParseWithRegex(logs, re) {\n    let result;\n    logs === null || logs === void 0 ? void 0 : logs.find((log) => {\n        const match = log.match(re);\n        if ((match === null || match === void 0 ? void 0 : match.length) === 2) {\n            result = new BN(match[1]);\n        }\n        return match;\n    });\n    if (!result) {\n        return null;\n    }\n    return result;\n}\n//# sourceMappingURL=index.js.map","export function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=sleep.js.map","/**\n * Borrowed from explorer.solana.com code written by @jstarry.\n */\n\nimport type { TransactionError } from \"@solana/web3.js\";\n\n/**\n * Solana error messages built-in.\n */\nexport const BUILTIN_SOLANA_ERROR_MESSAGES: Map<string, string> = new Map([\n  [\"GenericError\", \"generic instruction error\"],\n  [\"InvalidArgument\", \"invalid program argument\"],\n  [\"InvalidInstructionData\", \"invalid instruction data\"],\n  [\"InvalidAccountData\", \"invalid account data for instruction\"],\n  [\"AccountDataTooSmall\", \"account data too small for instruction\"],\n  [\"InsufficientFunds\", \"insufficient funds for instruction\"],\n  [\"IncorrectProgramId\", \"incorrect program id for instruction\"],\n  [\"MissingRequiredSignature\", \"missing required signature for instruction\"],\n  [\n    \"AccountAlreadyInitialized\",\n    \"instruction requires an uninitialized account\",\n  ],\n  [\"UninitializedAccount\", \"instruction requires an initialized account\"],\n  [\n    \"UnbalancedInstruction\",\n    \"sum of account balances before and after instruction do not match\",\n  ],\n  [\"ModifiedProgramId\", \"instruction modified the program id of an account\"],\n  [\n    \"ExternalAccountLamportSpend\",\n    \"instruction spent from the balance of an account it does not own\",\n  ],\n  [\n    \"ExternalAccountDataModified\",\n    \"instruction modified data of an account it does not own\",\n  ],\n  [\n    \"ReadonlyLamportChange\",\n    \"instruction changed the balance of a read-only account\",\n  ],\n  [\"ReadonlyDataModified\", \"instruction modified data of a read-only account\"],\n  [\"DuplicateAccountIndex\", \"instruction contains duplicate accounts\"],\n  [\"ExecutableModified\", \"instruction changed executable bit of an account\"],\n  [\"RentEpochModified\", \"instruction modified rent epoch of an account\"],\n  [\"NotEnoughAccountKeys\", \"insufficient account keys for instruction\"],\n  [\"AccountDataSizeChanged\", \"non-system instruction changed account size\"],\n  [\"AccountNotExecutable\", \"instruction expected an executable account\"],\n  [\n    \"AccountBorrowFailed\",\n    \"instruction tries to borrow reference for an account which is already borrowed\",\n  ],\n  [\n    \"AccountBorrowOutstanding\",\n    \"instruction left account with an outstanding borrowed reference\",\n  ],\n  [\n    \"DuplicateAccountOutOfSync\",\n    \"instruction modifications of multiply-passed account differ\",\n  ],\n  [\"Custom\", \"custom program error: {0}\"],\n  [\"InvalidError\", \"program returned invalid error code\"],\n  [\"ExecutableDataModified\", \"instruction changed executable accounts data\"],\n  [\n    \"ExecutableLamportChange\",\n    \"instruction changed the balance of a executable account\",\n  ],\n  [\"ExecutableAccountNotRentExempt\", \"executable accounts must be rent exempt\"],\n  [\"UnsupportedProgramId\", \"Unsupported program id\"],\n  [\"CallDepth\", \"Cross-program invocation call depth too deep\"],\n  [\"MissingAccount\", \"An account required by the instruction is missing\"],\n  [\n    \"ReentrancyNotAllowed\",\n    \"Cross-program invocation reentrancy not allowed for this instruction\",\n  ],\n  [\n    \"MaxSeedLengthExceeded\",\n    \"Length of the seed is too long for address generation\",\n  ],\n  [\"InvalidSeeds\", \"Provided seeds do not result in a valid address\"],\n  [\"InvalidRealloc\", \"Failed to reallocate account data\"],\n  [\"ComputationalBudgetExceeded\", \"Computational budget exceeded\"],\n  [\n    \"PrivilegeEscalation\",\n    \"Cross-program invocation with unauthorized signer or writable account\",\n  ],\n  [\n    \"ProgramEnvironmentSetupFailure\",\n    \"Failed to create program execution environment\",\n  ],\n  [\"ProgramFailedToComplete\", \"Program failed to complete\"],\n  [\"ProgramFailedToCompile\", \"Program failed to compile\"],\n  [\"Immutable\", \"Account is immutable\"],\n  [\"IncorrectAuthority\", \"Incorrect authority provided\"],\n  [\"BorshIoError\", \"Failed to serialize or deserialize account data: {0}\"],\n  [\n    \"AccountNotRentExempt\",\n    \"An account does not have enough lamports to be rent-exempt\",\n  ],\n  [\"InvalidAccountOwner\", \"Invalid account owner\"],\n  [\"ArithmeticOverflow\", \"Program arithmetic overflowed\"],\n  [\"UnsupportedSysvar\", \"Unsupported sysvar\"],\n  [\"IllegalOwner\", \"Provided owner is not allowed\"],\n]);\n\nexport type ProgramError = {\n  index: number;\n  message: string;\n};\n\nexport function getTransactionInstructionError(\n  error?: TransactionError | null\n): ProgramError | undefined {\n  if (!error) {\n    return;\n  }\n\n  if (typeof error === \"object\" && \"InstructionError\" in error) {\n    const innerError = error[\"InstructionError\"];\n    const index = innerError[0] as number;\n    const instructionError = innerError[1];\n\n    return {\n      index,\n      message: getInstructionError(instructionError),\n    };\n  }\n}\n\nfunction getInstructionError(error: unknown): string {\n  let out;\n  let value: string | null = null;\n\n  if (typeof error === \"string\") {\n    const message = BUILTIN_SOLANA_ERROR_MESSAGES.get(error);\n    if (message) {\n      return message;\n    }\n  } else if (\"Custom\" in (error as Record<string, string>)) {\n    out = BUILTIN_SOLANA_ERROR_MESSAGES.get(\"Custom\");\n    value = (error as { Custom: string })[\"Custom\"];\n  } else if (\"BorshIoError\" in (error as Record<string, string>)) {\n    out = BUILTIN_SOLANA_ERROR_MESSAGES.get(\"BorshIoError\");\n    value = (error as { BorshIoError: string })[\"BorshIoError\"];\n  }\n\n  if (out && value) {\n    return out.replace(\"{0}\", value);\n  }\n\n  return \"Unknown instruction error\";\n}\n","import { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { PublicKey } from \"./publicKey\";\n\n/**\n * ID of the memo program.\n */\nexport const MEMO_PROGRAM_ID = new PublicKey(\n  \"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"\n);\n\n/**\n * Creates a memo program instruction.\n *\n * More info: https://spl.solana.com/memo\n *\n * @param text Text of the memo.\n * @param signers Optional signers to validate.\n * @returns\n */\nexport const createMemoInstruction = (\n  text: string,\n  signers: readonly PublicKey[] = []\n): TransactionInstruction => {\n  return new TransactionInstruction({\n    programId: MEMO_PROGRAM_ID,\n    keys: signers.map((s) => ({\n      pubkey: s,\n      isSigner: true,\n      isWritable: false,\n    })),\n    data: Buffer.from(text, \"utf8\"),\n  });\n};\n","import type {\n  Signer,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Keypair, SystemProgram } from \"@solana/web3.js\";\n\nimport type { Provider } from \"..\";\nimport { TransactionEnvelope } from \"..\";\n\n/**\n * Takes in a simulation result of a transaction and prints it in a cool table.\n * ```\n *    ┌─────┬───┬───┬───┬───────────┬──────┬─────┬──────┬───┐\n *    │index│iso│mar│cum│ programId │quota │used │ left │CPI│\n *    ├─────┼───┼───┼───┼───────────┼──────┼─────┼──────┼───┤\n *    │  0  │298│281│464│'ATokenG..'│200000│24270│175730│ 1 │\n *    │  1  │298│ 74│538│'ATokenG..'│178730│21270│157460│ 1 │\n *    │  2  │298│ 74│612│'ATokenG..'│157460│27277│130183│ 1 │\n *    │  3  │298│ 42│686│'ATokenG..'│130183│21270│108913│ 1 │\n *    │  4  │338│265│951│'qExampL..'│108913│76289│ 32624│ 3 │\n *    └─────┴───┴───┴───┴───────────┴──────┴─────┴──────┴───┘\n * ```\n *\n * - **index**: the array index of the instruction within the transaction\n * - **iso**: the isolated size of the instruction (marginal cost of only the instruction)\n * - **mar**: the marginal size cost of the instruction (when added to previous)\n * - **cum**: the cumulative size of the instructions up until that instruction\n * - **quota/used/left**: [BPF instruction compute unit info](https://docs.solana.com/developing/programming-model/runtime)\n * - **CPI**: [the maximum depth of CPI](https://docs.solana.com/developing/programming-model/calling-between-programs) (current limit in Solana is 4)\n *\n * Safe for browser usage. Can be conveniently run with txEnvelope.simulateTable()\n */\nexport const printTXTable = (\n  tx: TransactionEnvelope,\n  transactionLogs: string[],\n  message: string\n) => {\n  if (message && message !== \"\") {\n    console.log(estimateTransactionSize(tx), message);\n  } else {\n    console.log(\"Transaction size:\", estimateTransactionSize(tx));\n  }\n\n  const computeUnitLogStack: string[] = [];\n  const cpiLogStack: number[] = [];\n  let currentIndex = -1;\n\n  transactionLogs.forEach((line) => {\n    if (line.includes(\" invoke [1]\")) {\n      currentIndex++;\n      cpiLogStack[currentIndex] = 0;\n    }\n    const cpiMatch = line.match(/ invoke \\[(\\d)\\]/);\n    if (cpiMatch && cpiMatch[1]) {\n      const cur = cpiLogStack[currentIndex];\n      cpiLogStack[currentIndex] =\n        cur === undefined\n          ? Number(cpiMatch[1]) - 1\n          : Math.max(Number(cpiMatch[1]) - 1, cur);\n    }\n\n    const computeMatch = line.match(/consumed \\d* of \\d* compute units/);\n    if (computeMatch && computeMatch[0]) {\n      computeUnitLogStack[currentIndex] = computeMatch[0];\n    }\n  });\n\n  const instructionTable: {\n    iso: number;\n    mar: number;\n    cum: number;\n    programId: string;\n    quota: number | undefined;\n    used: number | undefined;\n    left: number | undefined;\n    CPI: number | undefined;\n  }[] = [];\n\n  tx.instructions.forEach((instruction, i) => {\n    const computeUnitLog = computeUnitLogStack[i];\n\n    const computeUnitMatch = computeUnitLog?.match(/consumed (\\d*) of (\\d*)/);\n    const [consumed, quota] = computeUnitMatch\n      ?.slice(1, 3)\n      .map((num) => parseInt(num, 10)) || [undefined, undefined];\n\n    instructionTable.push({\n      iso: isolatedInstructionSize(tx.provider, instruction),\n      mar: marginalInstructionSize(\n        tx.provider,\n        tx.instructions.slice(0, i),\n        instruction\n      ),\n      cum: instructionsSize(tx.provider, tx.instructions.slice(0, i + 1)),\n      programId: instruction.programId.toBase58(),\n      quota: quota ? quota : i === 0 ? 200000 : undefined,\n      used: consumed,\n      left: quota && consumed ? quota - consumed : undefined,\n      CPI: cpiLogStack[i],\n    });\n  });\n\n  console.table(instructionTable);\n};\n\nexport class TXSizeEstimationError extends Error {\n  constructor(readonly underlyingError: unknown) {\n    super(`could not estimate transaction size`);\n    this.name = \"TXSizeEstimationError\";\n  }\n}\n\nexport class EstimatedTXTooBigError extends Error {\n  constructor(readonly tx: Transaction, readonly size: number) {\n    super(`Transaction too large`);\n    this.name = \"EstimatedTXTooBigError\";\n  }\n}\n\n/**\n * Builds a transaction and estimates the size in bytes. This number is primrily\n * to be used for checking to see if a transaction is too big and instructions\n * need to be split. It may not be 100% accurate.\n *\n * This is used in expectTXTable and is useful for increasing efficiency in\n * dapps that build large transactions.\n *\n * The max transaction size of a v1 Transaction in Solana is 1232 bytes.\n * For info about Transaction v2: https://docs.solana.com/proposals/transactions-v2\n *\n * Returns 8888 if the transaction was too big.\n * Returns 9999 if the transaction was unable to be built.\n */\nexport const estimateTransactionSize = (\n  txEnvelope: TransactionEnvelope\n): number => {\n  const result = txEnvelope.estimateSize();\n  if (\"size\" in result) {\n    return result.size;\n  }\n  if (result.error instanceof TXSizeEstimationError) {\n    console.error(\n      \"Unknown error estimating transaction size\",\n      result.error.underlyingError\n    );\n    return 9999;\n  }\n  return 8888;\n};\n\n/**\n * A dummy instruction that is probably tiny and has overlap with most instructions\n */\nconst simpleInstruction = () => {\n  const fs = getFakeSigner();\n\n  return SystemProgram.transfer({\n    fromPubkey: fs.publicKey,\n    toPubkey: fs.publicKey,\n    lamports: 1,\n  });\n};\n\nconst isolatedInstructionSize = (\n  randomProvider: Provider,\n  instruction: TransactionInstruction\n): number => {\n  return marginalInstructionSize(\n    randomProvider,\n    [simpleInstruction()],\n    instruction\n  );\n};\nconst marginalInstructionSize = (\n  randomProvider: Provider,\n  previousInstructions: TransactionInstruction[],\n  instruction: TransactionInstruction\n): number => {\n  const previousTxSize = instructionsSize(\n    randomProvider,\n    previousInstructions.length ? previousInstructions : [simpleInstruction()]\n  );\n\n  const biggerTxSize = instructionsSize(randomProvider, [\n    ...previousInstructions,\n    instruction,\n  ]);\n\n  return biggerTxSize - previousTxSize;\n};\nconst instructionsSize = (\n  randomProvider: Provider,\n  instructions: TransactionInstruction[]\n): number => {\n  const instructionedTx = new TransactionEnvelope(randomProvider, [\n    ...instructions,\n  ]);\n\n  return estimateTransactionSize(instructionedTx);\n};\n\nlet fakeSigner: Signer | undefined = undefined;\nconst getFakeSigner = (): Signer => {\n  if (!fakeSigner) {\n    fakeSigner = Keypair.generate();\n  }\n  return fakeSigner;\n};\n","import { PublicKey } from \"@saberhq/solana-contrib\";\nimport type { Layout } from \"@solana/buffer-layout\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport type { AccountInfo, MintInfo } from \"@solana/spl-token\";\nimport {\n  AccountLayout,\n  MintLayout as TokenMintLayout,\n  u64,\n} from \"@solana/spl-token\";\n\nexport {\n  Layout as TypedLayout,\n  Structure as TypedStructure,\n} from \"@solana/buffer-layout\";\n\n/**\n * Typed struct buffer layout\n * @param fields\n * @param property\n * @param decodePrefixes\n * @returns\n */\nexport const structLayout = <T>(\n  fields: Layout<T[keyof T]>[],\n  property?: string | undefined,\n  decodePrefixes?: boolean | undefined\n): BufferLayout.Structure<T> =>\n  BufferLayout.struct<T>(fields, property, decodePrefixes);\n\n/**\n * Layout for a public key\n */\nexport const PublicKeyLayout = (property = \"publicKey\"): BufferLayout.Blob => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const Uint64Layout = (property = \"uint64\"): BufferLayout.Blob => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a TokenAccount.\n */\nexport const TokenAccountLayout = AccountLayout as Layout<{\n  mint: Buffer;\n  owner: Buffer;\n  amount: Buffer;\n  delegateOption: number;\n  delegate: Buffer;\n  state: number;\n  delegatedAmount: Buffer;\n  isNativeOption: number;\n  isNative: Buffer;\n  closeAuthorityOption: number;\n  closeAuthority: Buffer;\n}>;\n\n/**\n * Layout for a Mint.\n */\nexport const MintLayout = TokenMintLayout as Layout<{\n  mintAuthorityOption: number;\n  mintAuthority: Buffer;\n  supply: Buffer;\n  decimals: number;\n  isInitialized: number;\n  freezeAuthorityOption: number;\n  freezeAuthority: Buffer;\n}>;\n\n/**\n * Deserializes a token account.\n * @param address\n * @param data\n * @returns\n */\nexport const deserializeAccount = (\n  data: Buffer\n): Omit<AccountInfo, \"address\"> => {\n  const accountInfo = TokenAccountLayout.decode(data);\n\n  const mint = new PublicKey(accountInfo.mint);\n  const owner = new PublicKey(accountInfo.owner);\n  const amount = u64.fromBuffer(accountInfo.amount);\n\n  let delegate: PublicKey | null;\n  let delegatedAmount: u64;\n\n  if (accountInfo.delegateOption === 0) {\n    delegate = null;\n    delegatedAmount = new u64(0);\n  } else {\n    delegate = new PublicKey(accountInfo.delegate);\n    delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  const isInitialized = accountInfo.state !== 0;\n  const isFrozen = accountInfo.state === 2;\n\n  let rentExemptReserve: u64 | null;\n  let isNative: boolean;\n\n  if (accountInfo.isNativeOption === 1) {\n    rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    isNative = true;\n  } else {\n    rentExemptReserve = null;\n    isNative = false;\n  }\n\n  let closeAuthority: PublicKey | null;\n  if (accountInfo.closeAuthorityOption === 0) {\n    closeAuthority = null;\n  } else {\n    closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return {\n    mint,\n    owner,\n    amount,\n    delegate,\n    delegatedAmount,\n    isInitialized,\n    isFrozen,\n    rentExemptReserve,\n    isNative,\n    closeAuthority,\n  };\n};\n\n/**\n * Deserialize a {@link Buffer} into a {@link MintInfo}.\n * @param data\n * @returns\n */\nexport const deserializeMint = (data: Buffer): MintInfo => {\n  if (data.length !== MintLayout.span) {\n    throw new Error(\"Not a valid Mint\");\n  }\n\n  const mintInfo = MintLayout.decode(data);\n\n  let mintAuthority: PublicKey | null;\n  if (mintInfo.mintAuthorityOption === 0) {\n    mintAuthority = null;\n  } else {\n    mintAuthority = new PublicKey(mintInfo.mintAuthority);\n  }\n\n  const supply = u64.fromBuffer(mintInfo.supply);\n  const isInitialized = mintInfo.isInitialized !== 0;\n\n  let freezeAuthority: PublicKey | null;\n  if (mintInfo.freezeAuthorityOption === 0) {\n    freezeAuthority = null;\n  } else {\n    freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n  }\n\n  return {\n    mintAuthority,\n    supply,\n    decimals: mintInfo.decimals,\n    isInitialized,\n    freezeAuthority,\n  };\n};\n","import type { Cluster, ConnectionConfig } from \"@solana/web3.js\";\n\n/**\n * A network: a Solana cluster or localnet.\n */\nexport type Network = Cluster | \"localnet\";\n\n/**\n * Formats the network as a string.\n * @param network\n * @returns\n */\nexport const formatNetwork = (network: Network): string => {\n  if (network === \"mainnet-beta\") {\n    return \"mainnet\";\n  }\n  return network;\n};\n\nexport type NetworkConfig = Readonly<\n  Omit<ConnectionConfig, \"wsEndpoint\"> & {\n    name: string;\n    /**\n     * HTTP endpoint to connect to for this network.\n     */\n    endpoint: string;\n    /**\n     * Websocket endpoint to connect to for this network.\n     */\n    endpointWs?: string;\n  }\n>;\n\n/**\n * Default configuration for all networks.\n */\nexport const DEFAULT_NETWORK_CONFIG_MAP = {\n  \"mainnet-beta\": {\n    name: \"Mainnet Beta\",\n    endpoint: \"https://solana-api.projectserum.com/\",\n  },\n  devnet: {\n    name: \"Devnet\",\n    endpoint: \"https://api.devnet.solana.com/\",\n  },\n  testnet: {\n    name: \"Testnet\",\n    endpoint: \"https://api.testnet.solana.com/\",\n  },\n  localnet: {\n    name: \"Localnet\",\n    endpoint: \"http://127.0.0.1:8899\",\n  },\n} as const;\n\nexport type NetworkConfigMap = { [N in Network]: NetworkConfig };\n","import BN from \"bn.js\";\nimport JSBI from \"jsbi\";\nimport { TEN } from \"./constants\";\nexport function parseBigintIsh(bigintIsh) {\n    return bigintIsh instanceof JSBI\n        ? bigintIsh\n        : typeof bigintIsh === \"bigint\" || BN.isBN(bigintIsh)\n            ? JSBI.BigInt(bigintIsh.toString())\n            : JSBI.BigInt(bigintIsh);\n}\n/**\n * Creates the multipler for an amount of decimals.\n * @param decimals\n * @returns\n */\nexport const makeDecimalMultiplier = (decimals) => {\n    return JSBI.exponentiate(TEN, JSBI.BigInt(decimals));\n};\n//# sourceMappingURL=utils.js.map","import _Big from \"big.js\";\nimport _Decimal from \"decimal.js-light\";\nimport JSBI from \"jsbi\";\nimport invariant from \"tiny-invariant\";\nimport toFormat from \"toformat\";\nimport { Rounding } from \"./constants\";\nimport { parseBigintIsh } from \"./utils\";\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport const Decimal = toFormat(_Decimal);\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nexport const Big = toFormat(_Big);\nconst toSignificantRounding = {\n    [Rounding.ROUND_DOWN]: _Decimal.ROUND_DOWN,\n    [Rounding.ROUND_HALF_UP]: _Decimal.ROUND_HALF_UP,\n    [Rounding.ROUND_UP]: _Decimal.ROUND_UP,\n};\nconst toFixedRounding = {\n    [Rounding.ROUND_DOWN]: 0 /* RoundDown */,\n    [Rounding.ROUND_HALF_UP]: 1 /* RoundHalfUp */,\n    [Rounding.ROUND_UP]: 3 /* RoundUp */,\n};\n/**\n * Number with an integer numerator and denominator.\n */\nexport class Fraction {\n    constructor(numerator, denominator = JSBI.BigInt(1)) {\n        /**\n         * This boolean checks to see if this is actually a {@link Fraction}.\n         */\n        this.isFraction = true;\n        this.numerator = JSBI.BigInt(parseBigintIsh(numerator));\n        this.denominator = JSBI.BigInt(parseBigintIsh(denominator));\n    }\n    /**\n     * Returns true if the other object is a {@link Fraction}.\n     *\n     * @param other\n     * @returns\n     */\n    static isFraction(other) {\n        return (typeof other === \"object\" &&\n            other !== null &&\n            \"numerator\" in other &&\n            \"denominator\" in other);\n    }\n    /**\n     * Compares this {@link Fraction} to the other {@link Fraction}.\n     */\n    compareTo(other) {\n        if (this.equalTo(other)) {\n            return 0;\n        }\n        return this.greaterThan(other) ? 1 : -1;\n    }\n    /**\n     * Parses a {@link Fraction} from a float.\n     * @param number Number to parse.\n     * @param decimals Number of decimals of precision. (default 10)\n     * @returns Fraction\n     */\n    static fromNumber(number, decimals = 10) {\n        const multiplier = Math.pow(10, decimals);\n        return new Fraction(Math.floor(number * multiplier), multiplier);\n    }\n    /**\n     * Attempts to parse a {@link Fraction}.\n     * @param fractionish Fraction or BigintIsh.\n     * @returns\n     */\n    static tryParseFraction(fractionish) {\n        if (Fraction.isFraction(fractionish)) {\n            return fractionish;\n        }\n        try {\n            return new Fraction(parseBigintIsh(fractionish));\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                throw new Error(`Could not parse fraction: ${e.message}`);\n            }\n            throw new Error(`Could not parse fraction`);\n        }\n    }\n    // performs floor division\n    get quotient() {\n        return JSBI.divide(this.numerator, this.denominator);\n    }\n    // remainder after floor division\n    get remainder() {\n        return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator);\n    }\n    invert() {\n        return new Fraction(this.denominator, this.numerator);\n    }\n    add(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n            return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);\n        }\n        return new Fraction(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n    }\n    subtract(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n            return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);\n        }\n        return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n    }\n    lessThan(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n    }\n    equalTo(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n    }\n    greaterThan(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n    }\n    multiply(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        return new Fraction(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));\n    }\n    divide(other) {\n        const otherParsed = Fraction.tryParseFraction(other);\n        return new Fraction(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));\n    }\n    toSignificant(significantDigits, format = { groupSeparator: \"\" }, rounding = Rounding.ROUND_HALF_UP) {\n        invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n        invariant(significantDigits > 0, `${significantDigits} is not positive.`);\n        Decimal.set({\n            precision: significantDigits + 1,\n            rounding: toSignificantRounding[rounding],\n        });\n        const quotient = new Decimal(this.numerator.toString())\n            .div(this.denominator.toString())\n            .toSignificantDigits(significantDigits);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n        return quotient.toFormat(quotient.decimalPlaces(), format);\n    }\n    toFixed(decimalPlaces, format = { groupSeparator: \"\" }, rounding = Rounding.ROUND_HALF_UP) {\n        invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n        invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n        Big.DP = decimalPlaces;\n        Big.RM = toFixedRounding[rounding];\n        return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n    }\n    /**\n     * Helper method for converting any super class back to a fraction\n     */\n    get asFraction() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /**\n     * Gets the value of this {@link Fraction} as a number.\n     */\n    get asNumber() {\n        return parseFloat(this.toFixed(10));\n    }\n}\nFraction.ZERO = new Fraction(0);\nFraction.ONE = new Fraction(0);\n//# sourceMappingURL=fraction.js.map","import JSBI from \"jsbi\";\nimport { Fraction } from \"./fraction\";\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100));\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction) {\n    return new Percent(fraction.numerator, fraction.denominator);\n}\nexport class Percent extends Fraction {\n    constructor() {\n        super(...arguments);\n        /**\n         * This boolean prevents a fraction from being interpreted as a Percent\n         */\n        this.isPercent = true;\n    }\n    /**\n     * Parses a {@link Percent} from a float.\n     * @param number Number to parse. (100% is 1.00)\n     * @param decimals Number of decimals of precision. (default 10)\n     * @returns Percent\n     */\n    static fromNumber(number, decimals = 10) {\n        const frac = Fraction.fromNumber(number, decimals);\n        return new Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Parses a {@link Percent} from a given number of bps.\n     * @returns Percent\n     */\n    static fromBPS(bps) {\n        return new Percent(bps, 10000);\n    }\n    add(other) {\n        return toPercent(super.add(other));\n    }\n    subtract(other) {\n        return toPercent(super.subtract(other));\n    }\n    multiply(other) {\n        return toPercent(super.multiply(other));\n    }\n    divide(other) {\n        return toPercent(super.divide(other));\n    }\n    toSignificant(significantDigits = 5, format, rounding) {\n        return super\n            .multiply(ONE_HUNDRED)\n            .toSignificant(significantDigits, format, rounding);\n    }\n    toFixed(decimalPlaces = 2, format, rounding) {\n        return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n    }\n    /**\n     * Returns true if the other object is a {@link Percent}.\n     *\n     * @param other\n     * @returns\n     */\n    static isPercent(other) {\n        var _a;\n        return (Fraction.isFraction(other) &&\n            ((_a = other) === null || _a === void 0 ? void 0 : _a.isPercent) === true);\n    }\n}\nPercent.ZERO = new Percent(0);\n/**\n * 1%\n */\nPercent.ONE = new Percent(1, 100);\n/**\n * 100% (1/1)\n */\nPercent.ONE_HUNDRED = new Percent(1);\n//# sourceMappingURL=percent.js.map","import JSBI from \"jsbi\";\nimport invariant from \"tiny-invariant\";\nimport { MAX_U64, MAX_U256, Rounding, ZERO } from \"./constants\";\nimport { Big, Fraction } from \"./fraction\";\nimport { Percent } from \"./percent\";\nimport { makeDecimalMultiplier, parseBigintIsh } from \"./utils\";\nexport class TokenAmountOverflow extends RangeError {\n    constructor(type, amount) {\n        super(`Token amount overflows ${type}: ${amount.toString()}`);\n    }\n}\nexport class TokenAmountUnderflow extends RangeError {\n    constructor(amount) {\n        super(`Token amount must be greater than zero: ${amount.toString()}`);\n    }\n}\nexport function validateU64(value) {\n    if (!JSBI.greaterThanOrEqual(value, ZERO)) {\n        throw new TokenAmountUnderflow(value);\n    }\n    if (!JSBI.lessThanOrEqual(value, MAX_U64)) {\n        throw new TokenAmountOverflow(\"u64\", value);\n    }\n}\nexport function validateU256(value) {\n    if (!JSBI.greaterThanOrEqual(value, ZERO)) {\n        throw new TokenAmountUnderflow(value);\n    }\n    if (!JSBI.lessThanOrEqual(value, MAX_U256)) {\n        throw new TokenAmountOverflow(\"u256\", value);\n    }\n}\nconst stripTrailingZeroes = (num) => {\n    const [head, tail, ...rest] = num.split(\".\");\n    if (rest.length > 0 || !head) {\n        console.warn(`Invalid number passed to stripTrailingZeroes: ${num}`);\n        return num;\n    }\n    if (!tail) {\n        return num;\n    }\n    return `${head}.${tail.replace(/\\.0+$/, \"\")}`;\n};\nexport class TokenAmount extends Fraction {\n    // amount _must_ be raw, i.e. in the native representation\n    constructor(token, amount, validate) {\n        const parsedAmount = parseBigintIsh(amount);\n        validate === null || validate === void 0 ? void 0 : validate(parsedAmount);\n        super(parsedAmount, makeDecimalMultiplier(token.decimals));\n        this.token = token;\n    }\n    /**\n     * Parses a token amount from a decimal representation.\n     * @param token\n     * @param uiAmount\n     * @returns\n     */\n    static parseFromString(token, uiAmount) {\n        const parts = uiAmount.split(\".\");\n        if (parts.length === 0) {\n            throw new Error(\"empty number\");\n        }\n        invariant(parts[0]);\n        const whole = JSBI.BigInt(parts[0]);\n        const fraction = parts[1]\n            ? JSBI.BigInt(parts[1].slice(0, token.decimals) +\n                Array(token.decimals).fill(\"0\").slice(parts[1].length).join(\"\"))\n            : JSBI.BigInt(0);\n        const combined = JSBI.add(JSBI.multiply(whole, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))), fraction);\n        return new TokenAmount(token, combined);\n    }\n    get raw() {\n        return this.numerator;\n    }\n    toSignificant(significantDigits = 6, format, rounding = Rounding.ROUND_DOWN) {\n        return super.toSignificant(significantDigits, format, rounding);\n    }\n    toFixed(decimalPlaces = this.token.decimals, format, rounding = Rounding.ROUND_DOWN) {\n        invariant(decimalPlaces <= this.token.decimals, \"DECIMALS\");\n        return super.toFixed(decimalPlaces, format, rounding);\n    }\n    toExact(format = { groupSeparator: \"\" }) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        Big.DP = this.token.decimals;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        return new Big(this.numerator).div(this.denominator.toString()).toFormat(format);\n    }\n    add(other) {\n        invariant(this.token.equals(other.token), `add token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        return new TokenAmount(this.token, JSBI.add(this.raw, other.raw));\n    }\n    subtract(other) {\n        invariant(this.token.equals(other.token), `subtract token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw));\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n    divideByAmount(other) {\n        invariant(this.token.equals(other.token), `divideByAmount token mismatch: ${this.token.toString()} !== ${other.token.toString()}`);\n        const frac = this.divide(other);\n        return new Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Gets this TokenAmount as a percentage of the other TokenAmount.\n     * @param other\n     * @returns\n     */\n    divideBy(other) {\n        const frac = this.divide(other);\n        return new Percent(frac.numerator, frac.denominator);\n    }\n    /**\n     * Multiplies this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n    multiplyBy(percent) {\n        return new TokenAmount(this.token, percent.asFraction.multiply(this.raw).toFixed(0));\n    }\n    /**\n     * Reduces this token amount by a percent.\n     * WARNING: this loses precision\n     * @param percent\n     * @returns\n     */\n    reduceBy(percent) {\n        return this.multiplyBy(new Percent(1, 1).subtract(percent));\n    }\n    /**\n     * Formats this number using Intl.NumberFormatOptions\n     * @param param0\n     * @returns\n     */\n    format({ numberFormatOptions, locale } = {}) {\n        const asExactString = this.toFixed(this.token.decimals);\n        const asNumber = parseFloat(asExactString);\n        return `${numberFormatOptions !== undefined\n            ? asNumber.toLocaleString(locale, numberFormatOptions)\n            : stripTrailingZeroes(asExactString)}`;\n    }\n    /**\n     * Gets the value of this {@link TokenAmount} as a number.\n     */\n    get asNumber() {\n        return parseFloat(this.toExact());\n    }\n    /**\n     * Returns true if the other object is a {@link TokenAmount}.\n     *\n     * @param other\n     * @returns\n     */\n    static isTokenAmount(other) {\n        var _a;\n        return (Fraction.isFraction(other) &&\n            !!((_a = other) === null || _a === void 0 ? void 0 : _a.token));\n    }\n}\n//# sourceMappingURL=tokenAmount.js.map","/**\n * These types all come from the @solana/spl-token-registry package.\n *\n * We re-export them here so we do not have to have a hard dependency on\n * that package, which is massive.\n */\n\n/**\n * Chain ID.\n */\nexport enum ENV {\n  MainnetBeta = 101,\n  Testnet = 102,\n  Devnet = 103,\n}\n\n/**\n * A token list.\n */\nexport interface SPLTokenList {\n  readonly name: string;\n  readonly logoURI: string;\n  readonly tags: { [tag: string]: TagDetails };\n  readonly timestamp: string;\n  readonly tokens: SPLTokenInfo[];\n}\n\n/**\n * Tag details.\n */\nexport interface TagDetails {\n  readonly name: string;\n  readonly description: string;\n}\n\n/**\n * TokenExtensions.\n */\nexport interface SPLTokenExtensions {\n  readonly website?: string;\n  readonly bridgeContract?: string;\n  readonly assetContract?: string;\n  readonly address?: string;\n  readonly explorer?: string;\n  readonly twitter?: string;\n  readonly github?: string;\n  readonly medium?: string;\n  readonly tgann?: string;\n  readonly tggroup?: string;\n  readonly discord?: string;\n  readonly serumV3Usdt?: string;\n  readonly serumV3Usdc?: string;\n  readonly coingeckoId?: string;\n  readonly imageUrl?: string;\n  readonly description?: string;\n}\n\n/**\n * TokenInfo.\n */\nexport interface SPLTokenInfo {\n  readonly chainId: number;\n  readonly address: string;\n  readonly name: string;\n  readonly decimals: number;\n  readonly symbol: string;\n  readonly logoURI?: string;\n  readonly tags?: string[];\n  readonly extensions?: SPLTokenExtensions;\n}\n","import type { Network } from \"@saberhq/solana-contrib\";\nimport { PublicKey } from \"@saberhq/solana-contrib\";\nimport { NATIVE_MINT } from \"@solana/spl-token\";\nimport type { Connection } from \"@solana/web3.js\";\nimport type { Token as UToken } from \"@ubeswap/token-math\";\n\nimport { deserializeMint } from \"./layout\";\nimport type { TokenInfo } from \"./tokenList\";\n\n/**\n * Magic value representing the raw, underlying Solana native asset.\n */\nexport const RAW_SOL_MINT = new PublicKey(\n  \"RawSo11111111111111111111111111111111111112\"\n);\n\n/**\n * Token information.\n */\nexport class Token implements UToken<Token> {\n  /**\n   * The network that the Token is on.\n   */\n  readonly network: Network;\n  private _mintAccount: PublicKey | null = null;\n\n  constructor(readonly info: TokenInfo) {\n    this.network = chainIdToNetwork(info.chainId) ?? \"localnet\";\n  }\n\n  /**\n   * The mint PublicKey of the token.\n   *\n   * Avoid using this value to print it to a string, as base58\n   * strings are relatively slow to create since they require the use\n   * of hash functions.\n   */\n  get mintAccount(): PublicKey {\n    if (this._mintAccount) {\n      return this._mintAccount;\n    }\n\n    this._mintAccount = new PublicKey(this.info.address);\n    return this._mintAccount;\n  }\n\n  /**\n   * If true, this token represents unwrapped, native, \"raw\" SOL.\n   */\n  get isRawSOL(): boolean {\n    return this.mintAccount.equals(RAW_SOL_MINT);\n  }\n\n  /**\n   * The Base58 string representation of the mint address.\n   */\n  get address(): string {\n    return this.info.address;\n  }\n\n  /**\n   * The chain ID of the token.\n   */\n  get chainId(): number {\n    return this.info.chainId;\n  }\n\n  /**\n   * Number of decimals of the token.\n   */\n  get decimals(): number {\n    return this.info.decimals;\n  }\n\n  /**\n   * The name of the token.\n   */\n  get name(): string {\n    return this.info.name;\n  }\n\n  /**\n   * The symbol of the token.\n   */\n  get symbol(): string {\n    return this.info.symbol;\n  }\n\n  /**\n   * The token's icon to render.\n   */\n  get icon(): string | undefined {\n    return this.info.logoURI;\n  }\n\n  equals(other: Token): boolean {\n    return tokensEqual(this, other);\n  }\n\n  toString(): string {\n    return `Token[mint=${this.address}, decimals=${this.decimals}, network=${this.network}]`;\n  }\n\n  toJSON(): unknown {\n    return this.info;\n  }\n\n  /**\n   * Returns true if the given tag is present.\n   * @param tag The tag to check.\n   * @returns\n   */\n  hasTag(tag: string): boolean {\n    return !!this.info.tags?.includes(tag);\n  }\n\n  /**\n   * Loads a token from a Mint.\n   * @param mint\n   * @param opts\n   * @returns\n   */\n  static fromMint = (\n    mint: PublicKey | string,\n    decimals: number,\n    opts: Partial<Omit<TokenInfo, \"address\" | \"decimals\">> = {}\n  ): Token =>\n    new Token({\n      ...opts,\n\n      // required\n      address: mint.toString(),\n      decimals,\n\n      // optional\n      name: opts.name ?? `Token ${mint.toString().slice(0, 4)}`,\n      symbol: opts.symbol ?? mint.toString().slice(0, 5),\n      chainId: opts.chainId ?? ChainId.Localnet,\n    });\n\n  /**\n   * Loads a token from a Connection.\n   *\n   * @param connection\n   * @param mint\n   * @param info\n   */\n  static load = async (\n    connection: Connection,\n    mint: PublicKey,\n    info: Partial<Omit<TokenInfo, \"address\" | \"decimals\">> = {}\n  ): Promise<Token | null> => {\n    const mintAccountInfo = await connection.getAccountInfo(mint);\n    if (!mintAccountInfo) {\n      return null;\n    }\n    const mintInfo = deserializeMint(mintAccountInfo.data);\n    return Token.fromMint(mint, mintInfo.decimals, info);\n  };\n}\n\n/**\n * Checks if two tokens are equal.\n * @param a\n * @param b\n * @returns\n */\nexport const tokensEqual = (\n  a: Token | undefined,\n  b: Token | undefined\n): boolean =>\n  a !== undefined &&\n  b !== undefined &&\n  a.address === b.address &&\n  a.network === b.network;\n\n/**\n * Map of network to Token\n */\nexport type TokenMap = { [c in Network]: Token };\n\nconst rawSol = {\n  address: RAW_SOL_MINT.toString(),\n  name: \"Solana\",\n  symbol: \"SOL\",\n  decimals: 9,\n  logoURI:\n    \"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png\",\n};\n\nconst wrappedSol = {\n  address: NATIVE_MINT.toString(),\n  name: \"Wrapped SOL\",\n  symbol: \"SOL\",\n  decimals: 9,\n  logoURI:\n    \"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png\",\n};\n\n/**\n * Creates a Token for all networks.\n */\nexport const makeTokenForAllNetworks = (\n  token: Omit<TokenInfo, \"chainId\">\n): TokenMap => ({\n  \"mainnet-beta\": new Token({ ...token, chainId: ChainId.MainnetBeta }),\n  devnet: new Token({ ...token, chainId: ChainId.Devnet }),\n  testnet: new Token({ ...token, chainId: ChainId.Testnet }),\n  localnet: new Token({ ...token, chainId: ChainId.Localnet }),\n});\n\n// comes from @solana/spl-token-registry, except we've added localnet\nexport enum ChainId {\n  MainnetBeta = 101,\n  Testnet = 102,\n  Devnet = 103,\n  Localnet = 104,\n}\n\nexport const NETWORK_TO_CHAIN_ID = {\n  \"mainnet-beta\": ChainId.MainnetBeta,\n  devnet: ChainId.Devnet,\n  testnet: ChainId.Testnet,\n  localnet: 104,\n};\n\nexport const CHAIN_ID_TO_NETWORK: { [E in ChainId]: Network } = Object.entries(\n  NETWORK_TO_CHAIN_ID\n).reduce((acc, [network, env]) => ({ ...acc, [env]: network }), {}) as {\n  [E in ChainId]: Network;\n};\n\n/**\n * Gets the chain id associated with a network.\n * @param network\n * @returns\n */\nexport const networkToChainId = (network: Network): ChainId =>\n  NETWORK_TO_CHAIN_ID[network];\n\n/**\n * Gets the Network associated with a chain id.\n * @param network\n * @returns\n */\nexport const chainIdToNetwork = (env: ChainId): Network =>\n  CHAIN_ID_TO_NETWORK[env];\n\n/**\n * Raw Solana token.\n *\n * This is a magic value. This is not a real token.\n */\nexport const RAW_SOL: TokenMap = makeTokenForAllNetworks(rawSol);\n\n/**\n * Wrapped Solana token.\n */\nexport const WRAPPED_SOL: TokenMap = makeTokenForAllNetworks(wrappedSol);\n","/**\n * This file is a port of serum-common, which was built for web3.js 0.x.\n */\n\nimport type { Provider } from \"@saberhq/solana-contrib\";\nimport type { AccountInfo, MintInfo } from \"@solana/spl-token\";\nimport { Token as SPLToken, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { TransactionInstruction } from \"@solana/web3.js\";\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport type BN from \"bn.js\";\n\nimport { deserializeAccount, deserializeMint, MintLayout, Token } from \".\";\n\nexport * as token from \"./token\";\n\nexport const SPL_SHARED_MEMORY_ID = new PublicKey(\n  \"shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL\"\n);\n\nexport async function createMint(\n  provider: Provider,\n  authority?: PublicKey,\n  decimals?: number\n): Promise<PublicKey> {\n  if (authority === undefined) {\n    authority = provider.wallet.publicKey;\n  }\n  const mint = Keypair.generate();\n  const instructions = await createMintInstructions(\n    provider,\n    authority,\n    mint.publicKey,\n    decimals\n  );\n\n  const tx = new Transaction();\n  tx.add(...instructions);\n\n  await provider.send(tx, [mint]);\n\n  return mint.publicKey;\n}\n\n/**\n * Creates a Token.\n *\n * @param provider\n * @param authority The mint authority.\n * @param decimals Number of decimals.\n * @returns\n */\nexport async function createToken(\n  provider: Provider,\n  authority?: PublicKey,\n  decimals = 6\n): Promise<Token> {\n  return Token.fromMint(\n    await createMint(provider, authority, decimals),\n    decimals\n  );\n}\n\nexport async function createMintInstructions(\n  provider: Provider,\n  authority: PublicKey,\n  mint: PublicKey,\n  decimals = 6\n): Promise<TransactionInstruction[]> {\n  const instructions = [\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: mint,\n      space: MintLayout.span,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        MintLayout.span\n      ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint,\n      decimals,\n      authority,\n      null\n    ),\n  ];\n  return instructions;\n}\n\nexport async function createMintAndVault(\n  provider: Provider,\n  amount: BN,\n  owner?: PublicKey,\n  decimals?: number\n): Promise<[PublicKey, PublicKey]> {\n  if (owner === undefined) {\n    owner = provider.wallet.publicKey;\n  }\n  const mint = Keypair.generate();\n  const vault = Keypair.generate();\n  const tx = new Transaction();\n  tx.add(\n    ...(await createMintInstructions(\n      provider,\n      provider.wallet.publicKey,\n      mint.publicKey,\n      decimals\n    )),\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: vault.publicKey,\n      space: 165,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        165\n      ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      vault.publicKey,\n      owner\n    ),\n    SPLToken.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      vault.publicKey,\n      provider.wallet.publicKey,\n      [],\n      amount\n    )\n  );\n  await provider.send(tx, [mint, vault]);\n  return [mint.publicKey, vault.publicKey];\n}\n\nexport async function createTokenAccountInstrs(\n  provider: Provider,\n  newAccountPubkey: PublicKey,\n  mint: PublicKey,\n  owner: PublicKey,\n  lamports?: number\n): Promise<TransactionInstruction[]> {\n  if (lamports === undefined) {\n    lamports = await provider.connection.getMinimumBalanceForRentExemption(165);\n  }\n  return [\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey,\n      space: 165,\n      lamports,\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    SPLToken.createInitAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      mint,\n      newAccountPubkey,\n      owner\n    ),\n  ];\n}\n\nexport async function createAccountRentExempt(\n  provider: Provider,\n  programId: PublicKey,\n  size: number\n): Promise<Keypair> {\n  const acc = Keypair.generate();\n  const tx = new Transaction();\n  tx.add(\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: acc.publicKey,\n      space: size,\n      lamports: await provider.connection.getMinimumBalanceForRentExemption(\n        size\n      ),\n      programId,\n    })\n  );\n  await provider.send(tx, [acc]);\n  return acc;\n}\n\nexport async function getMintInfo(\n  provider: Provider,\n  addr: PublicKey\n): Promise<MintInfo> {\n  const depositorAccInfo = await provider.getAccountInfo(addr);\n  if (depositorAccInfo === null) {\n    throw new Error(\"Failed to find token mint account\");\n  }\n  return deserializeMint(depositorAccInfo.accountInfo.data);\n}\n\nexport async function getTokenAccount(\n  provider: Provider,\n  addr: PublicKey\n): Promise<Omit<AccountInfo, \"address\">> {\n  const depositorAccInfo = await provider.getAccountInfo(addr);\n  if (depositorAccInfo === null) {\n    throw new Error(\"Failed to find token account\");\n  }\n  return deserializeAccount(depositorAccInfo.accountInfo.data);\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport type ProgramAccount<T> = {\n  publicKey: PublicKey;\n  account: T;\n};\n","import { ONE, ZERO } from \"@saberhq/token-utils\";\nimport JSBI from \"jsbi\";\n\nconst N_COINS = JSBI.BigInt(2); // n\n\nconst abs = (a: JSBI): JSBI => {\n  if (JSBI.greaterThan(a, ZERO)) {\n    return a;\n  }\n  return JSBI.unaryMinus(a);\n};\n\n// maximum iterations of newton's method approximation\nconst MAX_ITERS = 20;\n\n/**\n * Compute the StableSwap invariant\n * @param ampFactor Amplification coefficient (A)\n * @param amountA Swap balance of token A\n * @param amountB Swap balance of token B\n * Reference: https://github.com/curvefi/curve-contract/blob/7116b4a261580813ef057887c5009e22473ddb7d/tests/simulation.py#L31\n */\nexport const computeD = (\n  ampFactor: JSBI,\n  amountA: JSBI,\n  amountB: JSBI\n): JSBI => {\n  const Ann = JSBI.multiply(ampFactor, N_COINS); // A*n^n\n  const S = JSBI.add(amountA, amountB); // sum(x_i), a.k.a S\n  if (JSBI.equal(S, ZERO)) {\n    return ZERO;\n  }\n\n  let dPrev = ZERO;\n  let d = S;\n\n  for (\n    let i = 0;\n    JSBI.greaterThan(abs(JSBI.subtract(d, dPrev)), ONE) && i < MAX_ITERS;\n    i++\n  ) {\n    dPrev = d;\n    let dP = d;\n    dP = JSBI.divide(JSBI.multiply(dP, d), JSBI.multiply(amountA, N_COINS));\n    dP = JSBI.divide(JSBI.multiply(dP, d), JSBI.multiply(amountB, N_COINS));\n\n    const dNumerator = JSBI.multiply(\n      d,\n      JSBI.add(JSBI.multiply(Ann, S), JSBI.multiply(dP, N_COINS))\n    );\n    const dDenominator = JSBI.add(\n      JSBI.multiply(d, JSBI.subtract(Ann, ONE)),\n      JSBI.multiply(dP, JSBI.add(N_COINS, ONE))\n    );\n    d = JSBI.divide(dNumerator, dDenominator);\n  }\n\n  return d;\n};\n\n/**\n * Compute Y amount in respect to X on the StableSwap curve\n * @param ampFactor Amplification coefficient (A)\n * @param x The quantity of underlying asset\n * @param d StableSwap invariant\n * Reference: https://github.com/curvefi/curve-contract/blob/7116b4a261580813ef057887c5009e22473ddb7d/tests/simulation.py#L55\n */\nexport const computeY = (ampFactor: JSBI, x: JSBI, d: JSBI): JSBI => {\n  const Ann = JSBI.multiply(ampFactor, N_COINS); // A*n^n\n  // sum' = prod' = x\n  const b = JSBI.subtract(JSBI.add(x, JSBI.divide(d, Ann)), d); // b = sum' - (A*n**n - 1) * D / (A * n**n)\n  const c = JSBI.divide(\n    JSBI.multiply(\n      JSBI.multiply(\n        d, // c =  D ** (n + 1) / (n ** (2 * n) * prod' * A)\n        d\n      ),\n      d\n    ),\n    JSBI.multiply(N_COINS, JSBI.multiply(N_COINS, JSBI.multiply(x, Ann)))\n  );\n\n  let yPrev = ZERO;\n  let y = d;\n  for (\n    let i = 0;\n    i < MAX_ITERS && JSBI.greaterThan(abs(JSBI.subtract(y, yPrev)), ONE);\n    i++\n  ) {\n    yPrev = y;\n    y = JSBI.divide(\n      JSBI.add(JSBI.multiply(y, y), c),\n      JSBI.add(JSBI.multiply(N_COINS, y), b)\n    );\n  }\n\n  return y;\n};\n","import type { Token } from \"@saberhq/token-utils\";\nimport { Fraction, ONE, TokenAmount, ZERO } from \"@saberhq/token-utils\";\nimport JSBI from \"jsbi\";\nimport mapValues from \"lodash.mapvalues\";\n\nimport type { IExchangeInfo } from \"../entities/exchange\";\nimport type { Fees } from \"../state/fees\";\nimport { computeD, computeY } from \"./curve\";\n\n/**\n * Calculates the current virtual price of the exchange.\n * @param exchange\n * @returns\n */\nexport const calculateVirtualPrice = (\n  exchange: IExchangeInfo\n): Fraction | null => {\n  const amount = exchange.lpTotalSupply;\n  if (amount === undefined || amount.equalTo(0)) {\n    // pool has no tokens\n    return null;\n  }\n  const price = new Fraction(\n    computeD(\n      exchange.ampFactor,\n      exchange.reserves[0].amount.raw,\n      exchange.reserves[1].amount.raw\n    ),\n    amount.raw\n  );\n  return price;\n};\n\n/**\n * Calculates the estimated output amount of a swap.\n * @param exchange\n * @param fromAmount\n * @returns\n */\nexport const calculateEstimatedSwapOutputAmount = (\n  exchange: IExchangeInfo,\n  fromAmount: TokenAmount\n): {\n  [K in\n    | \"outputAmountBeforeFees\"\n    | \"outputAmount\"\n    | \"fee\"\n    | \"lpFee\"\n    | \"adminFee\"]: TokenAmount;\n} => {\n  const [fromReserves, toReserves] = fromAmount.token.equals(\n    exchange.reserves[0].amount.token\n  )\n    ? [exchange.reserves[0], exchange.reserves[1]]\n    : [exchange.reserves[1], exchange.reserves[0]];\n\n  if (fromAmount.equalTo(0)) {\n    const zero = new TokenAmount(toReserves.amount.token, ZERO);\n    return {\n      outputAmountBeforeFees: zero,\n      outputAmount: zero,\n      fee: zero,\n      lpFee: zero,\n      adminFee: zero,\n    };\n  }\n\n  const amp = exchange.ampFactor;\n\n  const amountBeforeFees = JSBI.subtract(\n    toReserves.amount.raw,\n    computeY(\n      amp,\n      JSBI.add(fromReserves.amount.raw, fromAmount.raw),\n      computeD(amp, fromReserves.amount.raw, toReserves.amount.raw)\n    )\n  );\n\n  const outputAmountBeforeFees = new TokenAmount(\n    toReserves.amount.token,\n    amountBeforeFees\n  );\n\n  const fee = new TokenAmount(\n    toReserves.amount.token,\n    exchange.fees.trade.asFraction.multiply(amountBeforeFees).toFixed(0)\n  );\n\n  const adminFee = new TokenAmount(\n    toReserves.amount.token,\n    exchange.fees.adminTrade.asFraction.multiply(fee.raw).toFixed(0)\n  );\n  const lpFee = fee.subtract(adminFee);\n\n  const outputAmount = new TokenAmount(\n    toReserves.amount.token,\n    JSBI.subtract(amountBeforeFees, fee.raw)\n  );\n\n  return {\n    outputAmountBeforeFees,\n    outputAmount,\n    fee: fee,\n    lpFee,\n    adminFee,\n  };\n};\n\nconst N_COINS = JSBI.BigInt(2);\n\nexport interface IWithdrawOneResult {\n  withdrawAmount: TokenAmount;\n  withdrawAmountBeforeFees: TokenAmount;\n  swapFee: TokenAmount;\n  withdrawFee: TokenAmount;\n  lpSwapFee: TokenAmount;\n  lpWithdrawFee: TokenAmount;\n  adminSwapFee: TokenAmount;\n  adminWithdrawFee: TokenAmount;\n}\n\n/**\n * Calculates the amount of tokens withdrawn if only withdrawing one token.\n * @returns\n */\nexport const calculateEstimatedWithdrawOneAmount = ({\n  exchange,\n  poolTokenAmount,\n  withdrawToken,\n}: {\n  exchange: IExchangeInfo;\n  poolTokenAmount: TokenAmount;\n  withdrawToken: Token;\n}): IWithdrawOneResult => {\n  if (poolTokenAmount.equalTo(0)) {\n    // final quantities\n    const quantities = {\n      withdrawAmount: ZERO,\n      withdrawAmountBeforeFees: ZERO,\n      swapFee: ZERO,\n      withdrawFee: ZERO,\n      lpSwapFee: ZERO,\n      lpWithdrawFee: ZERO,\n      adminSwapFee: ZERO,\n      adminWithdrawFee: ZERO,\n    };\n    return mapValues(quantities, (q) => new TokenAmount(withdrawToken, q));\n  }\n\n  const { ampFactor, fees } = exchange;\n\n  const [baseReserves, quoteReserves] = [\n    exchange.reserves.find((r) => r.amount.token.equals(withdrawToken))?.amount\n      .raw ?? ZERO,\n    exchange.reserves.find((r) => !r.amount.token.equals(withdrawToken))?.amount\n      .raw ?? ZERO,\n  ];\n\n  const d_0 = computeD(ampFactor, baseReserves, quoteReserves);\n  const d_1 = JSBI.subtract(\n    d_0,\n    JSBI.divide(\n      JSBI.multiply(poolTokenAmount.raw, d_0),\n      exchange.lpTotalSupply.raw\n    )\n  );\n\n  const new_y = computeY(ampFactor, quoteReserves, d_1);\n\n  // expected_base_amount = swap_base_amount * d_1 / d_0 - new_y;\n  const expected_base_amount = JSBI.subtract(\n    JSBI.divide(JSBI.multiply(baseReserves, d_1), d_0),\n    new_y\n  );\n  // expected_quote_amount = swap_quote_amount - swap_quote_amount * d_1 / d_0;\n  const expected_quote_amount = JSBI.subtract(\n    quoteReserves,\n    JSBI.divide(JSBI.multiply(quoteReserves, d_1), d_0)\n  );\n  // new_base_amount = swap_base_amount - expected_base_amount * fee / fee_denominator;\n  const new_base_amount = new Fraction(baseReserves.toString(), 1).subtract(\n    normalizedTradeFee(fees, N_COINS, expected_base_amount)\n  );\n  // new_quote_amount = swap_quote_amount - expected_quote_amount * fee / fee_denominator;\n  const new_quote_amount = new Fraction(quoteReserves.toString(), 1).subtract(\n    normalizedTradeFee(fees, N_COINS, expected_quote_amount)\n  );\n  const dy = new_base_amount.subtract(\n    computeY(\n      ampFactor,\n      JSBI.BigInt(new_quote_amount.toFixed(0)),\n      d_1\n    ).toString()\n  );\n  const dy_0 = JSBI.subtract(baseReserves, new_y);\n\n  // lp fees\n  const swapFee = new Fraction(dy_0.toString(), 1).subtract(dy);\n  const withdrawFee = dy.multiply(fees.withdraw.asFraction);\n\n  // admin fees\n  const adminSwapFee = swapFee.multiply(fees.adminTrade.asFraction);\n  const adminWithdrawFee = withdrawFee.multiply(fees.adminWithdraw.asFraction);\n\n  // final LP fees\n  const lpSwapFee = swapFee.subtract(adminSwapFee);\n  const lpWithdrawFee = withdrawFee.subtract(adminWithdrawFee);\n\n  // final withdraw amount\n  const withdrawAmount = dy.subtract(withdrawFee).subtract(swapFee);\n\n  // final quantities\n  const quantities = {\n    withdrawAmount,\n    withdrawAmountBeforeFees: dy,\n    swapFee,\n    withdrawFee,\n    lpSwapFee,\n    lpWithdrawFee,\n    adminSwapFee,\n    adminWithdrawFee,\n  };\n\n  return mapValues(\n    quantities,\n    (q) => new TokenAmount(withdrawToken, q.toFixed(0))\n  );\n};\n\n/**\n * Compute normalized fee for symmetric/asymmetric deposits/withdraws\n */\nexport const normalizedTradeFee = (\n  { trade }: Fees,\n  n_coins: JSBI,\n  amount: JSBI\n): Fraction => {\n  const adjustedTradeFee = new Fraction(\n    n_coins,\n    JSBI.multiply(JSBI.subtract(n_coins, ONE), JSBI.BigInt(4))\n  );\n  return new Fraction(amount, 1).multiply(trade).multiply(adjustedTradeFee);\n};\n\nexport const calculateEstimatedWithdrawAmount = ({\n  poolTokenAmount,\n  reserves,\n  fees,\n  lpTotalSupply,\n}: {\n  /**\n   * Amount of pool tokens to withdraw\n   */\n  poolTokenAmount: TokenAmount;\n} & Pick<IExchangeInfo, \"reserves\" | \"lpTotalSupply\" | \"fees\">): {\n  withdrawAmounts: readonly [TokenAmount, TokenAmount];\n  withdrawAmountsBeforeFees: readonly [TokenAmount, TokenAmount];\n  fees: readonly [TokenAmount, TokenAmount];\n} => {\n  if (lpTotalSupply.equalTo(0)) {\n    const zero = reserves.map((r) => new TokenAmount(r.amount.token, ZERO)) as [\n      TokenAmount,\n      TokenAmount\n    ];\n    return {\n      withdrawAmounts: zero,\n      withdrawAmountsBeforeFees: zero,\n      fees: zero,\n    };\n  }\n\n  const share = poolTokenAmount.divide(lpTotalSupply);\n\n  const withdrawAmounts = reserves.map(({ amount }) => {\n    const baseAmount = share.multiply(amount.raw);\n    const fee = baseAmount.multiply(fees.withdraw.asFraction);\n    return [\n      new TokenAmount(\n        amount.token,\n        JSBI.BigInt(baseAmount.subtract(fee).toFixed(0))\n      ),\n      {\n        beforeFees: JSBI.BigInt(baseAmount.toFixed(0)),\n        fee: JSBI.BigInt(fee.toFixed(0)),\n      },\n    ];\n  }) as [\n    [TokenAmount, { beforeFees: JSBI; fee: JSBI }],\n    [TokenAmount, { beforeFees: JSBI; fee: JSBI }]\n  ];\n\n  return {\n    withdrawAmountsBeforeFees: withdrawAmounts.map(\n      ([amt, { beforeFees }]) => new TokenAmount(amt.token, beforeFees)\n    ) as [TokenAmount, TokenAmount],\n    withdrawAmounts: [withdrawAmounts[0][0], withdrawAmounts[1][0]],\n    fees: withdrawAmounts.map(\n      ([amt, { fee }]) => new TokenAmount(amt.token, fee)\n    ) as [TokenAmount, TokenAmount],\n  };\n};\n\n/**\n * Calculate the estimated amount of LP tokens minted after a deposit.\n * @param exchange\n * @param depositAmountA\n * @param depositAmountB\n * @returns\n */\nexport const calculateEstimatedMintAmount = (\n  exchange: IExchangeInfo,\n  depositAmountA: JSBI,\n  depositAmountB: JSBI\n): {\n  mintAmountBeforeFees: TokenAmount;\n  mintAmount: TokenAmount;\n  fees: TokenAmount;\n} => {\n  if (JSBI.equal(depositAmountA, ZERO) && JSBI.equal(depositAmountB, ZERO)) {\n    const zero = new TokenAmount(exchange.lpTotalSupply.token, ZERO);\n    return {\n      mintAmountBeforeFees: zero,\n      mintAmount: zero,\n      fees: zero,\n    };\n  }\n\n  const amp = exchange.ampFactor;\n  const [reserveA, reserveB] = exchange.reserves;\n  const d0 = computeD(amp, reserveA.amount.raw, reserveB.amount.raw);\n\n  const d1 = computeD(\n    amp,\n    JSBI.add(reserveA.amount.raw, depositAmountA),\n    JSBI.add(reserveB.amount.raw, depositAmountB)\n  );\n  if (JSBI.lessThan(d1, d0)) {\n    throw new Error(\"New D cannot be less than previous D\");\n  }\n\n  const oldBalances = exchange.reserves.map((r) => r.amount.raw) as [\n    JSBI,\n    JSBI\n  ];\n  const newBalances = [\n    JSBI.add(reserveA.amount.raw, depositAmountA),\n    JSBI.add(reserveB.amount.raw, depositAmountB),\n  ] as const;\n  const adjustedBalances = newBalances.map((newBalance, i) => {\n    const oldBalance = oldBalances[i] as JSBI;\n    const idealBalance = new Fraction(d1, d0).multiply(oldBalance);\n    const difference = idealBalance.subtract(newBalance);\n    const diffAbs = difference.greaterThan(0)\n      ? difference\n      : difference.multiply(-1);\n    const fee = normalizedTradeFee(\n      exchange.fees,\n      N_COINS,\n      JSBI.BigInt(diffAbs.toFixed(0))\n    );\n    return JSBI.subtract(newBalance, JSBI.BigInt(fee.toFixed(0)));\n  }) as [JSBI, JSBI];\n  const d2 = computeD(amp, adjustedBalances[0], adjustedBalances[1]);\n\n  const lpSupply = exchange.lpTotalSupply;\n  const mintAmountRaw = JSBI.divide(\n    JSBI.multiply(lpSupply.raw, JSBI.subtract(d2, d0)),\n    d0\n  );\n\n  const mintAmount = new TokenAmount(\n    exchange.lpTotalSupply.token,\n    mintAmountRaw\n  );\n\n  const mintAmountRawBeforeFees = JSBI.divide(\n    JSBI.multiply(lpSupply.raw, JSBI.subtract(d1, d0)),\n    d0\n  );\n\n  const fees = new TokenAmount(\n    exchange.lpTotalSupply.token,\n    JSBI.subtract(mintAmountRawBeforeFees, mintAmountRaw)\n  );\n  const mintAmountBeforeFees = new TokenAmount(\n    exchange.lpTotalSupply.token,\n    mintAmountRawBeforeFees\n  );\n\n  return {\n    mintAmount,\n    mintAmountBeforeFees,\n    fees,\n  };\n};\n","import { Percent, u64 } from \"@saberhq/token-utils\";\n\nimport type { RawFees } from \"./layout\";\n\nexport type Fees = {\n  trade: Percent;\n  withdraw: Percent;\n  adminTrade: Percent;\n  adminWithdraw: Percent;\n};\n\nexport const DEFAULT_FEE = new Percent(0, 10000);\n\nexport const ZERO_FEES: Fees = {\n  /**\n   * Fee per trade\n   */\n  trade: DEFAULT_FEE,\n  withdraw: DEFAULT_FEE,\n  adminTrade: DEFAULT_FEE,\n  adminWithdraw: DEFAULT_FEE,\n};\n\nconst recommendedFeesRaw = {\n  adminTradeFeeNumerator: 50,\n  adminTradeFeeDenominator: 100,\n  adminWithdrawFeeNumerator: 50,\n  adminWithdrawFeeDenominator: 100,\n  tradeFeeNumerator: 20,\n  tradeFeeDenominator: 10000,\n  withdrawFeeNumerator: 50,\n  withdrawFeeDenominator: 10000,\n};\n\nexport const RECOMMENDED_FEES: Fees = {\n  trade: new Percent(\n    recommendedFeesRaw.tradeFeeNumerator,\n    recommendedFeesRaw.tradeFeeDenominator\n  ),\n  withdraw: new Percent(\n    recommendedFeesRaw.withdrawFeeNumerator,\n    recommendedFeesRaw.withdrawFeeDenominator\n  ),\n  adminTrade: new Percent(\n    recommendedFeesRaw.adminTradeFeeNumerator,\n    recommendedFeesRaw.adminTradeFeeDenominator\n  ),\n  adminWithdraw: new Percent(\n    recommendedFeesRaw.adminWithdrawFeeNumerator,\n    recommendedFeesRaw.adminWithdrawFeeDenominator\n  ),\n};\n\nexport const encodeFees = (fees: Fees): RawFees => ({\n  adminTradeFeeNumerator: new u64(\n    fees.adminTrade.numerator.toString()\n  ).toBuffer(),\n  adminTradeFeeDenominator: new u64(\n    fees.adminTrade.denominator.toString()\n  ).toBuffer(),\n  adminWithdrawFeeNumerator: new u64(\n    fees.adminWithdraw.numerator.toString()\n  ).toBuffer(),\n  adminWithdrawFeeDenominator: new u64(\n    fees.adminWithdraw.denominator.toString()\n  ).toBuffer(),\n  tradeFeeNumerator: new u64(fees.trade.numerator.toString()).toBuffer(),\n  tradeFeeDenominator: new u64(fees.trade.denominator.toString()).toBuffer(),\n  withdrawFeeNumerator: new u64(fees.withdraw.numerator.toString()).toBuffer(),\n  withdrawFeeDenominator: new u64(\n    fees.withdraw.denominator.toString()\n  ).toBuffer(),\n});\n\nexport const decodeFees = (raw: RawFees): Fees => ({\n  adminTrade: new Percent(\n    u64.fromBuffer(Buffer.from(raw.adminTradeFeeNumerator)).toString(),\n    u64.fromBuffer(Buffer.from(raw.adminTradeFeeDenominator)).toString()\n  ),\n  adminWithdraw: new Percent(\n    u64.fromBuffer(Buffer.from(raw.adminWithdrawFeeNumerator)).toString(),\n    u64.fromBuffer(Buffer.from(raw.adminWithdrawFeeDenominator)).toString()\n  ),\n  trade: new Percent(\n    u64.fromBuffer(Buffer.from(raw.tradeFeeNumerator)).toString(),\n    u64.fromBuffer(Buffer.from(raw.tradeFeeDenominator)).toString()\n  ),\n  withdraw: new Percent(\n    u64.fromBuffer(Buffer.from(raw.withdrawFeeNumerator)).toString(),\n    u64.fromBuffer(Buffer.from(raw.withdrawFeeDenominator)).toString()\n  ),\n});\n","import { PublicKeyLayout, Uint64Layout } from \"@saberhq/token-utils\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\n\n/**\n * Raw representation of fees.\n */\nexport interface RawFees {\n  adminTradeFeeNumerator: Uint8Array;\n  adminTradeFeeDenominator: Uint8Array;\n  adminWithdrawFeeNumerator: Uint8Array;\n  adminWithdrawFeeDenominator: Uint8Array;\n  tradeFeeNumerator: Uint8Array;\n  tradeFeeDenominator: Uint8Array;\n  withdrawFeeNumerator: Uint8Array;\n  withdrawFeeDenominator: Uint8Array;\n}\n\n/**\n * Layout for StableSwap fees\n */\nexport const FeesLayout = BufferLayout.struct<RawFees>(\n  [\n    Uint64Layout(\"adminTradeFeeNumerator\"),\n    Uint64Layout(\"adminTradeFeeDenominator\"),\n    Uint64Layout(\"adminWithdrawFeeNumerator\"),\n    Uint64Layout(\"adminWithdrawFeeDenominator\"),\n    Uint64Layout(\"tradeFeeNumerator\"),\n    Uint64Layout(\"tradeFeeDenominator\"),\n    Uint64Layout(\"withdrawFeeNumerator\"),\n    Uint64Layout(\"withdrawFeeDenominator\"),\n  ],\n  \"fees\"\n);\n\n/**\n * Layout for stable swap state\n */\nexport const StableSwapLayout = BufferLayout.struct<{\n  isInitialized: 0 | 1;\n  isPaused: 0 | 1;\n  nonce: number;\n  initialAmpFactor: Uint8Array;\n  targetAmpFactor: Uint8Array;\n  startRampTs: number;\n  stopRampTs: number;\n  futureAdminDeadline: number;\n  futureAdminAccount: Uint8Array;\n  adminAccount: Uint8Array;\n  tokenAccountA: Uint8Array;\n  tokenAccountB: Uint8Array;\n  tokenPool: Uint8Array;\n  mintA: Uint8Array;\n  mintB: Uint8Array;\n  adminFeeAccountA: Uint8Array;\n  adminFeeAccountB: Uint8Array;\n  fees: RawFees;\n}>([\n  BufferLayout.u8(\"isInitialized\"),\n  BufferLayout.u8(\"isPaused\"),\n  BufferLayout.u8(\"nonce\"),\n  Uint64Layout(\"initialAmpFactor\"),\n  Uint64Layout(\"targetAmpFactor\"),\n  BufferLayout.ns64(\"startRampTs\"),\n  BufferLayout.ns64(\"stopRampTs\"),\n  BufferLayout.ns64(\"futureAdminDeadline\"),\n  PublicKeyLayout(\"futureAdminAccount\"),\n  PublicKeyLayout(\"adminAccount\"),\n  PublicKeyLayout(\"tokenAccountA\"),\n  PublicKeyLayout(\"tokenAccountB\"),\n  PublicKeyLayout(\"tokenPool\"),\n  PublicKeyLayout(\"mintA\"),\n  PublicKeyLayout(\"mintB\"),\n  PublicKeyLayout(\"adminFeeAccountA\"),\n  PublicKeyLayout(\"adminFeeAccountB\"),\n  FeesLayout,\n]);\n","import type {\n  PublicKey,\n  TransactionInstructionCtorFields,\n} from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\n\nexport const buildInstruction = ({\n  config: { swapProgramID },\n  keys,\n  data,\n}: Pick<TransactionInstructionCtorFields, \"keys\" | \"data\"> & {\n  config: StableSwapConfig;\n}): TransactionInstruction => {\n  return new TransactionInstruction({\n    keys,\n    programId: swapProgramID,\n    data,\n  });\n};\n\nexport interface StableSwapConfig {\n  /**\n   * The public key identifying this instance of the Stable Swap.\n   */\n  readonly swapAccount: PublicKey;\n  /**\n   * Authority\n   */\n  readonly authority: PublicKey;\n  /**\n   * Program Identifier for the Swap program\n   */\n  readonly swapProgramID: PublicKey;\n  /**\n   * Program Identifier for the Token program\n   */\n  readonly tokenProgramID: PublicKey;\n}\n","import type { u64 } from \"@saberhq/token-utils\";\nimport { Uint64Layout } from \"@saberhq/token-utils\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport type { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { SYSVAR_CLOCK_PUBKEY } from \"@solana/web3.js\";\n\nimport type { StableSwapState } from \"../state\";\nimport type { Fees } from \"../state/fees\";\nimport { encodeFees, ZERO_FEES } from \"../state/fees\";\nimport type { RawFees } from \"../state/layout\";\nimport { FeesLayout } from \"../state/layout\";\nimport type { StableSwapConfig } from \"./common\";\nimport { buildInstruction } from \"./common\";\n\n/**\n * Admin instruction.\n */\nexport enum AdminInstruction {\n  RAMP_A = 100,\n  STOP_RAMP_A = 101,\n  PAUSE = 102,\n  UNPAUSE = 103,\n  SET_FEE_ACCOUNT = 104,\n  APPLY_NEW_ADMIN = 105,\n  COMMIT_NEW_ADMIN = 106,\n  SET_NEW_FEES = 107,\n}\n\n/**\n * Creates a ramp A instruction.\n */\nexport const createAdminRampAInstruction = ({\n  config,\n  state: { adminAccount },\n  targetAmp,\n  stopRamp,\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n  targetAmp: u64;\n  stopRamp: Date;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    targetAmp: Uint8Array;\n    stopRampTS: number;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    Uint64Layout(\"targetAmp\"),\n    BufferLayout.ns64(\"stopRampTS\"),\n  ]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.RAMP_A,\n        targetAmp: targetAmp.toBuffer(),\n        stopRampTS: Math.floor(stopRamp.getTime() / 1000),\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a stop ramp A instruction.\n */\nexport const createAdminStopRampAInstruction = ({\n  config,\n  state: { adminAccount },\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.STOP_RAMP_A,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a pause instruction.\n */\nexport const createAdminPauseInstruction = ({\n  config,\n  state: { adminAccount },\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.PAUSE,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates an unpause instruction.\n */\nexport const createAdminUnpauseInstruction = ({\n  config,\n  state: { adminAccount },\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.UNPAUSE,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a set fee account instruction.\n */\nexport const createAdminSetFeeAccountInstruction = ({\n  config,\n  state: { adminAccount },\n  tokenAccount,\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n  tokenAccount: PublicKey;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n    { pubkey: tokenAccount, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.SET_FEE_ACCOUNT,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a set new fees instruction.\n */\nexport const createAdminApplyNewAdminInstruction = ({\n  config,\n  state: { adminAccount },\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.APPLY_NEW_ADMIN,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a set new fees instruction.\n */\nexport const createAdminCommitNewAdminInstruction = ({\n  config,\n  state: { adminAccount },\n  newAdminAccount,\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n  newAdminAccount: PublicKey;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n    { pubkey: newAdminAccount, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n  }>([BufferLayout.u8(\"instruction\")]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.COMMIT_NEW_ADMIN,\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\n/**\n * Creates a set new fees instruction.\n */\nexport const createAdminSetNewFeesInstruction = ({\n  config,\n  state: { adminAccount },\n  fees = ZERO_FEES,\n}: {\n  config: StableSwapConfig;\n  state: Pick<StableSwapState, \"adminAccount\">;\n  fees: Fees;\n}): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: true },\n    { pubkey: adminAccount, isSigner: true, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    fees: RawFees;\n  }>([BufferLayout.u8(\"instruction\"), FeesLayout]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: AdminInstruction.SET_NEW_FEES, // InitializeSwap instruction\n        fees: encodeFees(fees),\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n","import { u64 } from \"@saberhq/token-utils\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport type { SwapTokenInfo } from \"../instructions/swap\";\nimport type { Fees } from \"./fees\";\nimport { decodeFees } from \"./fees\";\nimport { StableSwapLayout } from \"./layout\";\n\nexport * from \"./fees\";\nexport * from \"./layout\";\n\n/**\n * State of a StableSwap, read from the swap account.\n */\nexport interface StableSwapState {\n  /**\n   * Whether or not the swap is initialized.\n   */\n  isInitialized: boolean;\n\n  /**\n   * Whether or not the swap is paused.\n   */\n  isPaused: boolean;\n\n  /**\n   * Nonce used to generate the swap authority.\n   */\n  nonce: number;\n\n  /**\n   * Mint account for pool token\n   */\n  poolTokenMint: PublicKey;\n\n  /**\n   * Admin account\n   */\n  adminAccount: PublicKey;\n\n  tokenA: SwapTokenInfo;\n  tokenB: SwapTokenInfo;\n\n  /**\n   * Initial amplification coefficient (A)\n   */\n  initialAmpFactor: u64;\n\n  /**\n   * Target amplification coefficient (A)\n   */\n  targetAmpFactor: u64;\n\n  /**\n   * Ramp A start timestamp\n   */\n  startRampTimestamp: number;\n\n  /**\n   * Ramp A start timestamp\n   */\n  stopRampTimestamp: number;\n\n  /**\n   * When the future admin can no longer become the admin, if applicable.\n   */\n  futureAdminDeadline: number;\n\n  /**\n   * The next admin.\n   */\n  futureAdminAccount: PublicKey;\n\n  /**\n   * Fee schedule\n   */\n  fees: Fees;\n}\n\n/**\n * Decodes the Swap account.\n * @param data\n * @returns\n */\nexport const decodeSwap = (data: Buffer): StableSwapState => {\n  const stableSwapData = StableSwapLayout.decode(data);\n  if (!stableSwapData.isInitialized) {\n    throw new Error(`Invalid token swap state`);\n  }\n  const adminAccount = new PublicKey(stableSwapData.adminAccount);\n  const adminFeeAccountA = new PublicKey(stableSwapData.adminFeeAccountA);\n  const adminFeeAccountB = new PublicKey(stableSwapData.adminFeeAccountB);\n  const tokenAccountA = new PublicKey(stableSwapData.tokenAccountA);\n  const tokenAccountB = new PublicKey(stableSwapData.tokenAccountB);\n  const poolTokenMint = new PublicKey(stableSwapData.tokenPool);\n  const mintA = new PublicKey(stableSwapData.mintA);\n  const mintB = new PublicKey(stableSwapData.mintB);\n  const initialAmpFactor = u64.fromBuffer(\n    Buffer.from(stableSwapData.initialAmpFactor)\n  );\n  const targetAmpFactor = u64.fromBuffer(\n    Buffer.from(stableSwapData.targetAmpFactor)\n  );\n  const startRampTimestamp = stableSwapData.startRampTs;\n  const stopRampTimestamp = stableSwapData.stopRampTs;\n  const fees = decodeFees(stableSwapData.fees);\n  return {\n    isInitialized: !!stableSwapData.isInitialized,\n    isPaused: !!stableSwapData.isPaused,\n    nonce: stableSwapData.nonce,\n    futureAdminDeadline: stableSwapData.futureAdminDeadline,\n    futureAdminAccount: new PublicKey(stableSwapData.futureAdminAccount),\n    adminAccount,\n    tokenA: {\n      adminFeeAccount: adminFeeAccountA,\n      reserve: tokenAccountA,\n      mint: mintA,\n    },\n    tokenB: {\n      adminFeeAccount: adminFeeAccountB,\n      reserve: tokenAccountB,\n      mint: mintB,\n    },\n    poolTokenMint,\n    initialAmpFactor,\n    targetAmpFactor,\n    startRampTimestamp,\n    stopRampTimestamp,\n    fees,\n  };\n};\n","import type { u64 } from \"@saberhq/token-utils\";\nimport { Uint64Layout } from \"@saberhq/token-utils\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport type { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { SYSVAR_CLOCK_PUBKEY } from \"@solana/web3.js\";\n\nimport type { Fees, RawFees } from \"../state\";\nimport { encodeFees, FeesLayout, ZERO_FEES } from \"../state\";\nimport type { StableSwapConfig } from \"./common\";\nimport { buildInstruction } from \"./common\";\n\nexport enum StableSwapInstruction {\n  INITIALIZE = 0,\n  SWAP = 1,\n  DEPOSIT = 2,\n  WITHDRAW = 3,\n  WITHDRAW_ONE = 4,\n}\n\n/**\n * Info about the tokens to swap.\n */\nexport interface SwapTokenInfo {\n  /**\n   * The account that admin fees go to.\n   */\n  adminFeeAccount: PublicKey;\n  /**\n   * Mint of the token.\n   */\n  mint: PublicKey;\n  /**\n   * This swap's token reserves.\n   */\n  reserve: PublicKey;\n}\n\nexport interface InitializeSwapInstruction {\n  config: StableSwapConfig;\n\n  /**\n   * Account that can manage the swap.\n   */\n  adminAccount: PublicKey;\n\n  tokenA: SwapTokenInfo;\n  tokenB: SwapTokenInfo;\n\n  poolTokenMint: PublicKey;\n\n  /**\n   * Destination account for the initial LP tokens.\n   */\n  destinationPoolTokenAccount: PublicKey;\n\n  nonce: number;\n  ampFactor: u64;\n  fees?: Fees;\n  isPaused?: boolean;\n}\n\nexport interface SwapInstruction {\n  config: StableSwapConfig;\n  /**\n   * User source authority\n   */\n  userAuthority: PublicKey;\n  /**\n   * User source token account\n   */\n  userSource: PublicKey;\n  /**\n   * Swap source token account\n   */\n  poolSource: PublicKey;\n  /**\n   * Swap destination token account\n   */\n  poolDestination: PublicKey;\n  /**\n   * User destination token account\n   */\n  userDestination: PublicKey;\n  adminDestination: PublicKey;\n  amountIn: u64;\n  minimumAmountOut: u64;\n}\n\nexport interface DepositInstruction {\n  config: StableSwapConfig;\n  /**\n   * Authority for user account\n   */\n  userAuthority: PublicKey;\n  /**\n   * Depositor account for token A\n   */\n  sourceA: PublicKey;\n  /**\n   * Depositor account for token B\n   */\n  sourceB: PublicKey;\n  tokenAccountA: PublicKey;\n  tokenAccountB: PublicKey;\n  poolTokenMint: PublicKey;\n  poolTokenAccount: PublicKey;\n  tokenAmountA: u64;\n  tokenAmountB: u64;\n  minimumPoolTokenAmount: u64;\n}\n\nexport interface WithdrawInstruction {\n  config: StableSwapConfig;\n  /**\n   * User source authority\n   */\n  userAuthority: PublicKey;\n  poolMint: PublicKey;\n  tokenAccountA: PublicKey;\n  tokenAccountB: PublicKey;\n  adminFeeAccountA: PublicKey;\n  adminFeeAccountB: PublicKey;\n\n  /**\n   * Account which is the source of the pool tokens\n   * that is; the user's pool token account\n   */\n  sourceAccount: PublicKey;\n  userAccountA: PublicKey;\n  userAccountB: PublicKey;\n  poolTokenAmount: u64;\n  minimumTokenA: u64;\n  minimumTokenB: u64;\n}\n\nexport interface WithdrawOneInstruction {\n  config: StableSwapConfig;\n  /**\n   * User source authority\n   */\n  userAuthority: PublicKey;\n  poolMint: PublicKey;\n\n  /**\n   * User account that holds the LP tokens\n   */\n  sourceAccount: PublicKey;\n  /**\n   * Pool account that holds the tokens to withdraw\n   */\n  baseTokenAccount: PublicKey;\n  /**\n   * Pool account that holds the other token\n   */\n  quoteTokenAccount: PublicKey;\n  /**\n   * User base token account to withdraw to\n   */\n  destinationAccount: PublicKey;\n  /**\n   * Admin base token account to send fees to\n   */\n  adminDestinationAccount: PublicKey;\n\n  /**\n   * Amount of pool tokens to burn. User receives an output of token a\n   * or b based on the percentage of the pool tokens that are returned.\n   */\n  poolTokenAmount: u64;\n  /**\n   * Minimum amount of base tokens to receive, prevents excessive slippage\n   */\n  minimumTokenAmount: u64;\n}\n\nexport const initializeSwapInstruction = ({\n  config,\n  adminAccount,\n  tokenA: {\n    adminFeeAccount: adminFeeAccountA,\n    mint: tokenMintA,\n    reserve: tokenAccountA,\n  },\n  tokenB: {\n    adminFeeAccount: adminFeeAccountB,\n    mint: tokenMintB,\n    reserve: tokenAccountB,\n  },\n  poolTokenMint,\n  destinationPoolTokenAccount,\n  nonce,\n  ampFactor,\n  fees = ZERO_FEES,\n}: InitializeSwapInstruction): TransactionInstruction => {\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: false },\n    { pubkey: config.authority, isSigner: false, isWritable: false },\n    { pubkey: adminAccount, isSigner: false, isWritable: false },\n    { pubkey: adminFeeAccountA, isSigner: false, isWritable: false },\n    { pubkey: adminFeeAccountB, isSigner: false, isWritable: false },\n    { pubkey: tokenMintA, isSigner: false, isWritable: false },\n    { pubkey: tokenAccountA, isSigner: false, isWritable: false },\n    { pubkey: tokenMintB, isSigner: false, isWritable: false },\n    { pubkey: tokenAccountB, isSigner: false, isWritable: false },\n    { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n    { pubkey: destinationPoolTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: config.tokenProgramID, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    nonce: number;\n    ampFactor: Uint8Array;\n    fees: RawFees;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    BufferLayout.u8(\"nonce\"),\n    Uint64Layout(\"ampFactor\"),\n    FeesLayout,\n  ]);\n  let data = Buffer.alloc(dataLayout.span);\n  {\n    const encodeLength = dataLayout.encode(\n      {\n        instruction: StableSwapInstruction.INITIALIZE, // InitializeSwap instruction\n        nonce,\n        ampFactor: ampFactor.toBuffer(),\n        fees: encodeFees(fees),\n      },\n      data\n    );\n    data = data.slice(0, encodeLength);\n  }\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\nexport const swapInstruction = ({\n  config,\n  userAuthority,\n  userSource,\n  poolSource,\n  poolDestination,\n  userDestination,\n  adminDestination,\n  amountIn,\n  minimumAmountOut,\n}: SwapInstruction): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    amountIn: Uint8Array;\n    minimumAmountOut: Uint8Array;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    Uint64Layout(\"amountIn\"),\n    Uint64Layout(\"minimumAmountOut\"),\n  ]);\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: StableSwapInstruction.SWAP, // Swap instruction\n      amountIn: amountIn.toBuffer(),\n      minimumAmountOut: minimumAmountOut.toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: false },\n    { pubkey: config.authority, isSigner: false, isWritable: false },\n    { pubkey: userAuthority, isSigner: true, isWritable: false },\n    { pubkey: userSource, isSigner: false, isWritable: true },\n    { pubkey: poolSource, isSigner: false, isWritable: true },\n    { pubkey: poolDestination, isSigner: false, isWritable: true },\n    { pubkey: userDestination, isSigner: false, isWritable: true },\n    { pubkey: adminDestination, isSigner: false, isWritable: true },\n    { pubkey: config.tokenProgramID, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\nexport const depositInstruction = ({\n  config,\n  userAuthority,\n  sourceA,\n  sourceB,\n  tokenAccountA,\n  tokenAccountB,\n  poolTokenMint,\n  poolTokenAccount,\n  tokenAmountA,\n  tokenAmountB,\n  minimumPoolTokenAmount,\n}: DepositInstruction): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    tokenAmountA: Uint8Array;\n    tokenAmountB: Uint8Array;\n    minimumPoolTokenAmount: Uint8Array;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    Uint64Layout(\"tokenAmountA\"),\n    Uint64Layout(\"tokenAmountB\"),\n    Uint64Layout(\"minimumPoolTokenAmount\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: StableSwapInstruction.DEPOSIT, // Deposit instruction\n      tokenAmountA: tokenAmountA.toBuffer(),\n      tokenAmountB: tokenAmountB.toBuffer(),\n      minimumPoolTokenAmount: minimumPoolTokenAmount.toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: false },\n    { pubkey: config.authority, isSigner: false, isWritable: false },\n    { pubkey: userAuthority, isSigner: true, isWritable: false },\n    { pubkey: sourceA, isSigner: false, isWritable: true },\n    { pubkey: sourceB, isSigner: false, isWritable: true },\n    { pubkey: tokenAccountA, isSigner: false, isWritable: true },\n    { pubkey: tokenAccountB, isSigner: false, isWritable: true },\n    { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n    { pubkey: poolTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: config.tokenProgramID, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\nexport const withdrawInstruction = ({\n  config,\n  userAuthority,\n  poolMint,\n  sourceAccount,\n  tokenAccountA,\n  tokenAccountB,\n  userAccountA,\n  userAccountB,\n  adminFeeAccountA,\n  adminFeeAccountB,\n  poolTokenAmount,\n  minimumTokenA,\n  minimumTokenB,\n}: WithdrawInstruction): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct<{\n    instruction: number;\n    poolTokenAmount: Uint8Array;\n    minimumTokenA: Uint8Array;\n    minimumTokenB: Uint8Array;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    Uint64Layout(\"poolTokenAmount\"),\n    Uint64Layout(\"minimumTokenA\"),\n    Uint64Layout(\"minimumTokenB\"),\n  ]);\n\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: StableSwapInstruction.WITHDRAW, // Withdraw instruction\n      poolTokenAmount: poolTokenAmount.toBuffer(),\n      minimumTokenA: minimumTokenA.toBuffer(),\n      minimumTokenB: minimumTokenB.toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: false },\n    { pubkey: config.authority, isSigner: false, isWritable: false },\n    { pubkey: userAuthority, isSigner: true, isWritable: false },\n    { pubkey: poolMint, isSigner: false, isWritable: true },\n    { pubkey: sourceAccount, isSigner: false, isWritable: true },\n    { pubkey: tokenAccountA, isSigner: false, isWritable: true },\n    { pubkey: tokenAccountB, isSigner: false, isWritable: true },\n    { pubkey: userAccountA, isSigner: false, isWritable: true },\n    { pubkey: userAccountB, isSigner: false, isWritable: true },\n    { pubkey: adminFeeAccountA, isSigner: false, isWritable: true },\n    { pubkey: adminFeeAccountB, isSigner: false, isWritable: true },\n    { pubkey: config.tokenProgramID, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n\nexport const withdrawOneInstruction = ({\n  config,\n  userAuthority,\n  poolMint,\n  sourceAccount,\n  baseTokenAccount,\n  quoteTokenAccount,\n  destinationAccount,\n  adminDestinationAccount,\n  poolTokenAmount,\n  minimumTokenAmount,\n}: WithdrawOneInstruction): TransactionInstruction => {\n  const withdrawOneDataLayout = BufferLayout.struct<{\n    instruction: number;\n    poolTokenAmount: Uint8Array;\n    minimumTokenAmount: Uint8Array;\n  }>([\n    BufferLayout.u8(\"instruction\"),\n    Uint64Layout(\"poolTokenAmount\"),\n    Uint64Layout(\"minimumTokenAmount\"),\n  ]);\n\n  const data = Buffer.alloc(withdrawOneDataLayout.span);\n  withdrawOneDataLayout.encode(\n    {\n      instruction: StableSwapInstruction.WITHDRAW_ONE, // Withdraw instruction\n      poolTokenAmount: poolTokenAmount.toBuffer(),\n      minimumTokenAmount: minimumTokenAmount.toBuffer(),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: config.swapAccount, isSigner: false, isWritable: false },\n    { pubkey: config.authority, isSigner: false, isWritable: false },\n    { pubkey: userAuthority, isSigner: true, isWritable: false },\n    { pubkey: poolMint, isSigner: false, isWritable: true },\n    { pubkey: sourceAccount, isSigner: false, isWritable: true },\n    { pubkey: baseTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: quoteTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: destinationAccount, isSigner: false, isWritable: true },\n    { pubkey: adminDestinationAccount, isSigner: false, isWritable: true },\n    { pubkey: config.tokenProgramID, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return buildInstruction({\n    config,\n    keys,\n    data,\n  });\n};\n","import { TOKEN_PROGRAM_ID } from \"@saberhq/token-utils\";\nimport type { Connection, TransactionInstruction } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { SWAP_PROGRAM_ID } from \"./constants\";\nimport type { IExchange } from \"./entities/exchange\";\nimport type { StableSwapConfig } from \"./instructions\";\nimport * as instructions from \"./instructions\";\nimport type { StableSwapState } from \"./state\";\nimport { decodeSwap } from \"./state\";\nimport { StableSwapLayout } from \"./state/layout\";\nimport { loadProgramAccount } from \"./util/account\";\n\nexport class StableSwap {\n  /**\n   * Constructor for new StableSwap client object\n   * @param connection\n   * @param config\n   * @param state\n   */\n  constructor(\n    readonly config: StableSwapConfig,\n    readonly state: StableSwapState\n  ) {}\n\n  /**\n   * Get the minimum balance for the token swap account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptStableSwap(\n    connection: Connection\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      StableSwapLayout.span\n    );\n  }\n\n  /**\n   * Load an onchain StableSwap program.\n   *\n   * @param connection The connection to use\n   * @param swapAccount The public key of the account to load\n   * @param programID Address of the onchain StableSwap program\n   */\n  static async load(\n    connection: Connection,\n    swapAccount: PublicKey,\n    programID: PublicKey = SWAP_PROGRAM_ID\n  ): Promise<StableSwap> {\n    const data = await loadProgramAccount(connection, swapAccount, programID);\n    const [authority] = await findSwapAuthorityKey(swapAccount, programID);\n    return StableSwap.loadWithData(swapAccount, data, authority, programID);\n  }\n\n  /**\n   * Loads an onchain StableSwap program from an exchange.\n   *\n   * @param connection\n   * @param exchange\n   * @returns\n   */\n  static async loadFromExchange(\n    connection: Connection,\n    exchange: IExchange\n  ): Promise<StableSwap> {\n    return StableSwap.load(\n      connection,\n      exchange.swapAccount,\n      exchange.programID\n    );\n  }\n\n  /**\n   * Loads a StableSwap instance with data.\n   *\n   * @param programID The program ID.\n   * @param swapAccount The address of the swap.\n   * @param swapAccountData The data of the swapAccount.\n   * @param authority The swap's authority.\n   * @returns\n   */\n  static loadWithData(\n    swapAccount: PublicKey,\n    swapAccountData: Buffer,\n    authority: PublicKey,\n    programID: PublicKey = SWAP_PROGRAM_ID\n  ): StableSwap {\n    try {\n      const stableSwapData = StableSwapLayout.decode(swapAccountData);\n      if (!stableSwapData.isInitialized) {\n        throw new Error(`Invalid token swap state`);\n      }\n      const state = decodeSwap(swapAccountData);\n      return new StableSwap(\n        {\n          swapAccount: swapAccount,\n          swapProgramID: programID,\n          tokenProgramID: TOKEN_PROGRAM_ID,\n          authority,\n        },\n        state\n      );\n    } catch (e) {\n      throw Error(e as string);\n    }\n  }\n\n  /**\n   * Swap token A for token B\n   * @param userSource\n   * @param poolSource\n   * @param poolDestination\n   * @param userDestination\n   * @param amountIn\n   * @param minimumAmountOut\n   */\n  swap(\n    args: Pick<\n      instructions.SwapInstruction,\n      | \"userAuthority\"\n      | \"userSource\"\n      | \"userDestination\"\n      | \"poolSource\"\n      | \"poolDestination\"\n      | \"amountIn\"\n      | \"minimumAmountOut\"\n    >\n  ): TransactionInstruction {\n    const adminDestination = args.poolDestination.equals(\n      this.state.tokenA.reserve\n    )\n      ? this.state.tokenA.adminFeeAccount\n      : this.state.tokenB.adminFeeAccount;\n    return instructions.swapInstruction({\n      config: this.config,\n      ...args,\n      adminDestination,\n    });\n  }\n\n  /**\n   * Deposit tokens into the pool.\n   */\n  deposit(\n    args: Pick<\n      instructions.DepositInstruction,\n      | \"userAuthority\"\n      | \"sourceA\"\n      | \"sourceB\"\n      | \"poolTokenAccount\"\n      | \"tokenAmountA\"\n      | \"tokenAmountB\"\n      | \"minimumPoolTokenAmount\"\n    >\n  ): TransactionInstruction {\n    return instructions.depositInstruction({\n      config: this.config,\n      tokenAccountA: this.state.tokenA.reserve,\n      tokenAccountB: this.state.tokenB.reserve,\n      poolTokenMint: this.state.poolTokenMint,\n      ...args,\n    });\n  }\n\n  /**\n   * Withdraw tokens from the pool\n   */\n  withdraw(\n    args: Pick<\n      instructions.WithdrawInstruction,\n      | \"userAuthority\"\n      | \"userAccountA\"\n      | \"userAccountB\"\n      | \"sourceAccount\"\n      | \"poolTokenAmount\"\n      | \"minimumTokenA\"\n      | \"minimumTokenB\"\n    >\n  ): TransactionInstruction {\n    return instructions.withdrawInstruction({\n      config: this.config,\n      poolMint: this.state.poolTokenMint,\n      tokenAccountA: this.state.tokenA.reserve,\n      tokenAccountB: this.state.tokenB.reserve,\n      adminFeeAccountA: this.state.tokenA.adminFeeAccount,\n      adminFeeAccountB: this.state.tokenB.adminFeeAccount,\n      ...args,\n    });\n  }\n\n  /**\n   * Withdraw tokens from the pool\n   */\n  withdrawOne(\n    args: Pick<\n      instructions.WithdrawOneInstruction,\n      | \"userAuthority\"\n      | \"baseTokenAccount\"\n      | \"destinationAccount\"\n      | \"sourceAccount\"\n      | \"poolTokenAmount\"\n      | \"minimumTokenAmount\"\n    >\n  ): TransactionInstruction {\n    const [quoteTokenAccount, adminDestinationAccount] =\n      args.baseTokenAccount.equals(this.state.tokenA.reserve)\n        ? [this.state.tokenB.reserve, this.state.tokenA.adminFeeAccount]\n        : [this.state.tokenA.reserve, this.state.tokenB.adminFeeAccount];\n\n    return instructions.withdrawOneInstruction({\n      config: this.config,\n      poolMint: this.state.poolTokenMint,\n      quoteTokenAccount,\n      adminDestinationAccount,\n      ...args,\n    });\n  }\n}\n\n/**\n * Finds the swap authority address that is used to sign transactions on behalf of the swap.\n *\n * @param swapAccount\n * @param swapProgramID\n * @returns\n */\nexport const findSwapAuthorityKey = (\n  swapAccount: PublicKey,\n  swapProgramID: PublicKey = SWAP_PROGRAM_ID\n): Promise<[PublicKey, number]> =>\n  PublicKey.findProgramAddress([swapAccount.toBuffer()], swapProgramID);\n","import type { Connection, PublicKey } from \"@solana/web3.js\";\n\n/**\n * Loads the account info of an account owned by a program.\n * @param connection\n * @param address\n * @param programId\n * @returns\n */\nexport const loadProgramAccount = async (\n  connection: Connection,\n  address: PublicKey,\n  programId: PublicKey\n): Promise<Buffer> => {\n  const accountInfo = await connection.getAccountInfo(address);\n  if (accountInfo === null) {\n    throw new Error(\"Failed to find account\");\n  }\n\n  if (!accountInfo.owner.equals(programId)) {\n    throw new Error(\n      `Invalid owner: expected ${programId.toBase58()}, found ${accountInfo.owner.toBase58()}`\n    );\n  }\n\n  return Buffer.from(accountInfo.data);\n};\n",null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,"import { __assign } from \"tslib\";\nimport { dotCase } from \"dot-case\";\nexport function snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"_\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import JSBI from 'jsbi';\nimport Decimal from 'decimal.js';\n\nexport type SwapResult = {\n  priceImpact: Decimal;\n  fees: JSBI;\n  expectedOutputAmount: JSBI;\n  minOutputAmount: JSBI;\n};\n\nexport const ZERO = JSBI.BigInt(0);\nexport const ONE = JSBI.BigInt(1);\nexport const TWO = JSBI.BigInt(2);\n\nexport function abs(number: JSBI) {\n  if (JSBI.GE(number, ZERO)) {\n    return number;\n  }\n\n  return JSBI.unaryMinus(number);\n}\n\nexport function sumArray(numbers: JSBI[]) {\n  return numbers.reduce((prev, curr) => {\n    return JSBI.add(prev, curr);\n  }, ZERO);\n}\n\nexport function mulArray(numbers: JSBI[]) {\n  return numbers.reduce((prev, curr) => {\n    return JSBI.multiply(prev, curr);\n  }, ONE);\n}\n\nexport function ceilingDivision(dividend: JSBI, divisor: JSBI): [JSBI, JSBI] {\n  let quotient = JSBI.divide(dividend, divisor);\n  if (JSBI.equal(quotient, ZERO)) {\n    return [ZERO, divisor];\n  }\n\n  let remainder = JSBI.remainder(dividend, divisor);\n  if (JSBI.greaterThan(remainder, ZERO)) {\n    quotient = JSBI.add(quotient, ONE);\n    divisor = JSBI.divide(dividend, quotient);\n    remainder = JSBI.remainder(dividend, quotient);\n    if (JSBI.greaterThan(remainder, ZERO)) {\n      divisor = JSBI.add(divisor, ONE);\n    }\n  }\n\n  return [quotient, divisor];\n}\n\nexport function toDecimal(input: JSBI, shift = 0) {\n  return new Decimal(input.toString()).div(new Decimal(10).pow(shift));\n}\n","import JSBI from 'jsbi';\nimport { abs, mulArray, ONE, sumArray, TWO, ZERO } from '../utils';\nimport Decimal from 'decimal.js';\n\nexport class Curve {\n  private numberOfCurrencies: JSBI;\n  private amplificationFactor: JSBI;\n  private tokenAmounts: JSBI[];\n  private targetPrices: JSBI[];\n\n  constructor(\n    numberOfCurrencies: JSBI,\n    amplificationFactor: JSBI,\n    tokenAmounts: JSBI[],\n    targetPrices: JSBI[]\n  ) {\n    this.numberOfCurrencies = numberOfCurrencies;\n    this.amplificationFactor = amplificationFactor;\n    this.tokenAmounts = tokenAmounts;\n    this.targetPrices = targetPrices;\n  }\n\n  public exchange(\n    inputIndex: number,\n    outputIndex: number,\n    amount: JSBI,\n    minusOne: boolean = true\n  ) {\n    let xp = this.xp();\n    let dx = JSBI.multiply(amount, this.targetPrices[inputIndex]);\n    let x = JSBI.add(xp[inputIndex], dx);\n    let y = this.computeY(inputIndex, outputIndex, x);\n    let dy = JSBI.subtract(xp[outputIndex], y);\n\n    // This is a special condition on Curve stable algo. For TokenSwap, they don't seem to apply this minus one.\n    if (minusOne) {\n      dy = JSBI.subtract(dy, ONE);\n    }\n\n    return JSBI.divide(dy, this.targetPrices[outputIndex]);\n  }\n\n  public computeBaseY(inputIndex: number, outputIndex: number, amount: JSBI) {\n    let d = this.computeD();\n    let xp = this.xp();\n    let nn = JSBI.exponentiate(\n      this.numberOfCurrencies,\n      this.numberOfCurrencies\n    );\n    let sum = sumArray(xp);\n    let product = mulArray(xp);\n    let k = JSBI.subtract(\n      JSBI.add(\n        JSBI.multiply(JSBI.multiply(this.amplificationFactor, nn), sum),\n        d\n      ),\n      JSBI.multiply(JSBI.multiply(this.amplificationFactor, d), nn)\n    );\n    let b = JSBI.multiply(\n      JSBI.multiply(JSBI.multiply(this.amplificationFactor, nn), nn),\n      product\n    );\n    let c = JSBI.multiply(JSBI.multiply(nn, product), k);\n    let numerator = JSBI.add(b, JSBI.divide(c, xp[inputIndex]));\n    let denominator = JSBI.add(b, JSBI.divide(c, xp[outputIndex]));\n\n    // Convert to number since JSBI doesn't support log10\n    let inputFactor = Math.log10(JSBI.toNumber(this.targetPrices[inputIndex]));\n    let outputFactor = Math.log10(\n      JSBI.toNumber(this.targetPrices[outputIndex])\n    );\n    let factor = Math.abs(outputFactor - inputFactor);\n\n    if (inputFactor >= outputFactor) {\n      return JSBI.BigInt(\n        new Decimal(numerator.toString())\n          .mul(new Decimal(amount.toString()))\n          .div(new Decimal(denominator.toString()))\n          .mul(Math.pow(10, factor))\n          .floor()\n          .toString()\n      );\n    } else {\n      return JSBI.BigInt(\n        new Decimal(numerator.toString())\n          .mul(new Decimal(amount.toString()))\n          .div(new Decimal(denominator.toString()))\n          .div(Math.pow(10, factor))\n          .floor()\n          .toString()\n      );\n    }\n  }\n\n  private computeY(\n    inputIndex: number,\n    outputIndex: number,\n    newTotalAmount: JSBI\n  ) {\n    let d = this.computeD();\n    let xx = this.xp();\n    xx[inputIndex] = newTotalAmount;\n    xx.splice(outputIndex, 1);\n\n    let ann = JSBI.multiply(this.amplificationFactor, this.numberOfCurrencies);\n    let c = d;\n\n    for (const y of xx) {\n      c = JSBI.divide(\n        JSBI.multiply(c, d),\n        JSBI.multiply(y, this.numberOfCurrencies)\n      );\n    }\n    c = JSBI.divide(\n      JSBI.multiply(c, d),\n      JSBI.multiply(this.numberOfCurrencies, ann)\n    );\n\n    let b = JSBI.subtract(JSBI.add(sumArray(xx), JSBI.divide(d, ann)), d);\n    let yPrev = ZERO;\n    let y = d;\n\n    while (JSBI.greaterThan(abs(JSBI.subtract(y, yPrev)), ONE)) {\n      yPrev = y;\n      y = JSBI.divide(\n        JSBI.add(JSBI.exponentiate(y, TWO), c),\n        JSBI.add(JSBI.multiply(TWO, y), b)\n      );\n    }\n\n    return y;\n  }\n\n  private computeD() {\n    let dPrev = ZERO;\n    let xp = this.xp();\n    let sum = sumArray(xp);\n    let d = sum;\n    let ann = JSBI.multiply(this.amplificationFactor, this.numberOfCurrencies);\n\n    while (JSBI.greaterThan(abs(JSBI.subtract(d, dPrev)), ONE)) {\n      let dP = d;\n      for (const x of xp) {\n        dP = JSBI.divide(\n          JSBI.multiply(dP, d),\n          JSBI.multiply(this.numberOfCurrencies, x)\n        );\n      }\n      dPrev = d;\n      let numerator = JSBI.multiply(\n        JSBI.add(\n          JSBI.multiply(ann, sum),\n          JSBI.multiply(dP, this.numberOfCurrencies)\n        ),\n        d\n      );\n      let denominator = JSBI.add(\n        JSBI.multiply(JSBI.subtract(ann, ONE), d),\n        JSBI.multiply(JSBI.add(this.numberOfCurrencies, ONE), dP)\n      );\n      d = JSBI.divide(numerator, denominator);\n    }\n\n    return d;\n  }\n\n  private xp() {\n    return this.tokenAmounts.map((tokenAmount, index) => {\n      return JSBI.multiply(tokenAmount, this.targetPrices[index]);\n    });\n  }\n}\n","import JSBI from 'jsbi';\nimport { Curve } from '../math/curve';\nimport { SwapResult, toDecimal, ZERO } from '../utils';\nimport Decimal from 'decimal.js';\nimport { Fraction } from '..';\nimport exp from 'constants';\n\nexport class Stable {\n  private curve: Curve;\n\n  constructor(\n    amp: JSBI,\n    private tokenAmounts: JSBI[],\n    private targetPrices: JSBI[],\n    private traderFee: Fraction\n  ) {\n    this.curve = new Curve(\n      JSBI.BigInt(this.tokenAmounts.length),\n      amp,\n      this.tokenAmounts,\n      this.targetPrices\n    );\n  }\n\n  public exchange(\n    inputTradeAmount: JSBI,\n    slippageTolerance: Fraction,\n    inputIndex: number,\n    outputIndex: number\n  ): SwapResult {\n    let outputAmountWithoutFees = this.getOutputAmount(\n      inputTradeAmount,\n      inputIndex,\n      outputIndex\n    );\n    let fees = this.getFees(outputAmountWithoutFees);\n    let expectedOutputAmount = JSBI.subtract(outputAmountWithoutFees, fees);\n\n    return {\n      priceImpact: this.getPriceImpact(\n        inputTradeAmount,\n        expectedOutputAmount,\n        inputIndex,\n        outputIndex\n      ),\n      fees: fees,\n      expectedOutputAmount: expectedOutputAmount,\n      minOutputAmount: this.getMinimumOutputAmount(\n        expectedOutputAmount,\n        slippageTolerance\n      ),\n    };\n  }\n\n  private getPriceImpact(\n    inputTradeAmountJSBI: JSBI,\n    expectedOutputAmountJSBI: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): Decimal {\n    if (\n      JSBI.equal(inputTradeAmountJSBI, ZERO) ||\n      JSBI.equal(this.tokenAmounts[inputIndex], ZERO) ||\n      JSBI.equal(this.tokenAmounts[outputIndex], ZERO)\n    ) {\n      return new Decimal(0);\n    }\n\n    const noSlippageOutputAmount = toDecimal(\n      this.getOutputAmountWithNoSlippage(\n        inputTradeAmountJSBI,\n        inputIndex,\n        outputIndex\n      )\n    );\n    const expectedOutputAmount = toDecimal(expectedOutputAmountJSBI);\n    const impact = noSlippageOutputAmount\n      .sub(expectedOutputAmount)\n      .div(noSlippageOutputAmount)\n      .abs();\n\n    return impact;\n  }\n\n  private getFees(outputAmountWithoutFees: JSBI): JSBI {\n    return JSBI.equal(this.traderFee.numerator, ZERO)\n      ? ZERO\n      : JSBI.divide(\n          JSBI.multiply(outputAmountWithoutFees, this.traderFee.numerator),\n          this.traderFee.denominator\n        );\n  }\n\n  private getMinimumOutputAmount(\n    expectedOutputAmount: JSBI,\n    slippageTolerance: Fraction\n  ): JSBI {\n    return JSBI.divide(\n      JSBI.multiply(\n        expectedOutputAmount,\n        JSBI.subtract(\n          slippageTolerance.denominator,\n          slippageTolerance.numerator\n        )\n      ),\n      slippageTolerance.denominator\n    );\n  }\n\n  private getOutputAmount(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    return this.curve.exchange(inputIndex, outputIndex, inputTradeAmount);\n  }\n\n  private getOutputAmountWithNoSlippage(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    return this.curve.computeBaseY(inputIndex, outputIndex, inputTradeAmount);\n  }\n}\n","import JSBI from 'jsbi';\nimport { Curve } from '../math/curve';\nimport { ONE, SwapResult, toDecimal, TWO, ZERO } from '../utils';\nimport Decimal from 'decimal.js';\nimport { Fraction } from '..';\n\nexport class TokenSwapStable {\n  private curve: Curve;\n\n  constructor(\n    amp: JSBI,\n    private tokenAmounts: JSBI[],\n    private traderFee: Fraction,\n    private ownerFee: Fraction\n  ) {\n    this.curve = new Curve(TWO, amp, this.tokenAmounts, [ONE, ONE]);\n  }\n\n  public exchange(\n    inputTradeAmount: JSBI,\n    slippageTolerance: Fraction,\n    outputIndex: number\n  ): SwapResult {\n    let inputIndex = outputIndex === 0 ? 1 : 0;\n    let expectedOutputAmount = this.getExpectedOutputAmount(\n      inputTradeAmount,\n      inputIndex,\n      outputIndex\n    );\n\n    return {\n      priceImpact: this.getPriceImpact(\n        inputTradeAmount,\n        expectedOutputAmount,\n        inputIndex,\n        outputIndex\n      ),\n      fees: this.getFees(inputTradeAmount),\n      expectedOutputAmount,\n      minOutputAmount: this.getMinimumOutputAmount(\n        expectedOutputAmount,\n        slippageTolerance\n      ),\n    };\n  }\n\n  private getPriceImpact(\n    inputTradeAmountJSBI: JSBI,\n    expectedOutputAmountJSBI: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): Decimal {\n    if (\n      JSBI.equal(inputTradeAmountJSBI, ZERO) ||\n      JSBI.equal(this.tokenAmounts[inputIndex], ZERO) ||\n      JSBI.equal(this.tokenAmounts[outputIndex], ZERO)\n    ) {\n      return new Decimal(0);\n    }\n\n    const noSlippageOutputAmount = toDecimal(\n      this.getExpectedOutputAmountWithNoSlippage(\n        inputTradeAmountJSBI,\n        inputIndex,\n        outputIndex\n      )\n    );\n    const expectedOutputAmount = toDecimal(expectedOutputAmountJSBI);\n    const impact = noSlippageOutputAmount\n      .sub(expectedOutputAmount)\n      .div(noSlippageOutputAmount)\n      .abs();\n\n    return impact;\n  }\n\n  private getFees(inputTradeAmount: JSBI): JSBI {\n    const tradingFee = JSBI.equal(this.traderFee.numerator, ZERO)\n      ? ZERO\n      : JSBI.divide(\n          JSBI.multiply(inputTradeAmount, this.traderFee.numerator),\n          this.traderFee.denominator\n        );\n\n    const ownerFee = JSBI.equal(this.ownerFee.numerator, ZERO)\n      ? ZERO\n      : JSBI.divide(\n          JSBI.multiply(inputTradeAmount, this.ownerFee.numerator),\n          this.ownerFee.denominator\n        );\n\n    return JSBI.add(tradingFee, ownerFee);\n  }\n\n  private getExpectedOutputAmount(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    const inputTradeAmountLessFees =\n      this.getInputAmountLessFees(inputTradeAmount);\n\n    return this.getOutputAmount(\n      inputTradeAmountLessFees,\n      inputIndex,\n      outputIndex\n    );\n  }\n\n  private getExpectedOutputAmountWithNoSlippage(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    const inputTradeAmountLessFees =\n      this.getInputAmountLessFees(inputTradeAmount);\n\n    return this.getOutputAmountWithNoSlippage(\n      inputTradeAmountLessFees,\n      inputIndex,\n      outputIndex\n    );\n  }\n\n  private getMinimumOutputAmount(\n    expectedOutputAmountJSBI: JSBI,\n    slippageTolerance: Fraction\n  ): JSBI {\n    return JSBI.divide(\n      JSBI.multiply(\n        expectedOutputAmountJSBI,\n        JSBI.subtract(\n          slippageTolerance.denominator,\n          slippageTolerance.numerator\n        )\n      ),\n      slippageTolerance.denominator\n    );\n  }\n\n  private getInputAmountLessFees(inputTradeAmount: JSBI): JSBI {\n    return JSBI.subtract(inputTradeAmount, this.getFees(inputTradeAmount));\n  }\n\n  private getOutputAmount(\n    inputTradeAmountLessFees: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    return this.curve.exchange(\n      inputIndex,\n      outputIndex,\n      inputTradeAmountLessFees,\n      false\n    );\n  }\n\n  private getOutputAmountWithNoSlippage(\n    inputTradeAmountLessFees: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    return this.curve.computeBaseY(\n      inputIndex,\n      outputIndex,\n      inputTradeAmountLessFees\n    );\n  }\n}\n","import JSBI from 'jsbi';\nimport { SwapResult, toDecimal, ZERO, ceilingDivision } from '../utils';\nimport Decimal from 'decimal.js';\nimport { Fraction } from '..';\n\nexport class TokenSwapConstantProduct {\n  constructor(\n    private tokenAmounts: JSBI[],\n    private traderFee: Fraction,\n    private ownerFee: Fraction,\n    private feesOnInput: boolean = true\n  ) {}\n\n  public exchange(\n    inputTradeAmount: JSBI,\n    slippageTolerance: Fraction,\n    outputIndex: number\n  ): SwapResult {\n    let inputIndex = outputIndex === 0 ? 1 : 0;\n    const newInputTradeAmount = this.feesOnInput\n      ? this.getAmountLessFees(inputTradeAmount)\n      : inputTradeAmount;\n\n    let expectedOutputAmount = this.getExpectedOutputAmount(\n      newInputTradeAmount,\n      inputIndex,\n      outputIndex\n    );\n\n    let fees = this.getFees(\n      this.feesOnInput ? inputTradeAmount : expectedOutputAmount\n    );\n\n    if (!this.feesOnInput) {\n      expectedOutputAmount = this.getAmountLessFees(expectedOutputAmount);\n    }\n\n    return {\n      priceImpact: this.getPriceImpact(\n        newInputTradeAmount,\n        expectedOutputAmount,\n        inputIndex,\n        outputIndex\n      ),\n      fees,\n      expectedOutputAmount,\n      minOutputAmount: this.getMinimumOutputAmount(\n        expectedOutputAmount,\n        slippageTolerance\n      ),\n    };\n  }\n\n  private getPriceImpact(\n    inputTradeAmountJSBI: JSBI,\n    expectedOutputAmountJSBI: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): Decimal {\n    if (\n      JSBI.equal(inputTradeAmountJSBI, ZERO) ||\n      JSBI.equal(this.tokenAmounts[inputIndex], ZERO) ||\n      JSBI.equal(this.tokenAmounts[outputIndex], ZERO)\n    ) {\n      return new Decimal(0);\n    }\n\n    const noSlippageOutputAmount = toDecimal(\n      this.getExpectedOutputAmountWithNoSlippage(\n        inputTradeAmountJSBI,\n        inputIndex,\n        outputIndex\n      )\n    );\n    const expectedOutputAmount = toDecimal(expectedOutputAmountJSBI);\n    const impact = noSlippageOutputAmount\n      .sub(expectedOutputAmount)\n      .div(noSlippageOutputAmount)\n      .abs();\n\n    return impact;\n  }\n\n  private getFees(inputTradeAmount: JSBI): JSBI {\n    const tradingFee = JSBI.equal(this.traderFee.numerator, ZERO)\n      ? ZERO\n      : JSBI.divide(\n          JSBI.multiply(inputTradeAmount, this.traderFee.numerator),\n          this.traderFee.denominator\n        );\n\n    const ownerFee = JSBI.equal(this.ownerFee.numerator, ZERO)\n      ? ZERO\n      : JSBI.divide(\n          JSBI.multiply(inputTradeAmount, this.ownerFee.numerator),\n          this.ownerFee.denominator\n        );\n\n    return JSBI.add(tradingFee, ownerFee);\n  }\n\n  private getExpectedOutputAmount(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    return this.getOutputAmount(inputTradeAmount, inputIndex, outputIndex);\n  }\n\n  private getExpectedOutputAmountWithNoSlippage(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    if (JSBI.equal(this.tokenAmounts[inputIndex], ZERO)) {\n      return this.tokenAmounts[outputIndex];\n    }\n\n    let expectedOutputAmountWithNoSlippage = JSBI.divide(\n      JSBI.multiply(inputTradeAmount, this.tokenAmounts[outputIndex]),\n      this.tokenAmounts[inputIndex]\n    );\n\n    if (this.feesOnInput) {\n      return expectedOutputAmountWithNoSlippage;\n    } else {\n      return this.getAmountLessFees(expectedOutputAmountWithNoSlippage);\n    }\n  }\n\n  private getMinimumOutputAmount(\n    expectedOutputAmountJSBI: JSBI,\n    slippageTolerance: Fraction\n  ): JSBI {\n    return JSBI.divide(\n      JSBI.multiply(\n        expectedOutputAmountJSBI,\n        JSBI.subtract(\n          slippageTolerance.denominator,\n          slippageTolerance.numerator\n        )\n      ),\n      slippageTolerance.denominator\n    );\n  }\n\n  private getAmountLessFees(tradeAmount: JSBI): JSBI {\n    return JSBI.subtract(tradeAmount, this.getFees(tradeAmount));\n  }\n\n  private getOutputAmount(\n    inputTradeAmount: JSBI,\n    inputIndex: number,\n    outputIndex: number\n  ): JSBI {\n    const [poolInputAmount, poolOutputAmount] = [\n      this.tokenAmounts[inputIndex],\n      this.tokenAmounts[outputIndex],\n    ];\n\n    const invariant = this.getInvariant();\n\n    const [newPoolOutputAmount] = ceilingDivision(\n      invariant,\n      JSBI.add(poolInputAmount, inputTradeAmount)\n    );\n\n    return JSBI.subtract(poolOutputAmount, newPoolOutputAmount);\n  }\n\n  getInvariant() {\n    return JSBI.multiply(this.tokenAmounts[0], this.tokenAmounts[1]);\n  }\n}\n","import JSBI from 'jsbi';\n\nexport class Fraction {\n  constructor(public numerator: JSBI, public denominator: JSBI) {}\n}\n","export type Jupiter = {\n  version: '0.1.0';\n  name: 'jupiter';\n  instructions: [\n    {\n      name: 'mercurialExchange';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'saberExchange';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'clock';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feesTokenAccount';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'saberAddDecimalsDeposit';\n      accounts: [\n        {\n          name: 'addDecimalsProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapper';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWrappedTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'saberAddDecimalsWithdraw';\n      accounts: [\n        {\n          name: 'addDecimalsProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapper';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWrappedTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'senchaExchange';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'serumSwap';\n      accounts: [\n        {\n          name: 'market';\n          accounts: [\n            {\n              name: 'market';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'openOrders';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'requestQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'eventQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'bids';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'asks';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'coinVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'pcVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'vaultSigner';\n              isMut: false;\n              isSigner: false;\n            }\n          ];\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'orderPayerTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'coinWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pcWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'side';\n          type: {\n            defined: 'Side';\n          };\n        },\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'tokenSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'stepTokenSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'cropperTokenSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'raydiumSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammTargetOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'raydiumSwapV2';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'aldrinSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'side';\n          type: {\n            defined: 'Side';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'aldrinV2Swap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'curve';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'inAmount';\n          type: {\n            option: 'u64';\n          };\n        },\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'side';\n          type: {\n            defined: 'Side';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'riskCheckAndFee';\n      accounts: [\n        {\n          name: 'tokenLedger';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: 'minimumOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        }\n      ];\n    },\n    {\n      name: 'initializeTokenLedger';\n      accounts: [\n        {\n          name: 'tokenLedger';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    },\n    {\n      name: 'setTokenLedger';\n      accounts: [\n        {\n          name: 'tokenLedger';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAccount';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    },\n    {\n      name: 'createOpenOrders';\n      accounts: [\n        {\n          name: 'openOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    }\n  ];\n  accounts: [\n    {\n      name: 'tokenLedger';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'tokenAccount';\n            type: 'publicKey';\n          },\n          {\n            name: 'amount';\n            type: 'u64';\n          }\n        ];\n      };\n    }\n  ];\n  types: [\n    {\n      name: 'Swap';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'tokens';\n            type: 'u64';\n          },\n          {\n            name: 'minTokens';\n            type: 'u64';\n          },\n          {\n            name: 'side';\n            type: {\n              defined: 'Side';\n            };\n          }\n        ];\n      };\n    },\n    {\n      name: 'Swap';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'tokens';\n            type: 'u64';\n          },\n          {\n            name: 'minTokens';\n            type: 'u64';\n          },\n          {\n            name: 'side';\n            type: {\n              defined: 'Side';\n            };\n          }\n        ];\n      };\n    },\n    {\n      name: 'Deposit';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'amount';\n            type: 'u64';\n          }\n        ];\n      };\n    },\n    {\n      name: 'Withdraw';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'maxBurnAmount';\n            type: 'u64';\n          }\n        ];\n      };\n    },\n    {\n      name: 'Direction';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'LeftToRight';\n          },\n          {\n            name: 'RightToLeft';\n          }\n        ];\n      };\n    },\n    {\n      name: 'Side';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Bid';\n          },\n          {\n            name: 'Ask';\n          }\n        ];\n      };\n    }\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: 'SlippageToleranceExceeded';\n      msg: 'Slippage tolerance exceeded';\n    },\n    {\n      code: 6001;\n      name: 'InvalidTokenLedger';\n      msg: 'Invalid token ledger';\n    },\n    {\n      code: 6002;\n      name: 'MissingTokenLedger';\n      msg: 'Missing token ledger';\n    },\n    {\n      code: 6003;\n      name: 'MissingMercurialExchangeTokenAccount';\n      msg: 'Missing mercurial exchange token account';\n    },\n    {\n      code: 6004;\n      name: 'LedgerTokenAccountDoesNotMatch';\n      msg: 'Ledger token account does not match';\n    },\n    {\n      code: 6005;\n      name: 'MissingPlatformFeeAccount';\n      msg: 'Missing platform fee account';\n    },\n    {\n      code: 6006;\n      name: 'InvalidCalculation';\n      msg: 'Invalid calculation';\n    }\n  ];\n};\n\nexport const IDL: Jupiter = {\n  version: '0.1.0',\n  name: 'jupiter',\n  instructions: [\n    {\n      name: 'mercurialExchange',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'saberExchange',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feesTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'saberAddDecimalsDeposit',\n      accounts: [\n        {\n          name: 'addDecimalsProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapper',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWrappedTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'saberAddDecimalsWithdraw',\n      accounts: [\n        {\n          name: 'addDecimalsProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapper',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWrappedTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'senchaExchange',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'serumSwap',\n      accounts: [\n        {\n          name: 'market',\n          accounts: [\n            {\n              name: 'market',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'openOrders',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'requestQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'eventQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'bids',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'asks',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'coinVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'pcVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultSigner',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'orderPayerTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'coinWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pcWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'side',\n          type: {\n            defined: 'Side',\n          },\n        },\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'tokenSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'stepTokenSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'cropperTokenSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammTargetOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumSwapV2',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'aldrinSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'side',\n          type: {\n            defined: 'Side',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'aldrinV2Swap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'curve',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'inAmount',\n          type: {\n            option: 'u64',\n          },\n        },\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'side',\n          type: {\n            defined: 'Side',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'riskCheckAndFee',\n      accounts: [\n        {\n          name: 'tokenLedger',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'minimumOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'initializeTokenLedger',\n      accounts: [\n        {\n          name: 'tokenLedger',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'setTokenLedger',\n      accounts: [\n        {\n          name: 'tokenLedger',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAccount',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'createOpenOrders',\n      accounts: [\n        {\n          name: 'openOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  accounts: [\n    {\n      name: 'tokenLedger',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'tokenAccount',\n            type: 'publicKey',\n          },\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'Swap',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'tokens',\n            type: 'u64',\n          },\n          {\n            name: 'minTokens',\n            type: 'u64',\n          },\n          {\n            name: 'side',\n            type: {\n              defined: 'Side',\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'Swap',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'tokens',\n            type: 'u64',\n          },\n          {\n            name: 'minTokens',\n            type: 'u64',\n          },\n          {\n            name: 'side',\n            type: {\n              defined: 'Side',\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'Deposit',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Withdraw',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'maxBurnAmount',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Direction',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'LeftToRight',\n          },\n          {\n            name: 'RightToLeft',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Side',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Bid',\n          },\n          {\n            name: 'Ask',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: 'SlippageToleranceExceeded',\n      msg: 'Slippage tolerance exceeded',\n    },\n    {\n      code: 6001,\n      name: 'InvalidTokenLedger',\n      msg: 'Invalid token ledger',\n    },\n    {\n      code: 6002,\n      name: 'MissingTokenLedger',\n      msg: 'Missing token ledger',\n    },\n    {\n      code: 6003,\n      name: 'MissingMercurialExchangeTokenAccount',\n      msg: 'Missing mercurial exchange token account',\n    },\n    {\n      code: 6004,\n      name: 'LedgerTokenAccountDoesNotMatch',\n      msg: 'Ledger token account does not match',\n    },\n    {\n      code: 6005,\n      name: 'MissingPlatformFeeAccount',\n      msg: 'Missing platform fee account',\n    },\n    {\n      code: 6006,\n      name: 'InvalidCalculation',\n      msg: 'Invalid calculation',\n    },\n  ],\n};\n","import { Fraction } from '@jup-ag/math';\nimport JSBI from 'jsbi';\nimport { Cluster, PublicKey } from '@solana/web3.js';\n\nexport const WRAPPED_SOL_MINT = new PublicKey(\n  'So11111111111111111111111111111111111111112'\n);\n\nexport const MAINNET_SERUM_DEX_PROGRAM = new PublicKey(\n  '9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'\n);\nexport const DEVNET_SERUM_DEX_PROGRAM = new PublicKey(\n  'DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY'\n);\n\nexport const MARKETS_URL: Record<Cluster, string> = {\n  devnet: 'https://api.jup.ag/api/markets/cache/devnet',\n  'mainnet-beta': 'https://cache.jup.ag/markets?v=2',\n  testnet: 'https://api.jup.ag/api/markets/cache/devnet',\n};\n\nexport const TOKEN_LIST_URL: Record<Cluster, string> = {\n  devnet: 'https://api.jup.ag/api/tokens/devnet',\n  testnet: 'https://api.jup.ag/api/markets/devnet',\n  'mainnet-beta': 'https://cache.jup.ag/tokens',\n};\n\nexport const LAMPORTS_PER_SIGNATURE = 5000;\n\nexport const RAYDIUM_AMM_V4_PROGRAM_ID = new PublicKey(\n  '675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8'\n);\n\nexport const ALDRIN_SWAP_PROGRAM_ID = new PublicKey(\n  'AMM55ShdkoGRB5jVYPjWziwk8m5MpwyDgsMWHaMSQWH6'\n);\n\n// https://github.com/aldrin-exchange/aldrin-sdk/blob/f93fe3f2d847d79d8ddff507d8d4f62fd803421b/src/v2.json\nexport const ALDRIN_SWAP_V2_PROGRAM_ID = new PublicKey(\n  'CURVGoZn8zycx6FXwwevgBTB2gVvdbGTEpvMJDbgs2t4'\n);\n\nexport const SABER_ADD_DECIMALS_PROGRAM_ID = new PublicKey(\n  'DecZY86MU5Gj7kppfUCEmd4LbXXuyZH1yHaP2NTqdiZB'\n);\n\nexport const CROPPER_PROGRAM_ID = new PublicKey(\n  'CTMAxxk34HjKWxQ3QLZK1HpaLXmBveao3ESePXbiyfzh'\n);\n\nexport const SENCHA_PROGRAM_ID = new PublicKey(\n  'SCHAtsf8mbjyjiv4LkhLKutTf6JnZAbdJKFkXQNMFHZ'\n);\n\nexport const ZERO_FRACTION = new Fraction(JSBI.BigInt(0), JSBI.BigInt(1));\n","import { blob, Layout, Structure, u8, union } from \"@solana/buffer-layout\"\nimport { PublicKey } from \"@solana/web3.js\"\nimport BN from \"bn.js\"\n\nclass PublicKeyLayout extends Layout {\n  private layout: Layout\n\n  constructor(property?: string) {\n    const layout = blob(32)\n    super(layout.span, property)\n    this.layout = layout\n  }\n\n  getSpan(b: Uint8Array, offset?: number) {\n    return this.layout.getSpan(b, offset)\n  }\n\n  decode(b: Uint8Array, offset?: number): PublicKey {\n    return new PublicKey(this.layout.decode(b, offset))\n  }\n\n  encode(src: PublicKey, b: Uint8Array, offset: number): number {\n    return this.layout.encode(src.toBuffer(), b, offset);\n  }\n}\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string) => new PublicKeyLayout(property)\n// export const publicKey = (property: string) => blob(32, property);\n\n\nclass U64Layout extends Layout {\n  private layout: Layout\n  private toNumber: boolean\n\n  constructor(property: string, toNumber: boolean) {\n    const layout = blob(8)\n    super(layout.span, property)\n    this.layout = layout\n    this.toNumber = toNumber\n  }\n\n  getSpan(b: Uint8Array, offset?: number) {\n    return this.layout.getSpan(b, offset)\n  }\n\n  decode(b: Uint8Array, offset?: number): BN | number {\n    const bn = new BN(this.layout.decode(b, offset), 10, 'le');\n    if (this.toNumber) {\n      return bn.toNumber()\n    }\n    return bn\n  }\n\n  encode(src: BN, b: Uint8Array, offset: number): number {\n    return this.layout.encode(src.toArrayLike(Buffer, 'le', this.layout.span), b, offset);\n  }\n}\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string, toNumber = false) => new U64Layout(property, toNumber)\n\n\nexport const rustEnum = (\n  variants: Structure[],\n  property: string,\n) => {\n  const unionLayout = union(u8(), u8(), property);\n  variants.forEach((variant, index) =>\n    unionLayout.addVariant(index, variant, variant.property || ''),\n  );\n  return unionLayout;\n}","import { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { blob, struct, u8 } from '@solana/buffer-layout';\nimport { AccountInfo, PublicKey } from '@solana/web3.js';\nimport { publicKey, uint64 } from '../../utils/layout';\n\nexport const CropperTokenSwapLayout = struct([\n  u8('version'),\n  u8('isInitialized'),\n  u8('nonce'),\n  publicKey('ammId'),\n  publicKey('serumProgramId'),\n  publicKey('serumMarket'),\n  publicKey('tokenProgramId'),\n  publicKey('tokenAAccount'),\n  publicKey('tokenBAccount'),\n  publicKey('poolMint'),\n  publicKey('mintA'),\n  publicKey('mintB'),\n]);\n\nconst CropperStateLayout = struct([\n  u8('isInitialized'),\n  publicKey('stateOwner'),\n  publicKey('feeOwner'),\n  uint64('initialSupply'),\n  uint64('returnFeeNumerator'),\n  uint64('fixedFeeNumerator'),\n  uint64('feeDenominator'),\n  u8('curveType'),\n  blob(32, 'curveParameters'),\n]);\n\nexport interface CropperState {\n  isInitialized: boolean;\n  stateOwner: PublicKey;\n  feeOwner: PublicKey;\n  initialSupply: number;\n  returnFeeNumerator: number;\n  fixedFeeNumerator: number;\n  feeDenominator: number;\n  curveType: number;\n  curveParameters: Uint8Array;\n}\n\nexport interface CropperPoolState {\n  programId: PublicKey;\n  authority: PublicKey;\n  version: number;\n  isInitialized: boolean;\n  nonce: number;\n  ammId: PublicKey;\n  serumProgramId: PublicKey;\n  serumMarket: PublicKey;\n  tokenProgramId: PublicKey;\n  tokenAAccount: PublicKey;\n  tokenBAccount: PublicKey;\n  poolMint: PublicKey;\n  mintA: PublicKey;\n  mintB: PublicKey;\n}\n\n// This seems to be hardcoded.\nexport const CROPPER_STATE_ADDRESS = new PublicKey(\n  '3hsU1VgsBgBgz5jWiqdw9RfGU6TpWdCmdah1oi4kF3Tq'\n);\n\nexport const accountInfoToCropperPoolState = (\n  address: PublicKey,\n  accountInfo: AccountInfo<Buffer>\n): CropperPoolState => {\n  const programId = accountInfo.owner;\n\n  const decoded = CropperTokenSwapLayout.decode(accountInfo.data);\n  const [authority] = findProgramAddressSync([address.toBuffer()], programId);\n\n  return {\n    programId,\n    authority,\n    version: decoded.version,\n    isInitialized: decoded.isInitialized,\n    nonce: decoded.nonce,\n    ammId: decoded.ammId,\n    serumProgramId: decoded.serumProgramId,\n    tokenProgramId: decoded.tokenProgramId,\n    tokenAAccount: decoded.tokenAAccount,\n    tokenBAccount: decoded.tokenBAccount,\n    serumMarket: decoded.serumMarket,\n    poolMint: decoded.poolMint,\n    mintA: decoded.mintA,\n    mintB: decoded.mintB,\n  };\n};\n\nexport const stateAccountInfoToCropperState = (\n  accountInfo: AccountInfo<Buffer>\n): CropperState => {\n  const decoded = CropperStateLayout.decode(accountInfo.data);\n\n  return {\n    isInitialized: decoded.isInitialized,\n    stateOwner: decoded.stateOwner,\n    feeOwner: decoded.feeOwner,\n    initialSupply: decoded.initialSupply,\n    returnFeeNumerator: decoded.returnFeeNumerator.toNumber(),\n    fixedFeeNumerator: decoded.fixedFeeNumerator.toNumber(),\n    feeDenominator: decoded.feeDenominator.toNumber(),\n    curveType: decoded.curveType,\n    curveParameters: decoded.curveParameters,\n  };\n};\n","import {\n  StableSwapNPool,\n  STABLE_SWAP_N_POOL_PROGRAM_ID,\n} from '@mercurial-finance/stable-swap-n-pool';\nimport type { Provider } from '@project-serum/anchor';\nimport { Program } from '@project-serum/anchor';\nimport {\n  createProgramAddressSync,\n  findProgramAddressSync,\n} from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { Market } from '@project-serum/serum';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport {\n  AccountMeta,\n  PublicKey,\n  SystemProgram,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport { Jupiter as JupiterIDL, IDL } from './idl/jupiter';\nimport type { RaydiumAmm } from './raydium/raydiumAmm';\nimport { StableSwap } from '@saberhq/stableswap-sdk';\nimport {\n  ALDRIN_SWAP_PROGRAM_ID,\n  ALDRIN_SWAP_V2_PROGRAM_ID,\n  RAYDIUM_AMM_V4_PROGRAM_ID,\n  SABER_ADD_DECIMALS_PROGRAM_ID,\n} from '../constants';\nimport { AldrinPoolState } from './aldrin/poolState';\nimport type { TokenSwapState } from './spl-token-swap/splTokenSwapAmm';\nimport { PlatformFee } from './types';\nimport type { AddDecimals } from './saber/saberAddDecimalsAmm';\nimport { CropperPoolState, CROPPER_STATE_ADDRESS } from './cropper/swapLayout';\nimport { SenchaPoolState } from './sencha/swapLayout';\n\n// Side rust enum used for the program's RPC API.\nconst Side = {\n  Bid: { bid: {} },\n  Ask: { ask: {} },\n};\n\nexport const JUPITER_PROGRAM_ID_STAGING = new PublicKey(\n  '64vBwEhR447K9tJxE4bwfkpXhgYcGz78a3AATC8sPrUS' //'JUSCvTfqyK9H9yjb64AasMc6fVpK3VsE3RCBCFz9y4Z'\n);\n\nexport const JUPITER_PROGRAM_ID_PRODUCTION = new PublicKey(\n  'JUP2jxvXaqu7NQY1GmNF4m1vodw12LVXYxbFL2uJvfo'\n);\n\nconst JUPITER_PROGRAM_ID = JUPITER_PROGRAM_ID_PRODUCTION; // JUPITER_PROGRAM_ID_PRODUCTION;\n\nconst JUPITER_PROGRAM = new Program<JupiterIDL>(\n  IDL as JupiterIDL,\n  JUPITER_PROGRAM_ID,\n  {} as Provider\n);\n\nconst [TOKEN_LEDGER] = findProgramAddressSync(\n  [Buffer.from('token_ledger')],\n  JUPITER_PROGRAM_ID\n);\n\nfunction stableSwapNPoolIntoMercurialExchange(\n  stableSwapNPool: StableSwapNPool,\n  sourceTokenAccount: PublicKey,\n  destinationTokenAccount: PublicKey,\n  user: PublicKey\n) {\n  return {\n    swapProgram: STABLE_SWAP_N_POOL_PROGRAM_ID,\n    swapState: stableSwapNPool.poolAccount,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    poolAuthority: stableSwapNPool.authority,\n    userTransferAuthority: user,\n\n    sourceTokenAccount,\n    destinationTokenAccount,\n  };\n}\n\nfunction raydiumAmmToRaydiumSwap(\n  raydiumAmm: RaydiumAmm,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey\n) {\n  const [ammAuthority] = findProgramAddressSync(\n    [\n      new Uint8Array(\n        Buffer.from('amm authority'.replace('\\u00A0', ' '), 'utf-8')\n      ),\n    ],\n    RAYDIUM_AMM_V4_PROGRAM_ID\n  );\n\n  if (!raydiumAmm.serumMarketKeys) {\n    throw Error('RaydiumAmm is missing serumMarketKeys');\n  }\n\n  return {\n    swapProgram: RAYDIUM_AMM_V4_PROGRAM_ID,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    ammId: raydiumAmm.ammId,\n    ammAuthority,\n    ammOpenOrders: raydiumAmm.ammOpenOrders,\n    poolCoinTokenAccount: raydiumAmm.poolCoinTokenAccount,\n    poolPcTokenAccount: raydiumAmm.poolPcTokenAccount,\n    serumProgramId: raydiumAmm.serumProgramId,\n    serumMarket: raydiumAmm.serumMarket,\n    serumBids: raydiumAmm.serumMarketKeys.serumBids,\n    serumAsks: raydiumAmm.serumMarketKeys.serumAsks,\n    serumEventQueue: raydiumAmm.serumMarketKeys.serumEventQueue,\n    serumCoinVaultAccount: raydiumAmm.serumMarketKeys.serumCoinVaultAccount,\n    serumPcVaultAccount: raydiumAmm.serumMarketKeys.serumPcVaultAccount,\n    serumVaultSigner: raydiumAmm.serumMarketKeys.serumVaultSigner,\n    userSourceTokenAccount: userSourceTokenAccountAddress,\n    userDestinationTokenAccount: userDestinationTokenAccountAddress,\n    userSourceOwner: user,\n  };\n}\n\nfunction marketIntoSerumSwap(\n  market: Market,\n  openOrdersAddress: PublicKey,\n  orderPayerTokenAccountAddress: PublicKey,\n  coinWallet: PublicKey,\n  pcWallet: PublicKey,\n  user: PublicKey\n) {\n  const vaultSigner = createProgramAddressSync(\n    [\n      market.address.toBuffer(),\n      market.decoded.vaultSignerNonce.toArrayLike(Buffer, 'le', 8),\n    ],\n    market.programId\n  );\n\n  return {\n    market: {\n      market: market.address,\n      openOrders: openOrdersAddress,\n      requestQueue: market.decoded.requestQueue,\n      eventQueue: market.decoded.eventQueue,\n      bids: market.bidsAddress,\n      asks: market.asksAddress,\n      coinVault: market.decoded.baseVault,\n      pcVault: market.decoded.quoteVault,\n      vaultSigner,\n    },\n    authority: user,\n    orderPayerTokenAccount: orderPayerTokenAccountAddress,\n    coinWallet,\n    pcWallet,\n    // Programs.\n    dexProgram: market.programId,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    // Sysvars.\n    rent: SYSVAR_RENT_PUBKEY,\n  };\n}\n\nexport function createMercurialExchangeInstruction(\n  stableSwapNPool: StableSwapNPool,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const remainingAccounts: AccountMeta[] = [];\n\n  for (const swapTokenAccount of stableSwapNPool.tokenAccounts) {\n    remainingAccounts.push({\n      pubkey: swapTokenAccount,\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n  remainingAccounts.push(\n    ...prepareRemainingAccounts(amount, platformFee?.feeAccount)\n  );\n\n  return JUPITER_PROGRAM.instruction.mercurialExchange(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: stableSwapNPoolIntoMercurialExchange(\n        stableSwapNPool,\n        userSourceTokenAccountAddress,\n        userDestinationTokenAccountAddress,\n        user\n      ),\n      remainingAccounts,\n    }\n  );\n}\n\nexport function createSerumSwapInstruction(\n  market: Market,\n  inputMint: PublicKey,\n  openOrdersAddress: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const { side, coinWallet, pcWallet } = inputMint.equals(\n    market.baseMintAddress\n  )\n    ? {\n        side: Side.Ask,\n        coinWallet: userSourceTokenAccountAddress,\n        pcWallet: userDestinationTokenAccountAddress,\n      }\n    : {\n        side: Side.Bid,\n        coinWallet: userDestinationTokenAccountAddress,\n        pcWallet: userSourceTokenAccountAddress,\n      };\n\n  return JUPITER_PROGRAM.instruction.serumSwap(\n    side,\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: marketIntoSerumSwap(\n        market,\n        openOrdersAddress,\n        userSourceTokenAccountAddress,\n        coinWallet,\n        pcWallet,\n        user\n      ),\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createTokenSwapInstruction(\n  tokenSwapState: TokenSwapState,\n  inputMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined,\n  isStep: boolean\n): TransactionInstruction {\n  const [swapSource, swapDestination] = inputMint.equals(tokenSwapState.mintA)\n    ? [tokenSwapState.tokenAccountA, tokenSwapState.tokenAccountB]\n    : [tokenSwapState.tokenAccountB, tokenSwapState.tokenAccountA];\n\n  return (\n    isStep\n      ? JUPITER_PROGRAM.instruction.stepTokenSwap\n      : JUPITER_PROGRAM.instruction.tokenSwap\n  )(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        tokenSwapProgram: tokenSwapState.programId,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        swap: tokenSwapState.address,\n        authority: tokenSwapState.authority,\n        userTransferAuthority: user,\n        source: userSourceTokenAccountAddress,\n        swapSource,\n        swapDestination,\n        destination: userDestinationTokenAccountAddress,\n        poolMint: tokenSwapState.poolToken,\n        poolFee: tokenSwapState.feeAccount,\n      },\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createSenchaSwapInstruction(\n  poolState: SenchaPoolState,\n  sourceMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const [swapSource, swapDestination] = sourceMint.equals(poolState.token0Mint)\n    ? [poolState.token0Reserves, poolState.token1Reserves]\n    : [poolState.token1Reserves, poolState.token0Reserves];\n\n  const [feesSource, feesDestination] = sourceMint.equals(poolState.token0Mint)\n    ? [poolState.token0Fees, poolState.token1Fees]\n    : [poolState.token1Fees, poolState.token0Fees];\n\n  return JUPITER_PROGRAM.instruction.senchaExchange(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        swapProgram: poolState.programId,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        swap: poolState.ammId,\n        userAuthority: user,\n        inputUserAccount: userSourceTokenAccountAddress,\n        inputTokenAccount: swapSource,\n        inputFeesAccount: feesSource,\n        outputUserAccount: userDestinationTokenAccountAddress,\n        outputTokenAccount: swapDestination,\n        outputFeesAccount: feesDestination,\n      },\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createCropperSwapInstruction(\n  poolState: CropperPoolState,\n  sourceMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  feeAccount: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const [swapSource, swapDestination] = sourceMint.equals(poolState.mintA)\n    ? [poolState.tokenAAccount, poolState.tokenBAccount]\n    : [poolState.tokenBAccount, poolState.tokenAAccount];\n\n  return JUPITER_PROGRAM.instruction.cropperTokenSwap(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        tokenSwapProgram: poolState.programId,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        swap: poolState.ammId,\n        swapState: CROPPER_STATE_ADDRESS,\n        authority: poolState.authority,\n        userTransferAuthority: user,\n        source: userSourceTokenAccountAddress,\n        swapSource,\n        swapDestination,\n        destination: userDestinationTokenAccountAddress,\n        poolMint: poolState.poolMint,\n        poolFee: feeAccount,\n      },\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createRaydiumSwapInstruction(\n  raydiumAmm: RaydiumAmm,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  return JUPITER_PROGRAM.instruction.raydiumSwapV2(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: raydiumAmmToRaydiumSwap(\n        raydiumAmm,\n        userSourceTokenAccountAddress,\n        userDestinationTokenAccountAddress,\n        user\n      ),\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createAldrinSwapInstruction(\n  poolState: AldrinPoolState,\n  sourceMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const [side, userBaseTokenAccount, userQuoteTokenAccount] = sourceMint.equals(\n    poolState.baseTokenMint\n  )\n    ? [\n        Side.Ask,\n        userSourceTokenAccountAddress,\n        userDestinationTokenAccountAddress,\n      ]\n    : [\n        Side.Bid,\n        userDestinationTokenAccountAddress,\n        userSourceTokenAccountAddress,\n      ];\n\n  return JUPITER_PROGRAM.instruction.aldrinSwap(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    side,\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        swapProgram: ALDRIN_SWAP_PROGRAM_ID,\n        pool: poolState.address,\n        poolSigner: poolState.poolSigner,\n        poolMint: poolState.poolMint,\n        baseTokenVault: poolState.baseTokenVault,\n        quoteTokenVault: poolState.quoteTokenVault,\n        feePoolTokenAccount: poolState.feePoolTokenAccount,\n        walletAuthority: user,\n        userBaseTokenAccount,\n        userQuoteTokenAccount,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      },\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createAldrinV2SwapInstruction(\n  poolState: AldrinPoolState,\n  sourceMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  curve: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const [side, userBaseTokenAccount, userQuoteTokenAccount] = sourceMint.equals(\n    poolState.baseTokenMint\n  )\n    ? [\n        Side.Ask,\n        userSourceTokenAccountAddress,\n        userDestinationTokenAccountAddress,\n      ]\n    : [\n        Side.Bid,\n        userDestinationTokenAccountAddress,\n        userSourceTokenAccountAddress,\n      ];\n\n  return JUPITER_PROGRAM.instruction.aldrinV2Swap(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    side,\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        swapProgram: ALDRIN_SWAP_V2_PROGRAM_ID,\n        pool: poolState.address,\n        poolSigner: poolState.poolSigner,\n        poolMint: poolState.poolMint,\n        baseTokenVault: poolState.baseTokenVault,\n        quoteTokenVault: poolState.quoteTokenVault,\n        feePoolTokenAccount: poolState.feePoolTokenAccount,\n        walletAuthority: user,\n        userBaseTokenAccount,\n        userQuoteTokenAccount,\n        curve,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      },\n      remainingAccounts: prepareRemainingAccounts(\n        amount,\n        platformFee?.feeAccount\n      ),\n    }\n  );\n}\n\nexport function createRiskCheckAndFeeInstruction(\n  userDestinationTokenAccount: PublicKey,\n  userTransferAuthority: PublicKey,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const remainingAccounts: AccountMeta[] = [];\n\n  if (platformFee?.feeAccount) {\n    remainingAccounts.push({\n      pubkey: platformFee.feeAccount,\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n\n  return JUPITER_PROGRAM.instruction.riskCheckAndFee(\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        tokenLedger: TOKEN_LEDGER,\n        userDestinationTokenAccount,\n        userTransferAuthority,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      },\n      remainingAccounts,\n    }\n  );\n}\n\nexport function createSetTokenLedgerInstruction(\n  tokenAccountAddress: PublicKey\n): TransactionInstruction {\n  return JUPITER_PROGRAM.instruction.setTokenLedger({\n    accounts: {\n      tokenLedger: TOKEN_LEDGER,\n      tokenAccount: tokenAccountAddress,\n    },\n  });\n}\n\nexport function createCreateTokenLedgerInstruction(\n  user: PublicKey\n): TransactionInstruction {\n  return JUPITER_PROGRAM.instruction.initializeTokenLedger({\n    accounts: {\n      tokenLedger: TOKEN_LEDGER,\n      payer: user,\n      systemProgram: SystemProgram.programId,\n      rent: SYSVAR_RENT_PUBKEY,\n    },\n  });\n}\n\nexport function createOpenOrdersInstruction(\n  market: Market,\n  user: PublicKey\n): [PublicKey, TransactionInstruction] {\n  const [openOrders] = findProgramAddressSync(\n    [Buffer.from('open_orders'), market.publicKey.toBuffer(), user.toBuffer()],\n    JUPITER_PROGRAM_ID\n  );\n\n  const ix = JUPITER_PROGRAM.instruction.createOpenOrders({\n    accounts: {\n      openOrders,\n      payer: user,\n      dexProgram: market.programId,\n      systemProgram: SystemProgram.programId,\n      rent: SYSVAR_RENT_PUBKEY,\n      market: market.publicKey,\n    },\n  });\n  return [openOrders, ix];\n}\n\nfunction saberPoolIntoSaberExchange(\n  saberPool: StableSwap,\n  sourceMintAddress: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey\n) {\n  const feesTokenAccount = sourceMintAddress.equals(saberPool.state.tokenA.mint)\n    ? saberPool.state.tokenB.adminFeeAccount\n    : saberPool.state.tokenA.adminFeeAccount;\n  const [inputTokenAccount, outputTokenAccount] = sourceMintAddress.equals(\n    saberPool.state.tokenA.mint\n  )\n    ? [saberPool.state.tokenA.reserve, saberPool.state.tokenB.reserve]\n    : [saberPool.state.tokenB.reserve, saberPool.state.tokenA.reserve];\n\n  return {\n    swapProgram: saberPool.config.swapProgramID,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    swap: saberPool.config.swapAccount,\n    swapAuthority: saberPool.config.authority,\n    userAuthority: user,\n    clock: SYSVAR_CLOCK_PUBKEY,\n    inputUserAccount: userSourceTokenAccountAddress,\n    inputTokenAccount,\n    outputUserAccount: userDestinationTokenAccountAddress,\n    outputTokenAccount,\n    feesTokenAccount,\n  };\n}\n\nexport function createSaberExchangeInstruction(\n  saberPool: StableSwap,\n  inputMint: PublicKey,\n  userSourceTokenAccountAddress: PublicKey,\n  userDestinationTokenAccountAddress: PublicKey,\n  user: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n): TransactionInstruction {\n  const remainingAccounts = prepareRemainingAccounts(\n    amount,\n    platformFee?.feeAccount\n  );\n  return JUPITER_PROGRAM.instruction.saberExchange(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: saberPoolIntoSaberExchange(\n        saberPool,\n        inputMint,\n        userSourceTokenAccountAddress,\n        userDestinationTokenAccountAddress,\n        user\n      ),\n      remainingAccounts,\n    }\n  );\n}\n\nexport function createSaberAddDecimalsDepositInstruction(\n  addDecimals: AddDecimals,\n  sourceTokenAccountAddress: PublicKey,\n  destinationTokenAccountAddress: PublicKey,\n  userTransferAuthority: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n) {\n  const remainingAccounts = prepareRemainingAccounts(\n    amount,\n    platformFee?.feeAccount\n  );\n  return JUPITER_PROGRAM.instruction.saberAddDecimalsDeposit(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        addDecimalsProgram: SABER_ADD_DECIMALS_PROGRAM_ID,\n        wrapper: addDecimals.wrapper,\n        wrapperMint: addDecimals.mint,\n        wrapperUnderlyingTokens: addDecimals.wrapperUnderlyingTokens,\n        owner: userTransferAuthority,\n        userUnderlyingTokens: sourceTokenAccountAddress,\n        userWrappedTokens: destinationTokenAccountAddress,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      },\n      remainingAccounts,\n    }\n  );\n}\n\nexport function createSaberAddDecimalsWithdrawInstruction(\n  addDecimals: AddDecimals,\n  sourceTokenAccountAddress: PublicKey,\n  destinationTokenAccountAddress: PublicKey,\n  userTransferAuthority: PublicKey,\n  amount: number | null,\n  minimumOutAmount: number,\n  platformFee: PlatformFee | undefined\n) {\n  const remainingAccounts = prepareRemainingAccounts(\n    amount,\n    platformFee?.feeAccount\n  );\n  return JUPITER_PROGRAM.instruction.saberAddDecimalsWithdraw(\n    amount ? new BN(amount) : amount,\n    new BN(minimumOutAmount),\n    platformFee?.feeBps ?? 0,\n    {\n      accounts: {\n        addDecimalsProgram: SABER_ADD_DECIMALS_PROGRAM_ID,\n        wrapper: addDecimals.wrapper,\n        wrapperMint: addDecimals.mint,\n        wrapperUnderlyingTokens: addDecimals.wrapperUnderlyingTokens,\n        owner: userTransferAuthority,\n        userUnderlyingTokens: destinationTokenAccountAddress,\n        userWrappedTokens: sourceTokenAccountAddress,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      },\n      remainingAccounts,\n    }\n  );\n}\n\nfunction prepareRemainingAccounts(\n  amount: number | null,\n  feeAccount: PublicKey | undefined\n): AccountMeta[] {\n  const remainingAccounts = [];\n\n  if (amount === null) {\n    remainingAccounts.push({\n      pubkey: TOKEN_LEDGER,\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n  if (feeAccount) {\n    remainingAccounts.push({\n      pubkey: feeAccount,\n      isSigner: false,\n      isWritable: true,\n    });\n  }\n\n  return remainingAccounts;\n}\n","import { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport { AccountInfoMap, Amm, QuoteParams, SwapParams } from '../amm';\n// Modified from saber's registry to contain the underlying mint decimal to avoid pointless queries\nimport addDecimalsJson from './add-decimals-complete-state.mainnet-beta.json';\nimport {\n  createSaberAddDecimalsDepositInstruction,\n  createSaberAddDecimalsWithdrawInstruction,\n} from '../jupiterInstruction';\n\nexport interface AddDecimals {\n  wrapper: PublicKey;\n  underlying: PublicKey;\n  underlyingDecimals: number;\n  wrapperUnderlyingTokens: PublicKey;\n  mint: PublicKey;\n  decimals: number;\n}\n\nexport function getSaberWrappedDecimalsAmms() {\n  return addDecimalsJson.map((addDecimalJson) => {\n    const addDecimals = {\n      wrapper: new PublicKey(addDecimalJson.wrapper),\n      underlying: new PublicKey(addDecimalJson.underlying),\n      underlyingDecimals: addDecimalJson.underlyingDecimals,\n      wrapperUnderlyingTokens: new PublicKey(\n        addDecimalJson.wrapperUnderlyingTokens\n      ),\n      mint: new PublicKey(addDecimalJson.mint),\n      decimals: addDecimalJson.decimals,\n    };\n\n    return new SaberAddDecimalsAmm(new WrappedToken(addDecimals));\n  });\n}\n\nexport class WrappedToken {\n  constructor(public addDecimals: AddDecimals) {}\n\n  private get multiplier() {\n    return (\n      10 ** (this.addDecimals.decimals - this.addDecimals.underlyingDecimals)\n    );\n  }\n\n  getOutputAmount(inputAmount: number, inputMint: PublicKey): JSBI {\n    if (this.addDecimals.mint.equals(inputMint)) {\n      // withdraw, so divide\n      return this.calculateWithdrawOutputAmount(inputAmount);\n    } else if (this.addDecimals.underlying.equals(inputMint)) {\n      // deposit, so multiply\n      return this.calculateDepositOutputAmount(inputAmount);\n    }\n    throw new Error(`unknown input token: ${inputMint.toString()}`);\n  }\n\n  private calculateDepositOutputAmount(inputAmount: number) {\n    return JSBI.multiply(\n      JSBI.BigInt(inputAmount),\n      JSBI.BigInt(this.multiplier)\n    );\n  }\n\n  private calculateWithdrawOutputAmount(inputAmount: number) {\n    return JSBI.divide(JSBI.BigInt(inputAmount), JSBI.BigInt(this.multiplier));\n  }\n}\n\n// This isn't technically an Amm but this the smoothest solution to allow its usage without a major refactor of the abstractions for now\nexport class SaberAddDecimalsAmm implements Amm {\n  label = 'Saber (Decimals)';\n\n  constructor(private wrappedToken: WrappedToken) {}\n\n  get id() {\n    return this.wrappedToken.addDecimals.wrapper.toBase58();\n  }\n\n  getAccountsForUpdate() {\n    return new Array<PublicKey>();\n  }\n\n  update(_accountInfoMap: AccountInfoMap) {}\n\n  getQuote({ sourceMint, amount }: QuoteParams) {\n    const outAmount = JSBI.toNumber(\n      this.wrappedToken.getOutputAmount(amount, sourceMint)\n    );\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount,\n      feeAmount: 0,\n      feeMint: sourceMint.toBase58(),\n      feePct: 0,\n      priceImpactPct: 0,\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    if (this.wrappedToken.addDecimals.underlying.equals(sourceMint)) {\n      return [createSaberAddDecimalsDepositInstruction(\n        this.wrappedToken.addDecimals,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        userTransferAuthority,\n        amount,\n        minimumOutAmount,\n        platformFee\n      )];\n    } else {\n      return [createSaberAddDecimalsWithdrawInstruction(\n        this.wrappedToken.addDecimals,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        userTransferAuthority,\n        amount,\n        minimumOutAmount,\n        platformFee\n      )];\n    }\n  }\n\n  get reserveTokenMints() {\n    return [\n      this.wrappedToken.addDecimals.underlying,\n      this.wrappedToken.addDecimals.mint,\n    ];\n  }\n}\n","export function getTwoPermutations<T>(array: T[]) {\n  return array.reduce((acc, item) => {\n    array.forEach((otherItem) => {\n      if (item !== otherItem) {\n        acc.push([item, otherItem]);\n      }\n    });\n    return acc;\n  }, new Array<T[]>());\n}","import {\n  AccountInfo,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { PlatformFee, TokenMintAddress } from '..';\n\nexport interface QuoteParams {\n  sourceMint: PublicKey;\n  destinationMint: PublicKey;\n  amount: number;\n}\n\nexport interface Quote {\n  notEnoughLiquidity: boolean;\n  minInAmount?: number;\n  minOutAmount?: number;\n  inAmount: number;\n  outAmount: number;\n  feeAmount: number;\n  feeMint: TokenMintAddress;\n  feePct: number;\n  priceImpactPct: number;\n}\n\nexport interface SwapParams {\n  sourceMint: PublicKey;\n  destinationMint: PublicKey;\n  sourceTokenAccount: PublicKey;\n  destinationTokenAccount: PublicKey;\n  userTransferAuthority: PublicKey;\n  amount: number | null;\n  minimumOutAmount: number;\n  openOrdersAddress?: PublicKey;\n  platformFee?: PlatformFee;\n}\n\nexport type AccountInfoMap = Map<string, AccountInfo<Buffer> | null>;\n\nexport interface Amm {\n  /* Label for UI usage */\n  label: string;\n  /* Unique id to recognize the AMM */\n  id: string;\n  /* Reserve token mints for the purpose of routing */\n  reserveTokenMints: PublicKey[];\n\n  getAccountsForUpdate(): PublicKey[];\n  update(accountInfoMap: AccountInfoMap): void;\n\n  getQuote(quoteParams: QuoteParams): Quote;\n\n  createSwapInstructions(swapParams: SwapParams): TransactionInstruction[];\n}\n\nexport const mapAddressToAccountInfos = (\n  accountInfoMap: AccountInfoMap,\n  addresses: PublicKey[]\n) => {\n  const accountInfos = addresses.map((address) => {\n    const accountInfo = accountInfoMap.get(address.toString());\n    if (!accountInfo) {\n      throw new Error(`Account info ${address.toBase58()} missing`);\n    }\n    return accountInfo;\n  });\n\n  return accountInfos;\n};\n","// Only a few hardcoded pools for now, until we query the whole lot through api\nimport { struct, nu64 as u64, blob, Layout } from '@solana/buffer-layout';\n\nexport const publicKey = (property: string = 'publicKey'): Layout => {\n  return blob(32, property);\n};\n\nexport const u128 = (property: string = 'uint128'): Layout => {\n  return blob(16, property);\n};\n\nexport const AMM_INFO_LAYOUT_V4 = struct([\n  u64('status'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('systemDecimalsValue'),\n  // Fees\n  u64('minSeparateNumerator'),\n  u64('minSeparateDenominator'),\n  u64('tradeFeeNumerator'),\n  u64('tradeFeeDenominator'),\n  u64('pnlNumerator'),\n  u64('pnlDenominator'),\n  u64('swapFeeNumerator'),\n  u64('swapFeeDenominator'),\n  // OutPutData\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlPc'),\n  u64('totalPnlCoin'),\n  u128('poolTotalDepositPc'),\n  u128('poolTotalDepositCoin'),\n  u128('swapCoinInAmount'),\n  u128('swapPcOutAmount'),\n  u64('swapCoin2PcFee'),\n  u128('swapPcInAmount'),\n  u128('swapCoinOutAmount'),\n  u64('swapPc2CoinFee'),\n\n  publicKey('poolCoinTokenAccount'),\n  publicKey('poolPcTokenAccount'),\n  publicKey('coinMintAddress'),\n  publicKey('pcMintAddress'),\n  publicKey('lpMintAddress'),\n  publicKey('ammOpenOrders'),\n  publicKey('serumMarket'),\n  publicKey('serumProgramId'),\n  publicKey('ammTargetOrders'),\n  publicKey('poolWithdrawQueue'),\n  publicKey('poolTempLpTokenAccount'),\n  publicKey('ammOwner'),\n  publicKey('pnlOwner'),\n]);\n","// https://github.com/raydium-io/raydium-ui/blob/4048286f79fc4b71c3ffbfd9095470ab0c7d3862/src/utils/liquidity.ts#L30-L82\n\nimport { createProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { Market, OpenOrders } from '@project-serum/serum';\nimport { u64 } from '@solana/spl-token';\nimport {\n  AccountInfo,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport Decimal from 'decimal.js';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createRaydiumSwapInstruction } from '../jupiterInstruction';\nimport { AMM_INFO_LAYOUT_V4 } from './pools';\n\n// Explained here\n// https://discordapp.com/channels/813741812598439958/813750197423308820/900288485028683776\n// total_pc = amminfo.pc_vault.balance + amminfo.openorder.total_quote - amminfo.need_taken_pnl_pc\n// total_coin = amminfo.coin_vault.balance + amminfo.openorder.total_base - amminfo.need_taken_pnl_coin\n\ntype SerumMarketKeys = {\n  serumBids: PublicKey;\n  serumAsks: PublicKey;\n  serumEventQueue: PublicKey;\n  serumCoinVaultAccount: PublicKey;\n  serumPcVaultAccount: PublicKey;\n  serumVaultSigner: PublicKey;\n};\n\nexport class RaydiumAmm implements Amm {\n  label = 'Raydium';\n\n  coinMint: PublicKey;\n  pcMint: PublicKey;\n\n  status: number;\n  serumProgramId: PublicKey;\n  serumMarket: PublicKey;\n  ammOpenOrders: PublicKey;\n  ammTargetOrders: PublicKey;\n  poolCoinTokenAccount: PublicKey;\n  poolPcTokenAccount: PublicKey;\n\n  serumMarketKeys: SerumMarketKeys | undefined;\n\n  coinReserve: u64 | undefined;\n  pcReserve: u64 | undefined;\n\n  swapFeeNumerator: u64;\n  swapFeeDenominator: u64;\n\n  constructor(\n    public ammId: PublicKey,\n    public ammAccountInfo: AccountInfo<Buffer>\n  ) {\n    const decoded = AMM_INFO_LAYOUT_V4.decode(ammAccountInfo.data);\n\n    this.status = decoded.status;\n    this.coinMint = new PublicKey(decoded.coinMintAddress);\n    this.pcMint = new PublicKey(decoded.pcMintAddress);\n\n    this.poolCoinTokenAccount = new PublicKey(decoded.poolCoinTokenAccount);\n    this.poolPcTokenAccount = new PublicKey(decoded.poolPcTokenAccount);\n\n    this.swapFeeNumerator = new u64(decoded.swapFeeNumerator);\n    this.swapFeeDenominator = new u64(decoded.swapFeeDenominator);\n\n    this.serumProgramId = new PublicKey(decoded.serumProgramId);\n    this.serumMarket = new PublicKey(decoded.serumMarket);\n    this.ammOpenOrders = new PublicKey(decoded.ammOpenOrders);\n    this.ammTargetOrders = new PublicKey(decoded.ammTargetOrders);\n  }\n\n  get id() {\n    return this.ammId.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [\n      this.ammId,\n      this.poolCoinTokenAccount,\n      this.poolPcTokenAccount,\n      this.ammOpenOrders,\n      this.serumMarket,\n    ];\n  }\n\n  update(accountInfoMap: AccountInfoMap) {\n    const [\n      ammAccountInfo,\n      poolCoinTokenAccountInfo,\n      poolPcTokenAccountInfo,\n      ammOpenOrdersAccountInfo,\n      serumMarketMarketInfo,\n    ] = mapAddressToAccountInfos(accountInfoMap, this.getAccountsForUpdate());\n\n    this.ammAccountInfo = ammAccountInfo!;\n\n    const [coinAmount, pcAmount] = [\n      RaydiumAmm.tokenAmountAccessor(poolCoinTokenAccountInfo!),\n      RaydiumAmm.tokenAmountAccessor(poolPcTokenAccountInfo!),\n    ];\n\n    const openOrders = OpenOrders.fromAccountInfo(\n      this.ammOpenOrders,\n      ammOpenOrdersAccountInfo!,\n      ammOpenOrdersAccountInfo!.owner\n    );\n\n    // TODO: Possibly better design is to have this passed to the ctor, so it isn't an independant instruction\n    const decodedMarket = Market.getLayout(this.serumProgramId).decode(\n      serumMarketMarketInfo!.data\n    );\n    const serumVaultSigner = createProgramAddressSync(\n      [\n        this.serumMarket.toBuffer(),\n        decodedMarket.vaultSignerNonce.toArrayLike(Buffer, 'le', 8),\n      ],\n      this.serumProgramId\n    );\n    this.serumMarketKeys = {\n      serumBids: decodedMarket.bids,\n      serumAsks: decodedMarket.asks,\n      serumEventQueue: decodedMarket.eventQueue,\n      serumCoinVaultAccount: decodedMarket.baseVault,\n      serumPcVaultAccount: decodedMarket.quoteVault,\n      serumVaultSigner: serumVaultSigner,\n    };\n\n    const decoded = AMM_INFO_LAYOUT_V4.decode(this.ammAccountInfo.data);\n\n    this.coinReserve = coinAmount\n      .add(openOrders.baseTokenTotal)\n      .sub(new u64(String(decoded.needTakePnlCoin)));\n\n    this.pcReserve = pcAmount\n      .add(openOrders.quoteTokenTotal)\n      .sub(new u64(String(decoded.needTakePnlPc)));\n  }\n\n  private static tokenAmountAccessor(\n    tokenAccountInfo: AccountInfo<Buffer>\n  ): u64 {\n    return u64.fromBuffer(tokenAccountInfo.data.slice(64, 64 + 8));\n  }\n\n  getQuote({ sourceMint, amount }: QuoteParams): Quote {\n    if (!this.coinReserve || !this.pcReserve) {\n      throw new Error('Pool token accounts balances not refreshed or empty');\n    }\n\n    const { coinReserve, pcReserve } = this;\n\n    const [inputReserve, outputReserve] = this.coinMint.equals(sourceMint)\n      ? [coinReserve, pcReserve]\n      : [pcReserve, coinReserve];\n\n    const inAmountBN = new BN(String(amount));\n    const feeAmount = inAmountBN\n      .mul(this.swapFeeNumerator)\n      .div(this.swapFeeDenominator);\n    const inAmountAfterFee = inAmountBN.sub(feeAmount);\n\n    const numerator = inAmountAfterFee.mul(outputReserve);\n    const denominator = inputReserve.add(inAmountAfterFee);\n\n    const outAmountWithoutPriceImpact = inAmountAfterFee\n      .mul(outputReserve)\n      .div(inputReserve);\n\n    const outAmountBN = numerator.div(denominator);\n    const outAmount = Number(outAmountBN.toString());\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount,\n      feeAmount: Number(feeAmount.toString()),\n      feeMint: sourceMint.toBase58(),\n      feePct: Number(\n        new Decimal(this.swapFeeNumerator.toString())\n          .div(this.swapFeeDenominator.toString())\n          .toString()\n      ),\n      priceImpactPct: Number(\n        new Decimal(outAmountWithoutPriceImpact.sub(outAmountBN).toString())\n          .div(outAmountWithoutPriceImpact.toString())\n          .toString()\n      ),\n    };\n  }\n\n  createSwapInstructions({\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    return [\n      createRaydiumSwapInstruction(\n        this,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        userTransferAuthority,\n        amount,\n        minimumOutAmount,\n        platformFee\n      ),\n    ];\n  }\n\n  get reserveTokenMints() {\n    return [this.coinMint, this.pcMint];\n  }\n}\n","import { PublicKey } from '@solana/web3.js';\nimport { getTwoPermutations } from '../../utils/getTwoPermutations';\nimport { AccountInfoMap, Amm, Quote, QuoteParams, SwapParams } from '../amm';\nimport { RaydiumAmm } from '../raydium/raydiumAmm';\nimport {\n  createRiskCheckAndFeeInstruction,\n  createSetTokenLedgerInstruction,\n} from '../jupiterInstruction';\n\n// Create an iteration to quote with a stepped split\nexport class SplitTradeAmm implements Amm {\n  private portion1: number = 0;\n  private portion2: number = 0;\n\n  constructor(\n    private firstAmm: Amm,\n    private secondAmm: Amm,\n    public reserveTokenMints: PublicKey[]\n  ) {}\n\n  static create(firstAmm: Amm, secondAmm: Amm) {\n    const firstAmmTwoPermutations = getTwoPermutations(\n      firstAmm.reserveTokenMints\n    );\n    const secondAmmTwoPermutations = getTwoPermutations(\n      secondAmm.reserveTokenMints\n    );\n\n    for (const firstAmmTwoPermutation of firstAmmTwoPermutations) {\n      for (const secondAmmTwoPermutation of secondAmmTwoPermutations) {\n        if (\n          firstAmmTwoPermutation.every((value, index) =>\n            value.equals(secondAmmTwoPermutation[index])\n          )\n        ) {\n          return new SplitTradeAmm(firstAmm, secondAmm, firstAmmTwoPermutation);\n        }\n      }\n    }\n  }\n\n  get id() {\n    return `${this.firstAmm.id}-${this.secondAmm.id}`;\n  }\n\n  get label() {\n    const labelWithPortions = [\n      { label: this.firstAmm.label, portion: this.portion1 },\n      { label: this.secondAmm.label, portion: this.portion2 },\n    ].sort((a, b) => b.portion - a.portion);\n\n    return labelWithPortions\n      .map(({ label, portion }) => `${label} (${portion}%)`)\n      .join(' + ');\n  }\n\n  get shouldSplitSetup() {\n    return (\n      this.firstAmm instanceof RaydiumAmm ||\n      this.secondAmm instanceof RaydiumAmm\n    );\n  }\n\n  getAccountsForUpdate() {\n    return [];\n  }\n\n  update(_accountInfoMap: AccountInfoMap) {\n    // Underlying amms are updated\n  }\n\n  getQuote(quoteParams: QuoteParams): Quote {\n    const sourceMintString = quoteParams.sourceMint.toBase58();\n    const amount = quoteParams.amount;\n    // Portion in % directly to please the UI\n    let bestSolution = {\n      outAmount: 0,\n      portion1: 0,\n      portion2: 0,\n      firstAmmFee: {\n        amount: 0,\n        mint: '',\n      },\n      secondAmmFee: {\n        amount: 0,\n        mint: '',\n      },\n      feePct: 0,\n      priceImpactPct: 0,\n    };\n\n    // Increase portion until 100\n    for (let p = 100; (p -= 5); p > 0) {\n      const firstAmount = Math.floor((amount * p) / 100);\n      const secondAmount = amount - firstAmount;\n\n      const firstQuote = this.firstAmm.getQuote({\n        ...quoteParams,\n        amount: firstAmount,\n      });\n      const secondQuote = this.secondAmm.getQuote({\n        ...quoteParams,\n        amount: secondAmount,\n      });\n      const outAmount = firstQuote.outAmount + secondQuote.outAmount;\n\n      if (outAmount < bestSolution.outAmount) {\n        break;\n      }\n\n      bestSolution = {\n        outAmount,\n        portion1: p,\n        portion2: 100 - p,\n        firstAmmFee: {\n          amount: firstQuote.feeAmount,\n          mint: firstQuote.feeMint,\n        },\n        secondAmmFee: {\n          amount: secondQuote.feeAmount,\n          mint: secondQuote.feeMint,\n        },\n        feePct: (p * firstQuote.feePct + (100 - p) * secondQuote.feePct) / 100,\n        priceImpactPct:\n          (p * firstQuote.priceImpactPct +\n            (100 - p) * secondQuote.priceImpactPct) /\n          100,\n      };\n    }\n\n    // For UI display\n    this.portion1 = bestSolution.portion1;\n    this.portion2 = bestSolution.portion2;\n\n    if (bestSolution.firstAmmFee.mint !== bestSolution.secondAmmFee.mint) {\n      // Then we convert destinationMint fee into a sourceMint, to please the current data structure\n      // This will lead to inexact fees but this doesn't affect the user minimum out amount\n      if (bestSolution.firstAmmFee.mint !== sourceMintString) {\n        bestSolution.firstAmmFee = {\n          amount: Math.floor(\n            (bestSolution.firstAmmFee.amount * amount) / bestSolution.outAmount\n          ),\n          mint: sourceMintString,\n        };\n      }\n      if (bestSolution.secondAmmFee.mint !== sourceMintString) {\n        bestSolution.secondAmmFee = {\n          amount: Math.floor(\n            (bestSolution.secondAmmFee.amount * amount) / bestSolution.outAmount\n          ),\n          mint: sourceMintString,\n        };\n      }\n    }\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: quoteParams.amount,\n      outAmount: bestSolution.outAmount,\n      feeAmount:\n        bestSolution.firstAmmFee.amount + bestSolution.secondAmmFee.amount,\n      feeMint: bestSolution.firstAmmFee.mint, // Guaranteed identical mint at this point\n      feePct: bestSolution.feePct,\n      priceImpactPct: bestSolution.priceImpactPct,\n    };\n  }\n\n  createSwapInstructions(swapParams: SwapParams) {\n    const amount = swapParams.amount!; // Cannot be null!\n\n    // We rely on the fact that this.portion1 is set, what if it isn't?\n    const firstAmount = Math.floor((amount * this.portion1) / 100);\n    const secondAmount = amount - firstAmount;\n\n    return [\n      createSetTokenLedgerInstruction(swapParams.destinationTokenAccount),\n      ...this.firstAmm.createSwapInstructions({\n        ...swapParams,\n        amount: firstAmount,\n        minimumOutAmount: 0,\n        platformFee: undefined,\n      }),\n      ...this.secondAmm.createSwapInstructions({\n        ...swapParams,\n        amount: secondAmount,\n        minimumOutAmount: 0,\n        platformFee: undefined,\n      }),\n      createRiskCheckAndFeeInstruction(\n        swapParams.destinationTokenAccount,\n        swapParams.userTransferAuthority,\n        swapParams.minimumOutAmount,\n        swapParams.platformFee\n      ),\n    ];\n  }\n}\n","import { StableSwapNPool } from '@mercurial-finance/stable-swap-n-pool';\nimport { Market as SerumMarket } from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport { StableSwap } from '@saberhq/stableswap-sdk';\nimport { MarketMeta } from './types';\nimport { SaberAddDecimalsAmm } from './saber/saberAddDecimalsAmm';\nimport { SplitTradeAmm } from './split-trade/splitTradeAmm';\nimport { SplTokenSwapAmm } from '..';\n\nexport interface Fee {\n  amount: number;\n  mint: string;\n  pct: number;\n}\n\nexport { SerumMarket, StableSwap, StableSwapNPool };\n\nexport interface MarketInfo {\n  marketMeta: MarketMeta; //name: string, // pair for serum, pool name for mer pool\n  inputMint: PublicKey;\n  outputMint: PublicKey;\n  minInAmount?: number;\n  minOutAmount?: number;\n  inAmount: number;\n  outAmount: number;\n  notEnoughLiquidity: boolean;\n  priceImpactPct: number;\n  lpFee: Fee;\n  platformFee: Fee;\n}\n\n// This is to check if the two markets are supported by the aggregator\nexport const isValidRoute = (\n  ammA: MarketMeta['amm'],\n  ammB: MarketMeta['amm']\n) => {\n  // don't show decimal as input or output\n  if (\n    ammA instanceof SaberAddDecimalsAmm &&\n    ammB instanceof SaberAddDecimalsAmm\n  ) {\n    return false;\n  } else if (ammA instanceof SplitTradeAmm || ammB instanceof SplitTradeAmm) {\n    return false;\n  }\n\n  return true;\n};\n","import { Market, Orderbook } from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nconst TAKER_FEE_PCT = 0.0004;\nconst STABLE_TAKER_FEE_PCT = 0.0001;\n\n// Stable markets are hardcoded in the program\nconst STABLE_MARKET_ADDRESSES = [\n  '77quYg4MGneUdjgXCunt9GgM1usmrxKY31twEy3WHwcS', // USDT/USDC\n  '5cLrMai1DsLRYc1Nio9qMTicsWtvzjzZfJPXyAoF4t1Z', // mSOL/SOL\n];\n\ninterface IMarketMeta {\n  /** buy or sell side */\n  side: 'buy' | 'sell';\n  /** indicate that your order is too huge for the market */\n  notEnoughLiquidity: boolean;\n  /** minimum in amount and the corresponding out amount */\n  minimum: {\n    in: number;\n    out: number;\n  };\n  /** amount in taken for the trade */\n  inAmount: number;\n  /** the amount out for the trade */\n  outAmount: number;\n  /** the total fee amount */\n  feeAmount: number;\n  /** price impact percentage */\n  priceImpactPct: number;\n  /** fee percentage */\n  feePct: number;\n}\n\n// Provides swap like out amount, with slippage and corresponding minimum amount out\nexport function getOutAmountMeta({\n  market,\n  asks,\n  bids,\n  fromAmount,\n  fromMint,\n  toMint,\n}: {\n  market: Market;\n  asks: Orderbook;\n  bids: Orderbook;\n  fromMint: PublicKey;\n  toMint: PublicKey;\n  fromAmount: number;\n}) {\n  const takerFeePct = STABLE_MARKET_ADDRESSES.includes(market.address.toBase58())\n    ? STABLE_TAKER_FEE_PCT\n    : TAKER_FEE_PCT;\n\n  if (\n    fromMint.equals(market.quoteMintAddress) &&\n    toMint.equals(market.baseMintAddress)\n  ) {\n    // buy\n    return forecastBuy(market, asks, fromAmount, takerFeePct);\n  } else {\n    return forecastSell(market, bids, fromAmount, takerFeePct);\n  }\n}\n\nexport function forecastBuy(\n  market: Market,\n  orderBook: Orderbook,\n  pcIn: number,\n  takerFeePct: number,\n): IMarketMeta {\n  let coinOut = 0;\n  let bestPrice = 0;\n  let worstPrice = 0;\n  // total base price\n  let totalCost = 0;\n  let totalCoins = 0;\n\n  // Serum buy order take fee in quote tokens\n  let availablePc = pcIn / (1 + takerFeePct);\n\n  const baseSizeLots = market.baseSizeLotsToNumber(new BN(1));\n  const quoteSizeLots = market.quoteSizeLotsToNumber(new BN(1));\n\n  for (const order of orderBook.items(false)) {\n    const price = market.priceLotsToNumber(order.priceLots);\n    const size = market.baseSizeLotsToNumber(order.sizeLots);\n    totalCoins += size;\n\n    if (!bestPrice && price !== 0) {\n      bestPrice = price;\n    }\n    worstPrice = price;\n\n    const orderCoinAmount = order.sizeLots.toNumber() * baseSizeLots;\n    const orderPcAmount =\n      order.sizeLots.toNumber() * order.priceLots.toNumber() * quoteSizeLots;\n\n    const lotPrice = order.priceLots.toNumber() * quoteSizeLots;\n\n    if (orderPcAmount >= availablePc) {\n      const numberLotsCanBuy = Math.floor(availablePc / lotPrice);\n      totalCost += numberLotsCanBuy * lotPrice;\n      coinOut += numberLotsCanBuy * baseSizeLots;\n      availablePc -= numberLotsCanBuy * lotPrice;\n      break;\n    } else {\n      totalCost += order.sizeLots.toNumber() * lotPrice;\n      coinOut += orderCoinAmount;\n      availablePc -= orderPcAmount;\n    }\n  }\n\n  const priceImpactPct = bestPrice ? (worstPrice - bestPrice) / bestPrice : 0;\n\n  return {\n    side: 'buy',\n    notEnoughLiquidity: totalCoins <= coinOut,\n    minimum: {\n      in: Math.ceil(baseSizeLots * bestPrice * (1 + takerFeePct)),\n      out: baseSizeLots,\n    },\n    inAmount: Math.ceil(totalCost * (1 + takerFeePct)),\n    outAmount: coinOut,\n    feeAmount: Math.round(totalCost * takerFeePct),\n    priceImpactPct,\n    feePct: takerFeePct,\n  };\n}\n\nexport function forecastSell(\n  market: Market,\n  orderBook: Orderbook,\n  coinIn: number,\n  takerFeePct: number,\n): IMarketMeta {\n  let pcOut = 0;\n  let bestPrice = 0;\n  let worstPrice = 0;\n  let availableCoin = coinIn;\n  let inAmount = 0;\n\n  const baseSizeLots = market.baseSizeLotsToNumber(new BN(1));\n  const quoteSizeLots = market.quoteSizeLotsToNumber(new BN(1));\n\n  for (const order of orderBook.items(true)) {\n    const price = market.priceLotsToNumber(order.priceLots);\n\n    if (!bestPrice && price !== 0) {\n      bestPrice = price;\n    }\n\n    worstPrice = price;\n\n    const orderCoinAmount = order.sizeLots.toNumber() * baseSizeLots;\n    const orderPcAmount =\n      order.sizeLots.toNumber() * order.priceLots.toNumber() * quoteSizeLots;\n\n    if (availableCoin <= orderCoinAmount) {\n      const numberLotsCanSell = Math.floor(availableCoin / baseSizeLots);\n      pcOut += numberLotsCanSell * order.priceLots.toNumber() * quoteSizeLots;\n      availableCoin = 0;\n      inAmount += numberLotsCanSell * baseSizeLots;\n      break;\n    } else {\n      pcOut += orderPcAmount;\n      availableCoin -= orderCoinAmount;\n      inAmount += orderCoinAmount;\n    }\n  }\n\n  pcOut = Math.floor(pcOut * (1 - takerFeePct));\n\n  const priceImpactPct = bestPrice ? (bestPrice - worstPrice) / bestPrice : 0;\n\n  return {\n    side: 'sell',\n    notEnoughLiquidity: availableCoin > 0,\n    minimum: {\n      in: baseSizeLots,\n      out: Math.ceil(baseSizeLots * bestPrice * (1 - takerFeePct)),\n    },\n    inAmount: inAmount,\n    outAmount: pcOut,\n    feeAmount: Math.round(pcOut * takerFeePct),\n    priceImpactPct,\n    feePct: takerFeePct,\n  };\n}\n","import { Orderbook } from '@project-serum/serum';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createSerumSwapInstruction } from '../jupiterInstruction';\nimport { SerumMarket } from '../market';\nimport { getOutAmountMeta } from './market';\n\nexport class SerumAmm implements Amm {\n  label = 'Serum';\n  private orderbooks: { asks: Orderbook; bids: Orderbook } | undefined;\n\n  constructor(public market: SerumMarket) {}\n\n  get id() {\n    return this.market.address.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [this.market.asksAddress, this.market.bidsAddress];\n  }\n\n  update(accountInfoMap: AccountInfoMap): void {\n    const [asksAccountInfo, bidsAccountInfo] = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    const asks = Orderbook.decode(this.market, asksAccountInfo.data);\n    const bids = Orderbook.decode(this.market, bidsAccountInfo.data);\n\n    this.orderbooks = {\n      asks,\n      bids,\n    };\n  }\n\n  getQuote({ sourceMint, destinationMint, amount }: QuoteParams): Quote {\n    if (!this.orderbooks) {\n      throw new Error('Failed to find orderbooks');\n    }\n\n    const outAmountMeta = getOutAmountMeta({\n      market: this.market,\n      asks: this.orderbooks.asks,\n      bids: this.orderbooks.bids,\n      fromMint: sourceMint,\n      toMint: destinationMint,\n      fromAmount: amount,\n    });\n\n    return {\n      notEnoughLiquidity: outAmountMeta.notEnoughLiquidity,\n      minInAmount: outAmountMeta.minimum.in,\n      minOutAmount: outAmountMeta.minimum.out,\n      inAmount: outAmountMeta.inAmount,\n      outAmount: outAmountMeta.outAmount,\n      feeAmount: outAmountMeta.feeAmount,\n      feeMint: this.market.quoteMintAddress.toBase58(),\n      feePct: outAmountMeta.feePct,\n      priceImpactPct: outAmountMeta.priceImpactPct,\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    openOrdersAddress,\n    platformFee,\n  }: SwapParams) {\n    if (!openOrdersAddress) {\n      throw new Error('Missing open orders');\n    }\n\n    return [createSerumSwapInstruction(\n      this.market,\n      sourceMint,\n      openOrdersAddress,\n      sourceTokenAccount,\n      destinationTokenAccount,\n      userTransferAuthority,\n      amount,\n      minimumOutAmount,\n      platformFee\n    )];\n  }\n\n  get reserveTokenMints() {\n    return [this.market.baseMintAddress, this.market.quoteMintAddress];\n  }\n}\n","import { AccountInfo, AccountLayout, u64 } from '@solana/spl-token';\nimport { PublicKey } from '@solana/web3.js';\n\nexport const deserializeAccount = (\n  data: Buffer | undefined\n): AccountInfo | undefined => {\n  if (data == undefined || data.length == 0) {\n    return undefined;\n  }\n\n  const accountInfo = AccountLayout.decode(data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n};\n","import { StableSwap } from '@saberhq/stableswap-sdk';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { Fraction, ONE, Stable } from '@jup-ag/math';\nimport JSBI from 'jsbi';\nimport Decimal from 'decimal.js';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createSaberExchangeInstruction } from '../jupiterInstruction';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport { AccountInfo } from '@solana/spl-token';\nimport { ZERO_FRACTION } from '../../constants';\n\nexport class SaberAmm implements Amm {\n  label = 'Saber';\n  private tokenAccounts: AccountInfo[] | undefined;\n  private calculator: Stable | undefined;\n\n  constructor(private stableSwap: StableSwap) { }\n\n  get id() {\n    return this.stableSwap.config.swapAccount.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [\n      this.stableSwap.state.tokenA.reserve,\n      this.stableSwap.state.tokenB.reserve,\n    ];\n  }\n\n  update(accountInfoMap: AccountInfoMap) {\n    let tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos\n      .map((info) => {\n        const tokenAccount = deserializeAccount(info.data)\n        if (!tokenAccount) {\n          throw new Error('Invalid token account data');\n        }\n        return tokenAccount\n      });\n\n    this.calculator = new Stable(\n      JSBI.BigInt(this.stableSwap.state.targetAmpFactor.toString()),\n      this.tokenAccounts.map((tokenAccount) => {\n        return JSBI.BigInt(tokenAccount.amount.toString());\n      }),\n      [ONE, ONE], // TODO: How to get the token decimal?\n      new Fraction(\n        this.stableSwap.state.fees.trade.numerator,\n        this.stableSwap.state.fees.trade.denominator\n      )\n    );\n  }\n\n  getQuote({ sourceMint, destinationMint, amount }: QuoteParams): Quote {\n    if (!this.tokenAccounts) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for Curve calculator.');\n    }\n\n    const feePct = new Decimal(\n      this.stableSwap.state.fees.trade.asFraction.toFixed(4)\n    );\n\n    const [inputIndex, outputIndex] = this.tokenAccounts[0].mint.equals(\n      sourceMint\n    )\n      ? [0, 1]\n      : [1, 0];\n\n    const result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      inputIndex,\n      outputIndex\n    );\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: destinationMint.toBase58(),\n      feePct: feePct.toNumber(),\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    // The input or output might require the magic wrapping\n    return [createSaberExchangeInstruction(\n      this.stableSwap,\n      sourceMint,\n      sourceTokenAccount,\n      destinationTokenAccount,\n      userTransferAuthority,\n      amount,\n      minimumOutAmount,\n      platformFee\n    )];\n  }\n\n  get reserveTokenMints() {\n    return [\n      this.stableSwap.state.tokenA.mint,\n      this.stableSwap.state.tokenB.mint,\n    ];\n  }\n}\n","import { u64 } from '@solana/spl-token';\nimport Decimal from 'decimal.js';\n\nconst ZERO = new u64(0);\n\nexport class Percentage {\n  readonly numerator: u64;\n  readonly denominator: u64;\n\n  constructor(numerator: u64, denominator: u64) {\n    this.numerator = numerator;\n    this.denominator = denominator;\n  }\n\n  public static fromDecimal(number: Decimal): Percentage {\n    return Percentage.fromFraction(\n      number.toDecimalPlaces(1).mul(10).toNumber(),\n      1000\n    );\n  }\n\n  public static fromFraction(\n    numerator: u64 | number,\n    denominator: u64 | number\n  ): Percentage {\n    const num =\n      typeof numerator === 'number' ? new u64(numerator.toString()) : numerator;\n    const denom =\n      typeof denominator === 'number'\n        ? new u64(denominator.toString())\n        : denominator;\n    return new Percentage(num, denom);\n  }\n\n  public toString = (): string => {\n    return `${this.numerator.toString()}/${this.denominator.toString()}`;\n  };\n\n  public toDecimal() {\n    if (this.denominator.eq(ZERO)) {\n      return new Decimal(0);\n    }\n    return new Decimal(this.numerator.toString()).div(\n      new Decimal(this.denominator.toString())\n    );\n  }\n\n  public add(p2: Percentage): Percentage {\n    const denomGcd = this.denominator.gcd(p2.denominator);\n    const denomLcm = this.denominator.div(denomGcd).mul(p2.denominator);\n\n    const p1DenomAdjustment = denomLcm.div(this.denominator);\n    const p2DenomAdjustment = denomLcm.div(p2.denominator);\n\n    const p1NumeratorAdjusted = this.numerator.mul(p1DenomAdjustment);\n    const p2NumeratorAdjusted = p2.numerator.mul(p2DenomAdjustment);\n\n    const newNumerator = p1NumeratorAdjusted.add(p2NumeratorAdjusted);\n\n    return new Percentage(\n      new u64(newNumerator.toString()),\n      new u64(denomLcm.toString())\n    );\n  }\n}\n","import { struct, blob, u8, Structure } from '@solana/buffer-layout';\nimport { AccountInfo, PublicKey } from '@solana/web3.js';\nimport { ALDRIN_SWAP_V2_PROGRAM_ID } from '../../constants';\nimport { publicKey, rustEnum, uint64 } from '../../utils/layout';\nimport { Percentage } from './percentage';\n\ntype FeeStructure = {\n  traderFee: Percentage;\n  ownerFee: Percentage;\n};\n\n// https://github.com/aldrin-exchange/aldrin-sdk/blob/78527e3adfc02e186956f420b5083fa0950e7263/src/pools/layout.ts\nconst FEES_LAYOUT = struct(\n  [\n    uint64('tradeFeeNumerator', true),\n    uint64('tradeFeeDenominator', true),\n    uint64('ownerTradeFeeNumerator', true),\n    uint64('ownerTradeFeeDenominator', true),\n    uint64('ownerWithdrawFeeNumerator', true),\n    uint64('ownerWithdrawFeeDenominator', true),\n  ],\n  'fees'\n);\n\nconst POOL_FIELDS_COMMON = [\n  blob(8, 'padding'),\n  publicKey('lpTokenFreezeVault'),\n  publicKey('poolMint'),\n  publicKey('baseTokenVault'),\n  publicKey('baseTokenMint'),\n  publicKey('quoteTokenVault'),\n  publicKey('quoteTokenMint'),\n  publicKey('poolSigner'),\n  u8('poolSignerNonce'),\n  publicKey('authority'),\n  publicKey('initializerAccount'),\n  publicKey('feeBaseAccount'),\n  publicKey('feeQuoteAccount'),\n  publicKey('feePoolTokenAccount'),\n  FEES_LAYOUT,\n];\n\nexport const POOL_LAYOUT = struct([\n  blob(8, 'padding'),\n  publicKey('lpTokenFreezeVault'),\n  publicKey('poolMint'),\n  publicKey('baseTokenVault'),\n  publicKey('baseTokenMint'),\n  publicKey('quoteTokenVault'),\n  publicKey('quoteTokenMint'),\n  publicKey('poolSigner'),\n  u8('poolSignerNonce'),\n  publicKey('authority'),\n  publicKey('initializerAccount'),\n  publicKey('feeBaseAccount'),\n  publicKey('feeQuoteAccount'),\n  publicKey('feePoolTokenAccount'),\n  struct(\n    [\n      uint64('tradeFeeNumerator', true),\n      uint64('tradeFeeDenominator', true),\n      uint64('ownerTradeFeeNumerator', true),\n      uint64('ownerTradeFeeDenominator', true),\n      uint64('ownerWithdrawFeeNumerator', true),\n      uint64('ownerWithdrawFeeDenominator', true),\n    ],\n    'fees'\n  ),\n]);\n\nexport const POOL_V2_LAYOUT = struct([\n  ...POOL_FIELDS_COMMON,\n  u8('curveType'),\n  publicKey('curve'),\n]);\n\nexport const STABLE_CURVE_LAYOUT = struct([blob(8, 'padding'), uint64('amp')]);\n\nexport const SWAP_INSTRUCTION_LAYOUT = struct([\n  blob(8, 'instruction'),\n  uint64('tokens'),\n  uint64('minTokens'),\n  rustEnum([new Structure([], 'bid'), new Structure([], 'ask')], 'side'),\n]);\n\nexport function accountInfoToAldrinPoolState(\n  address: PublicKey,\n  accountInfo: AccountInfo<Buffer>\n): AldrinPoolState {\n  const isV2 = accountInfo.owner.equals(ALDRIN_SWAP_V2_PROGRAM_ID)\n    ? true\n    : false;\n  const decoded = (isV2 ? POOL_V2_LAYOUT : POOL_LAYOUT).decode(\n    accountInfo.data\n  );\n\n  return {\n    isV2,\n    address,\n    poolMint: decoded.poolMint,\n    baseTokenVault: decoded.baseTokenVault,\n    baseTokenMint: decoded.baseTokenMint,\n    quoteTokenVault: decoded.quoteTokenVault,\n    quoteTokenMint: decoded.quoteTokenMint,\n    poolSigner: decoded.poolSigner,\n    feeBaseAccount: decoded.feeBaseAccount,\n    feeQuoteAccount: decoded.feeQuoteAccount,\n    feePoolTokenAccount: decoded.feePoolTokenAccount,\n    fees: {\n      traderFee: Percentage.fromFraction(\n        decoded.fees.tradeFeeNumerator,\n        decoded.fees.tradeFeeDenominator\n      ),\n      ownerFee: Percentage.fromFraction(\n        decoded.fees.ownerTradeFeeNumerator,\n        decoded.fees.ownerTradeFeeDenominator\n      ),\n    },\n    curveType: decoded.curveType,\n    curve: decoded.curve,\n  };\n}\n\nexport interface AldrinPoolState {\n  isV2: Boolean;\n  address: PublicKey;\n  poolMint: PublicKey;\n  baseTokenVault: PublicKey;\n  baseTokenMint: PublicKey;\n  quoteTokenVault: PublicKey;\n  quoteTokenMint: PublicKey;\n  poolSigner: PublicKey;\n  feeBaseAccount: PublicKey;\n  feeQuoteAccount: PublicKey;\n  feePoolTokenAccount: PublicKey;\n  fees: FeeStructure;\n  curveType?: number;\n  curve?: PublicKey;\n}\n","import {\n  Fraction,\n  TokenSwapConstantProduct,\n  TokenSwapStable,\n} from '@jup-ag/math';\nimport {\n  AccountInfo,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport {\n  createAldrinSwapInstruction,\n  createAldrinV2SwapInstruction,\n} from '../jupiterInstruction';\nimport {\n  accountInfoToAldrinPoolState,\n  AldrinPoolState,\n  STABLE_CURVE_LAYOUT,\n} from './poolState';\nimport { AccountInfo as TokenAccountInfo } from '@solana/spl-token';\nimport Decimal from 'decimal.js';\nimport { ZERO_FRACTION } from '../../constants';\n\ninterface AldrinParams {\n  amp?: number;\n}\n\nexport class AldrinAmm implements Amm {\n  label = 'Aldrin';\n  poolState: AldrinPoolState;\n  private tokenAccounts: TokenAccountInfo[] = [];\n  calculator: TokenSwapConstantProduct | TokenSwapStable | undefined;\n\n  constructor(\n    address: PublicKey,\n    accountInfo: AccountInfo<Buffer>,\n    private params: AldrinParams = {}\n  ) {\n    this.poolState = accountInfoToAldrinPoolState(address, accountInfo);\n  }\n\n  static decodeStableCurveAmp(accountInfo: AccountInfo<Buffer>) {\n    const { amp } = STABLE_CURVE_LAYOUT.decode(accountInfo.data);\n\n    return amp * 2; // times two for their AMP, dont ask me why, it is what it is\n  }\n\n  get id() {\n    return this.poolState.address.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [this.poolState.quoteTokenVault, this.poolState.baseTokenVault];\n  }\n\n  update(accountInfoMap: AccountInfoMap): void {\n    const tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos.map((info) => {\n      const tokenAccount = deserializeAccount(info.data);\n      if (!tokenAccount) {\n        throw new Error('Invalid token account');\n      }\n      return tokenAccount;\n    });\n\n    if (!this.poolState.curveType) {\n      this.calculator = new TokenSwapConstantProduct(\n        this.tokenAccounts.map((tokenAccount) => {\n          return JSBI.BigInt(tokenAccount.amount.toString());\n        }),\n        new Fraction(\n          JSBI.BigInt(this.poolState.fees.traderFee.numerator.toString()),\n          JSBI.BigInt(this.poolState.fees.traderFee.denominator.toString())\n        ),\n        new Fraction(\n          JSBI.BigInt(this.poolState.fees.ownerFee.numerator.toString()),\n          JSBI.BigInt(this.poolState.fees.ownerFee.denominator.toString())\n        )\n      );\n    } else if (this.poolState.curveType === 1) {\n      const { amp } = this.params;\n      if (!amp) {\n        throw new Error('Amp is required for a stable curve');\n      }\n\n      this.calculator = new TokenSwapStable(\n        JSBI.BigInt(amp),\n        this.tokenAccounts.map((tokenAccount) => {\n          return JSBI.BigInt(tokenAccount.amount.toString());\n        }),\n        new Fraction(\n          JSBI.BigInt(this.poolState.fees.traderFee.numerator.toString()),\n          JSBI.BigInt(this.poolState.fees.traderFee.denominator.toString())\n        ),\n        new Fraction(\n          JSBI.BigInt(this.poolState.fees.ownerFee.numerator.toString()),\n          JSBI.BigInt(this.poolState.fees.ownerFee.denominator.toString())\n        )\n      );\n    }\n  }\n\n  getQuote({ sourceMint, amount }: QuoteParams): Quote {\n    if (this.tokenAccounts.length === 0) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for Curve calculator.');\n    }\n\n    let feePct = new Decimal(this.poolState.fees.traderFee.numerator.toString())\n      .div(this.poolState.fees.traderFee.denominator.toString())\n      .add(\n        new Decimal(this.poolState.fees.ownerFee.numerator.toString()).div(\n          this.poolState.fees.ownerFee.denominator.toString()\n        )\n      );\n\n    const outputIndex = this.tokenAccounts[0].mint.equals(sourceMint) ? 1 : 0;\n    let result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      outputIndex\n    );\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: sourceMint.toBase58(),\n      feePct: feePct.toNumber(),\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    if (this.poolState.isV2) {\n      if (!this.poolState.curve) {\n        throw new Error('Unable to fetch curve account.');\n      }\n\n      return [createAldrinV2SwapInstruction(\n        this.poolState,\n        sourceMint,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        this.poolState.curve,\n        userTransferAuthority,\n        amount,\n        minimumOutAmount,\n        platformFee\n      )];\n    }\n\n    return [createAldrinSwapInstruction(\n      this.poolState,\n      sourceMint,\n      sourceTokenAccount,\n      destinationTokenAccount,\n      userTransferAuthority,\n      amount,\n      minimumOutAmount,\n      platformFee\n    )];\n  }\n\n  get reserveTokenMints() {\n    return [this.poolState.baseTokenMint, this.poolState.quoteTokenMint];\n  }\n}\n","import { PublicKey } from '@solana/web3.js';\n\n// TODO: Remove harcoded pools before merge\nconst TOKEN_SWAP_POOLS: PublicKey[] = [];\n\nexport const STEP_TOKEN_SWAP_PROGRAM_ID = new PublicKey(\n  'SSwpMgqNDsyV7mAgN9ady4bDVu5ySjmmXejXvy2vLt1'\n);\n\nexport const PROGRAM_ID_TO_LABEL = new Map<string, string>([\n  ['9W959DqEETiGZocYWCQPaJ6sBmUzgfxXfqGeTEdp3aQP', 'Orca'],\n  [STEP_TOKEN_SWAP_PROGRAM_ID.toBase58(), 'Step'],\n  ['PSwapMdSai8tjrEXcxFeQth87xC4rRsa4VA5mhGhXkP', 'Penguin'],\n]);\n\nexport function getTokenSwapPools(cluster: string) {\n  return cluster === 'mainnet-beta' ? TOKEN_SWAP_POOLS : [];\n}\n","import { struct, u8, Layout, blob } from '@solana/buffer-layout';\n\nconst publicKey = (property: string = 'publicKey'): Layout => {\n  return blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nconst uint64 = (property: string = 'uint64'): Layout => {\n  return blob(8, property);\n};\n\nexport const TokenSwapLayout = struct([\n  u8('version'),\n  u8('isInitialized'),\n  u8('bumpSeed'),\n  publicKey('tokenProgramId'),\n  publicKey('tokenAccountA'),\n  publicKey('tokenAccountB'),\n  publicKey('tokenPool'),\n  publicKey('mintA'),\n  publicKey('mintB'),\n  publicKey('feeAccount'),\n  uint64('tradeFeeNumerator'),\n  uint64('tradeFeeDenominator'),\n  uint64('ownerTradeFeeNumerator'),\n  uint64('ownerTradeFeeDenominator'),\n  uint64('ownerWithdrawFeeNumerator'),\n  uint64('ownerWithdrawFeeDenominator'),\n  uint64('hostFeeNumerator'),\n  uint64('hostFeeDenominator'),\n  u8('curveType'),\n  blob(32, 'curveParameters'),\n]);\n\nexport const StepTokenSwapLayout = struct([\n  u8('version'),\n  u8('isInitialized'),\n  u8('bumpSeed'),\n  publicKey('tokenProgramId'),\n  publicKey('tokenAccountA'),\n  publicKey('tokenAccountB'),\n  publicKey('tokenPool'),\n  publicKey('mintA'),\n  publicKey('mintB'),\n  publicKey('feeAccount'),\n  uint64('tradeFeeNumerator'),\n  uint64('tradeFeeDenominator'),\n  uint64('ownerTradeFeeNumerator'),\n  uint64('ownerTradeFeeDenominator'),\n  uint64('ownerWithdrawFeeNumerator'),\n  uint64('ownerWithdrawFeeDenominator'),\n  u8('curveType'),\n  blob(32, 'curveParameters'),\n  u8('poolNonce'),\n]);\n","import { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { u64 } from '@solana/spl-token';\nimport {\n  AccountInfo,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport Decimal from 'decimal.js';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createTokenSwapInstruction } from '../jupiterInstruction';\nimport { StepTokenSwapLayout, TokenSwapLayout } from './tokenSwapLayout';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport {\n  Fraction,\n  TokenSwapConstantProduct,\n  TokenSwapStable,\n} from '@jup-ag/math';\nimport JSBI from 'jsbi';\nimport { AccountInfo as TokenAccountInfo } from '@solana/spl-token';\nimport { ZERO_FRACTION } from '../../constants';\nimport { STEP_TOKEN_SWAP_PROGRAM_ID } from './splTokenSwapPools';\n\nenum CurveType {\n  ConstantProduct = 0,\n  Stable = 2,\n}\n\n// Abstract any SPL token swap based AMM\nexport class SplTokenSwapAmm implements Amm {\n  private tokenSwapState: TokenSwapState;\n  private curveType: CurveType;\n\n  private tokenAccounts: TokenAccountInfo[] = [];\n  calculator: TokenSwapConstantProduct | TokenSwapStable | undefined;\n\n  constructor(\n    address: PublicKey,\n    swapStateAccountInfo: AccountInfo<Buffer>,\n    public label: string\n  ) {\n    this.tokenSwapState = accountInfoToTokenSwapState(\n      address,\n      swapStateAccountInfo\n    );\n\n    this.curveType = this.tokenSwapState.curveType;\n    if (!(this.curveType in CurveType)) {\n      throw new Error(\n        `curveType ${this.tokenSwapState.curveType} is not supported`\n      );\n    }\n  }\n\n  get id() {\n    return this.tokenSwapState.address.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [\n      this.tokenSwapState.tokenAccountA,\n      this.tokenSwapState.tokenAccountB,\n    ];\n  }\n\n  update(accountInfoMap: AccountInfoMap): void {\n    const tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos.map((info) => {\n      const tokenAccount = deserializeAccount(info.data);\n      if (!tokenAccount) {\n        throw new Error('Invalid token account');\n      }\n      return tokenAccount;\n    });\n\n    if (this.tokenSwapState.curveType === CurveType.ConstantProduct) {\n      this.calculator = new TokenSwapConstantProduct(\n        this.tokenAccounts.map((tokenAccount) => {\n          return JSBI.BigInt(tokenAccount.amount.toString());\n        }),\n        new Fraction(\n          JSBI.BigInt(this.tokenSwapState.tradeFeeNumerator.toString()),\n          JSBI.BigInt(this.tokenSwapState.tradeFeeDenominator.toString())\n        ),\n        new Fraction(\n          JSBI.BigInt(this.tokenSwapState.ownerTradeFeeNumerator.toString()),\n          JSBI.BigInt(this.tokenSwapState.ownerTradeFeeDenominator.toString())\n        )\n      );\n    } else if (this.tokenSwapState.curveType === CurveType.Stable) {\n      this.calculator = new TokenSwapStable(\n        JSBI.BigInt(this.tokenSwapState.curveParameters[0]),\n        this.tokenAccounts.map((tokenAccount) => {\n          return JSBI.BigInt(tokenAccount.amount.toString());\n        }),\n        new Fraction(\n          JSBI.BigInt(this.tokenSwapState.tradeFeeNumerator.toString()),\n          JSBI.BigInt(this.tokenSwapState.tradeFeeDenominator.toString())\n        ),\n        new Fraction(\n          JSBI.BigInt(this.tokenSwapState.ownerTradeFeeNumerator.toString()),\n          JSBI.BigInt(this.tokenSwapState.ownerTradeFeeDenominator.toString())\n        )\n      );\n    }\n  }\n\n  getQuote({ sourceMint, amount }: QuoteParams): Quote {\n    if (this.tokenAccounts.length === 0) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for Curve calculator.');\n    }\n\n    let feePct = new Decimal(this.tokenSwapState.tradeFeeNumerator.toString())\n      .div(this.tokenSwapState.tradeFeeDenominator.toString())\n      .add(\n        new Decimal(this.tokenSwapState.ownerTradeFeeNumerator.toString()).div(\n          this.tokenSwapState.ownerTradeFeeDenominator.toString()\n        )\n      );\n\n    const outputIndex = this.tokenAccounts[0].mint.equals(sourceMint) ? 1 : 0;\n    let result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      outputIndex\n    );\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: sourceMint.toBase58(),\n      feePct: feePct.toNumber(),\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    return [createTokenSwapInstruction(\n      this.tokenSwapState,\n      sourceMint,\n      sourceTokenAccount,\n      destinationTokenAccount,\n      userTransferAuthority,\n      amount,\n      minimumOutAmount,\n      platformFee,\n      this.tokenSwapState.programId.equals(STEP_TOKEN_SWAP_PROGRAM_ID)\n    )];\n  }\n\n  get reserveTokenMints() {\n    return [this.tokenSwapState.mintA, this.tokenSwapState.mintB];\n  }\n}\n\nfunction accountInfoToTokenSwapState(\n  address: PublicKey,\n  tokenSwapAccountInfo: AccountInfo<Buffer>\n): TokenSwapState {\n  const programId = tokenSwapAccountInfo.owner;\n\n  // The layout difference only affects fields we do not actively use\n  const tokenSwapData = programId.equals(STEP_TOKEN_SWAP_PROGRAM_ID)\n    ? StepTokenSwapLayout.decode(tokenSwapAccountInfo.data)\n    : TokenSwapLayout.decode(tokenSwapAccountInfo.data);\n\n  if (!tokenSwapData.isInitialized) {\n    throw new Error(`Invalid token swap state`);\n  }\n\n  const [authority] = findProgramAddressSync([address.toBuffer()], programId);\n\n  const poolToken = new PublicKey(tokenSwapData.tokenPool);\n  const feeAccount = new PublicKey(tokenSwapData.feeAccount);\n  const tokenAccountA = new PublicKey(tokenSwapData.tokenAccountA);\n  const tokenAccountB = new PublicKey(tokenSwapData.tokenAccountB);\n  const mintA = new PublicKey(tokenSwapData.mintA);\n  const mintB = new PublicKey(tokenSwapData.mintB);\n  const tokenProgramId = new PublicKey(tokenSwapData.tokenProgramId);\n\n  const tradeFeeNumerator = u64.fromBuffer(tokenSwapData.tradeFeeNumerator);\n  const tradeFeeDenominator = u64.fromBuffer(tokenSwapData.tradeFeeDenominator);\n  const ownerTradeFeeNumerator = u64.fromBuffer(\n    tokenSwapData.ownerTradeFeeNumerator\n  );\n  const ownerTradeFeeDenominator = u64.fromBuffer(\n    tokenSwapData.ownerTradeFeeDenominator\n  );\n  const ownerWithdrawFeeNumerator = u64.fromBuffer(\n    tokenSwapData.ownerWithdrawFeeNumerator\n  );\n  const ownerWithdrawFeeDenominator = u64.fromBuffer(\n    tokenSwapData.ownerWithdrawFeeDenominator\n  );\n\n  const curveType = tokenSwapData.curveType;\n  const curveParameters = tokenSwapData.curveParameters;\n  const poolNonce = tokenSwapData.poolNonce;\n\n  return {\n    address,\n    programId,\n    tokenProgramId,\n    poolToken,\n    feeAccount,\n    authority,\n    tokenAccountA,\n    tokenAccountB,\n    mintA,\n    mintB,\n    tradeFeeNumerator,\n    tradeFeeDenominator,\n    ownerTradeFeeNumerator,\n    ownerTradeFeeDenominator,\n    ownerWithdrawFeeNumerator,\n    ownerWithdrawFeeDenominator,\n    curveType,\n    curveParameters,\n    poolNonce,\n  };\n}\n\nexport interface TokenSwapState {\n  address: PublicKey;\n  programId: PublicKey;\n  tokenProgramId: PublicKey;\n  poolToken: PublicKey;\n  feeAccount: PublicKey;\n  authority: PublicKey;\n  tokenAccountA: PublicKey;\n  tokenAccountB: PublicKey;\n  mintA: PublicKey;\n  mintB: PublicKey;\n  tradeFeeNumerator: u64;\n  tradeFeeDenominator: u64;\n  ownerTradeFeeNumerator: u64;\n  ownerTradeFeeDenominator: u64;\n  ownerWithdrawFeeNumerator: u64;\n  ownerWithdrawFeeDenominator: u64;\n  curveType: number;\n  curveParameters: number[];\n  poolNonce: number;\n}\n","import { Fraction, Stable } from '@jup-ag/math';\nimport {\n  FEE_DENOMINATOR,\n  StableSwapNPool,\n} from '@mercurial-finance/stable-swap-n-pool';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createMercurialExchangeInstruction } from '../jupiterInstruction';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport { AccountInfo } from '@solana/spl-token';\nimport { ZERO_FRACTION } from '../../constants';\n\nexport class MercurialAmm implements Amm {\n  label = 'Mercurial';\n  private tokenAccounts: AccountInfo[] = [];\n  private calculator: Stable | undefined;\n\n  constructor(private stableSwapNPool: StableSwapNPool) {}\n\n  get id() {\n    return this.stableSwapNPool.poolAccount.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return this.stableSwapNPool.tokenAccounts;\n  }\n\n  update(accountInfoMap: AccountInfoMap) {\n    let tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos\n      .map((info) => deserializeAccount(info.data))\n      .filter((x): x is AccountInfo => x !== null);\n\n    this.calculator = new Stable(\n      JSBI.BigInt(this.stableSwapNPool.amplificationCoefficient),\n      this.tokenAccounts.map((tokenAccount) => {\n        return JSBI.BigInt(tokenAccount.amount.toString());\n      }),\n      this.stableSwapNPool.precisionMultipliers.map((precisionMultiplier) =>\n        JSBI.BigInt(precisionMultiplier)\n      ),\n      new Fraction(\n        JSBI.BigInt(this.stableSwapNPool.feeNumerator),\n        JSBI.BigInt(FEE_DENOMINATOR)\n      )\n    );\n  }\n\n  getQuote({ sourceMint, destinationMint, amount }: QuoteParams): Quote {\n    if (this.tokenAccounts.length === 0) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for Curve calculator.');\n    }\n\n    const inputIndex = this.tokenAccounts.findIndex((tokenAccount) =>\n      tokenAccount.mint.equals(sourceMint)\n    );\n    const outputIndex = this.tokenAccounts.findIndex((tokenAccount) =>\n      tokenAccount.mint.equals(destinationMint)\n    );\n    const result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      inputIndex,\n      outputIndex\n    );\n\n    const feePct = this.stableSwapNPool.feeNumerator / FEE_DENOMINATOR;\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: destinationMint.toBase58(),\n      feePct: feePct,\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams) {\n    return [createMercurialExchangeInstruction(\n      this.stableSwapNPool,\n      sourceTokenAccount,\n      destinationTokenAccount,\n      userTransferAuthority,\n      amount,\n      minimumOutAmount,\n      platformFee\n    )];\n  }\n\n  get reserveTokenMints() {\n    return this.stableSwapNPool.tokenMints;\n  }\n}\n","import { Fraction, TokenSwapConstantProduct } from '@jup-ag/math';\nimport {\n  AccountInfo,\n  Connection,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { createCropperSwapInstruction } from '../jupiterInstruction';\n\nimport { AccountInfo as TokenAccountInfo } from '@solana/spl-token';\nimport { ZERO_FRACTION } from '../../constants';\nimport {\n  accountInfoToCropperPoolState,\n  CropperPoolState,\n  stateAccountInfoToCropperState,\n  CROPPER_STATE_ADDRESS,\n} from './swapLayout';\nimport Decimal from 'decimal.js';\n\ninterface CropperParams {\n  tokenAFeeAccount: PublicKey;\n  tokenBFeeAccount: PublicKey;\n  returnFeeNumerator: number;\n  fixedFeeNumerator: number;\n  feeDenominator: number;\n}\n\nexport class CropperAmm implements Amm {\n  label = 'Cropper';\n  poolState: CropperPoolState;\n  private tokenAccounts: TokenAccountInfo[] = [];\n  private calculator: TokenSwapConstantProduct | undefined;\n  private feePct: Decimal;\n\n  // Hardcoded because no where to query this\n  static async getStateFromStateAccount(connection: Connection) {\n    const accountInfo = await connection.getAccountInfo(CROPPER_STATE_ADDRESS);\n\n    if (!accountInfo) {\n      throw new Error('State account not found');\n    }\n\n    return stateAccountInfoToCropperState(accountInfo);\n  }\n\n  static decodePoolState = accountInfoToCropperPoolState;\n\n  constructor(\n    address: PublicKey,\n    accountInfo: AccountInfo<Buffer>,\n    private params: CropperParams\n  ) {\n    this.poolState = accountInfoToCropperPoolState(address, accountInfo);\n\n    this.feePct = new Decimal(this.params.fixedFeeNumerator)\n      .div(this.params.feeDenominator)\n      .add(\n        new Decimal(this.params.returnFeeNumerator).div(\n          this.params.feeDenominator\n        )\n      );\n\n    this.params.tokenAFeeAccount = new PublicKey(this.params.tokenAFeeAccount);\n    this.params.tokenBFeeAccount = new PublicKey(this.params.tokenBFeeAccount);\n  }\n\n  get id() {\n    return this.poolState.ammId.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [this.poolState.tokenAAccount, this.poolState.tokenBAccount];\n  }\n\n  update(accountInfoMap: AccountInfoMap): void {\n    const tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos.map((info) => {\n      const tokenAccount = deserializeAccount(info.data);\n      if (!tokenAccount) {\n        throw new Error('Invalid token account');\n      }\n      return tokenAccount;\n    });\n\n    this.calculator = new TokenSwapConstantProduct(\n      this.tokenAccounts.map((tokenAccount) => {\n        return JSBI.BigInt(tokenAccount.amount.toString());\n      }),\n      new Fraction(\n        JSBI.BigInt(this.params.fixedFeeNumerator),\n        JSBI.BigInt(this.params.feeDenominator)\n      ),\n      new Fraction(\n        JSBI.BigInt(this.params.returnFeeNumerator),\n        JSBI.BigInt(this.params.feeDenominator)\n      )\n    );\n  }\n\n  getQuote({ sourceMint, amount }: QuoteParams): Quote {\n    if (this.tokenAccounts.length === 0) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for calculator.');\n    }\n\n    const outputIndex = this.tokenAccounts[0].mint.equals(sourceMint) ? 1 : 0;\n    let result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      outputIndex\n    );\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: sourceMint.toBase58(),\n      feePct: this.feePct.toNumber(),\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams): TransactionInstruction[] {\n    const feeAccount = sourceMint.equals(this.poolState.mintA)\n      ? this.params.tokenAFeeAccount\n      : this.params.tokenBFeeAccount;\n\n    return [\n      createCropperSwapInstruction(\n        this.poolState,\n        sourceMint,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        userTransferAuthority,\n        feeAccount,\n        amount,\n        minimumOutAmount,\n        platformFee\n      ),\n    ];\n  }\n\n  get reserveTokenMints() {\n    return [this.poolState.mintA, this.poolState.mintB];\n  }\n}\n","import { struct, u8, Layout, blob } from '@solana/buffer-layout';\nimport { PublicKey, AccountInfo } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nimport { publicKey, uint64 } from '../../utils/layout';\n\nexport const SenchaSwapLayout = struct([\n  blob(8, 'discriminator'),\n  publicKey('factory'),\n  u8('bump'),\n  uint64('index'),\n  publicKey('admin'),\n  publicKey('token0Reserves'),\n  publicKey('token0Mint'),\n  publicKey('token0Fees'),\n  publicKey('token1Reserves'),\n  publicKey('token1Mint'),\n  publicKey('token1Fees'),\n  u8('isPaused'),\n  publicKey('poolMint'),\n  uint64('tradeFeeKbps'),\n  uint64('withdrawFeeKbps'),\n  uint64('adminTradeFeeKbps'),\n  uint64('adminWithdrawFeeKbps'),\n]);\n\nexport interface SenchaPoolState {\n  programId: PublicKey;\n  isPaused: boolean;\n  bump: number;\n  ammId: PublicKey;\n  token0Reserves: PublicKey;\n  token1Reserves: PublicKey;\n  token0Mint: PublicKey;\n  token1Mint: PublicKey;\n  token0Fees: PublicKey;\n  token1Fees: PublicKey;\n  poolMint: PublicKey;\n  tradeFeeKbps: number;\n}\n\nexport const accountInfoToSenchaPoolState = (\n  address: PublicKey,\n  accountInfo: AccountInfo<Buffer>\n): SenchaPoolState => {\n  const programId = accountInfo.owner;\n  const decoded = SenchaSwapLayout.decode(accountInfo.data);\n\n  return {\n    programId,\n    isPaused: decoded.isPaused,\n    bump: decoded.bump,\n    ammId: address,\n    token0Reserves: decoded.token0Reserves,\n    token1Reserves: decoded.token1Reserves,\n    token0Mint: decoded.token0Mint,\n    token1Mint: decoded.token1Mint,\n    token0Fees: decoded.token0Fees,\n    token1Fees: decoded.token1Fees,\n    poolMint: decoded.poolMint,\n    tradeFeeKbps: decoded.tradeFeeKbps.toNumber(),\n  };\n};\n","import {\n  AccountInfo,\n  PublicKey,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport {\n  AccountInfoMap,\n  Amm,\n  mapAddressToAccountInfos,\n  Quote,\n  QuoteParams,\n  SwapParams,\n} from '../amm';\nimport { accountInfoToSenchaPoolState, SenchaPoolState } from './swapLayout';\nimport { AccountInfo as TokenAccountInfo } from '@solana/spl-token';\nimport { deserializeAccount } from '../../utils/deserializeAccount';\nimport { createSenchaSwapInstruction } from '../jupiterInstruction';\nimport { Fraction, TokenSwapConstantProduct, ZERO } from '@jup-ag/math';\nimport JSBI from 'jsbi';\nimport { ZERO_FRACTION } from '../../constants';\n\nexport class SenchaAmm implements Amm {\n  label = 'Sencha';\n  poolState: SenchaPoolState;\n  private calculator: TokenSwapConstantProduct | undefined;\n  private tokenAccounts: TokenAccountInfo[] = [];\n\n  constructor(address: PublicKey, accountInfo: AccountInfo<Buffer>) {\n    this.poolState = accountInfoToSenchaPoolState(address, accountInfo);\n  }\n\n  get id() {\n    return this.poolState.ammId.toBase58();\n  }\n\n  getAccountsForUpdate(): PublicKey[] {\n    return [this.poolState.token0Reserves, this.poolState.token1Reserves];\n  }\n\n  update(accountInfoMap: AccountInfoMap): void {\n    const tokenAccountInfos = mapAddressToAccountInfos(\n      accountInfoMap,\n      this.getAccountsForUpdate()\n    );\n\n    this.tokenAccounts = tokenAccountInfos.map((info) => {\n      const tokenAccount = deserializeAccount(info.data);\n      if (!tokenAccount) {\n        throw new Error('Invalid token account');\n      }\n      return tokenAccount;\n    });\n\n    this.calculator = new TokenSwapConstantProduct(\n      this.tokenAccounts.map((tokenAccount) => {\n        return JSBI.BigInt(tokenAccount.amount.toString());\n      }),\n      new Fraction(\n        JSBI.BigInt(this.poolState.tradeFeeKbps),\n        JSBI.BigInt(10000000) // 100% = 10000000kbps\n      ),\n      new Fraction(ZERO, ZERO),\n      false\n    );\n  }\n\n  getQuote({ sourceMint, amount }: QuoteParams): Quote {\n    if (this.tokenAccounts.length === 0) {\n      throw new Error('Unable to fetch accounts for specified tokens.');\n    }\n\n    if (this.calculator === undefined) {\n      throw new Error('Unable to fetch accounts for Curve calculator.');\n    }\n\n    const outputIndex = this.tokenAccounts[0].mint.equals(sourceMint) ? 1 : 0;\n    let result = this.calculator.exchange(\n      JSBI.BigInt(amount),\n      ZERO_FRACTION,\n      outputIndex\n    );\n\n    let feePct = this.poolState.tradeFeeKbps / 10000000; // 100% kbps\n\n    return {\n      notEnoughLiquidity: false,\n      inAmount: amount,\n      outAmount: JSBI.toNumber(result.expectedOutputAmount),\n      feeAmount: JSBI.toNumber(result.fees),\n      feeMint: sourceMint.toBase58(),\n      feePct,\n      priceImpactPct: result.priceImpact.toNumber(),\n    };\n  }\n\n  createSwapInstructions({\n    sourceMint,\n    sourceTokenAccount,\n    destinationTokenAccount,\n    userTransferAuthority,\n    amount,\n    minimumOutAmount,\n    platformFee,\n  }: SwapParams): TransactionInstruction[] {\n    return [\n      createSenchaSwapInstruction(\n        this.poolState,\n        sourceMint,\n        sourceTokenAccount,\n        destinationTokenAccount,\n        userTransferAuthority,\n        amount,\n        minimumOutAmount,\n        platformFee\n      ),\n    ];\n  }\n\n  get reserveTokenMints() {\n    return [this.poolState.token0Mint, this.poolState.token1Mint];\n  }\n}\n","import { AccountInfo, Cluster, Connection, PublicKey } from '@solana/web3.js';\nimport { isValidRoute, MarketInfo } from './market';\nimport { MARKETS_URL, WRAPPED_SOL_MINT } from '../constants';\nimport { RaydiumAmm } from './raydium/raydiumAmm';\nimport fetch from 'cross-fetch';\nimport { MarketMeta, TokenRouteSegments } from './types';\nimport { Amm } from './amm';\nimport { SerumAmm } from './serum/serumAmm';\nimport { ammFactory } from './ammFactory';\nimport { getTokenSwapPools } from './spl-token-swap/splTokenSwapPools';\nimport {\n  getSaberWrappedDecimalsAmms,\n  SaberAddDecimalsAmm,\n} from './saber/saberAddDecimalsAmm';\nimport { AldrinAmm, MercurialAmm, SplTokenSwapAmm } from '..';\nimport { SplitTradeAmm } from './split-trade/splitTradeAmm';\nimport { getTwoPermutations } from '../utils/getTwoPermutations';\n\nexport interface TransactionFeeInfo {\n  signatureFee: number;\n  openOrdersDeposits: number[];\n  ataDeposit: number;\n  ataDepositLength: number;\n}\n\nexport interface RouteInfo {\n  marketInfos: MarketInfo[];\n  inAmount: number;\n  outAmount: number;\n  outAmountWithSlippage: number;\n  priceImpactPct: number;\n  getDepositAndFee: () => Promise<TransactionFeeInfo | undefined>;\n}\n\ntype MarketsCache = Array<\n  Omit<AccountInfo<Buffer>, 'data' | 'owner'> & {\n    data: [string, 'base64'];\n    owner: string;\n    pubkey: string;\n  }\n>;\n\ntype KeyedAccountInfo = AccountInfo<Buffer> & {\n  pubkey: PublicKey;\n  // api can pass some extra params\n  params?: any;\n};\n\nexport async function getAllAmms(\n  connection: Connection,\n  cluster: Cluster,\n  marketUrl?: string\n): Promise<Amm[]> {\n  const marketsCache = (await (\n    await fetch(marketUrl || MARKETS_URL[cluster])\n  ).json()) as MarketsCache;\n\n  const marketCacheToAccountInfo = (\n    marketsCache: MarketsCache\n  ): Array<KeyedAccountInfo> => {\n    return marketsCache.map((market) => {\n      const {\n        data: [accountInfo, format],\n        pubkey,\n        ...rest\n      } = market;\n      return {\n        ...rest,\n        pubkey: new PublicKey(pubkey),\n        data: Buffer.from(accountInfo, format),\n        owner: new PublicKey(rest.owner),\n      };\n    });\n  };\n\n  // We add market accounts infos that do not come from the API yet\n  // TODO: Move to market cache\n  const tokenSwapPools = getTokenSwapPools(cluster);\n\n  const extraKeys = tokenSwapPools;\n  const extraMarketKeyedAccountInfos = (\n    await connection.getMultipleAccountsInfo(extraKeys)\n  ).reduce((acc, accountInfo, index) => {\n    if (accountInfo) {\n      acc.push({\n        ...accountInfo,\n        pubkey: extraKeys[index],\n      });\n    }\n    return acc;\n  }, new Array<KeyedAccountInfo>());\n\n  const marketKeyedAccountInfos = marketCacheToAccountInfo(marketsCache).concat(\n    extraMarketKeyedAccountInfos\n  );\n\n  const amms = marketKeyedAccountInfos.reduce((acc, keyedAccountInfo) => {\n    const amm = ammFactory(\n      keyedAccountInfo.pubkey,\n      keyedAccountInfo,\n      keyedAccountInfo.params\n    );\n    // Amm might not be recognized by the current version of the frontend\n    // or be in a state we don't want\n    if (amm) {\n      acc.push(amm);\n    }\n    return acc;\n  }, new Array<Amm>());\n\n  amms.push(...getSaberWrappedDecimalsAmms());\n\n  const naturalAmms = amms\n    .reduce((acc, amm) => {\n      if (!(amm instanceof SerumAmm || amm instanceof SaberAddDecimalsAmm)) {\n        acc.push(amm);\n      }\n      return acc;\n    }, new Array<Amm>());\n\n  // Add the split trade Amms\n  // This is very inefficient and slow\n  pairs(naturalAmms, (firstAmm, secondAmm) => {\n    const splitTradeAmm = SplitTradeAmm.create(firstAmm, secondAmm);\n    if (splitTradeAmm) {\n      amms.push(splitTradeAmm);\n    }\n  });\n\n  return amms;\n}\n\nfunction pairs<T>(arr: T[], func: (a: T, b: T) => void) {\n  for(let i = 0; i < arr.length - 1; i++) {\n    for (let j = i; j < arr.length - 1; j++) {\n      func(arr[i], arr[j + 1]);\n    }\n  }\n}\n\nexport function getTokenRouteSegments(amms: Amm[]): TokenRouteSegments {\n  const tokenRouteSegments = new Map<string, Map<string, MarketMeta[]>>();\n\n  amms.forEach((amm) => {\n    const reserveTokenMintPermutations = getTwoPermutations(\n      amm.reserveTokenMints\n    );\n    reserveTokenMintPermutations.forEach(\n      ([firstReserveMint, secondReserveMint]) => {\n        addSegment(\n          firstReserveMint.toBase58(),\n          secondReserveMint.toBase58(),\n          amm,\n          tokenRouteSegments\n        );\n      }\n    );\n  });\n\n  return tokenRouteSegments;\n}\n\nfunction addSegment(\n  inMint: string,\n  outMint: string,\n  amm: Amm,\n  tokenRouteSegments: TokenRouteSegments\n) {\n  let segments = tokenRouteSegments.get(inMint);\n\n  if (!segments) {\n    segments = new Map<string, MarketMeta[]>([[outMint, []]]);\n    tokenRouteSegments.set(inMint, segments);\n  }\n\n  let marketMetas = segments.get(outMint);\n  if (!marketMetas) {\n    marketMetas = [];\n    segments.set(outMint, marketMetas);\n  }\n\n  marketMetas.push({ amm });\n}\n\nexport type Route = {\n  marketMetas: MarketMeta[];\n  intermediateMint?: PublicKey;\n};\n\nexport function computeRoutes(\n  inputMint: PublicKey,\n  outputMint: PublicKey,\n  tokenRouteSegments: TokenRouteSegments\n): Route[] {\n  const routes: Route[] = [];\n  const firstSegment = tokenRouteSegments?.get(inputMint.toBase58());\n\n  const simpleRoutes = firstSegment?.get(outputMint.toBase58()) ?? [];\n\n  // Direct trade\n  simpleRoutes.forEach((simpleRoute) => {\n    // dont do direct decimal saber\n    if (!(simpleRoute.amm instanceof SaberAddDecimalsAmm)) {\n      routes.push({ marketMetas: [simpleRoute] });\n    }\n  });\n\n  const secondSegment = tokenRouteSegments?.get(outputMint.toBase58());\n\n  for (const [mint, marketMetas] of firstSegment?.entries() ?? []) {\n    const intersectionMarketMetas = secondSegment?.get(mint) ?? [];\n    for (const marketMeta of marketMetas) {\n      for (const intersectionMarketMeta of intersectionMarketMetas) {\n        if (isValidRoute(marketMeta.amm, intersectionMarketMeta.amm)) {\n          routes.push({\n            marketMetas: [marketMeta, intersectionMarketMeta],\n            intermediateMint: new PublicKey(mint),\n          });\n        }\n      }\n    }\n  }\n\n  return routes;\n}\n\nexport function computeRouteMap(tokenRouteSegments: TokenRouteSegments): Map<string, string[]> {\n  const routeMap = new Map<string, string[]>();\n\n  for (const [tokenMint, firstLevelOutputs] of tokenRouteSegments) {\n    const validOutputMints = new Set<string>();\n\n    for (const [\n      firstLevelOutputMint,\n      firstLevelMarketMetas,\n    ] of firstLevelOutputs) {\n      validOutputMints.add(firstLevelOutputMint);\n\n      // add the single level output as possible valid mints as well\n      const secondLevelOutputs =\n        tokenRouteSegments.get(firstLevelOutputMint) ?? [];\n      for (const [\n        secondLevelOutputMint,\n        secondLevelMarketMetas,\n      ] of secondLevelOutputs) {\n        // Prevent output mint == input mint when routing\n        if (secondLevelOutputMint === tokenMint) {\n          continue;\n        }\n\n        for (const firstLevelMarketMeta of firstLevelMarketMetas) {\n          for (const secondLevelMarketMeta of secondLevelMarketMetas) {\n            if (\n              isValidRoute(\n                firstLevelMarketMeta.amm,\n                secondLevelMarketMeta.amm\n              )\n            ) {\n              validOutputMints.add(secondLevelOutputMint);\n              break;\n            }\n          }\n        }\n      }\n    }\n    routeMap.set(tokenMint, Array.from(validOutputMints));\n  }\n\n  return routeMap;\n}\n\nexport function isSplitSetupRequired(marketInfos: MarketInfo[]): boolean {\n  if (marketInfos.length === 1) {\n    const amm = marketInfos[0].marketMeta.amm;\n    if (amm instanceof SplitTradeAmm && amm.shouldSplitSetup) {\n      return true;\n    }\n  } else {\n    const [firstMarket, secondMarket] = marketInfos.map(\n      (marketInfo) => marketInfo.marketMeta.amm\n    );\n\n    if (\n      firstMarket instanceof RaydiumAmm ||\n      secondMarket instanceof RaydiumAmm\n    ) {\n      return true;\n    } else if (\n      firstMarket instanceof SerumAmm &&\n      secondMarket instanceof SerumAmm\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getNumberOfTransactionForRoute(\n  marketInfos: MarketInfo[]\n): number {\n  if (isSplitSetupRequired(marketInfos)) {\n    const [firstMarketInfo, secondMarketInfo] = marketInfos;\n\n    const hasSOL = [\n      (firstMarketInfo.inputMint,\n      firstMarketInfo.outputMint,\n      secondMarketInfo.outputMint),\n    ].some((item) => item.equals(WRAPPED_SOL_MINT));\n\n    return hasSOL ? 3 : 2;\n  }\n  return 1;\n}\n\n// We cannot add platform fee to all possible routing due to transaction size limit\nexport function isPlatformFeeSupported(marketInfos: MarketMeta[]): boolean {\n  if (marketInfos.length > 1) {\n    const [firstMarket, secondMarket] = marketInfos.map(\n      (marketInfo) => marketInfo.amm\n    );\n\n    if (\n      firstMarket instanceof RaydiumAmm &&\n      secondMarket instanceof RaydiumAmm\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function getRouteInfoUniqueId(routeInfo: RouteInfo) {\n  return routeInfo.marketInfos\n    .map(\n      (marketInfo) => `${marketInfo.marketMeta.amm.id}-${marketInfo.inputMint}`\n    )\n    .join('-');\n}\n","import { AccountInfo, PublicKey } from '@solana/web3.js';\nimport {\n  ALDRIN_SWAP_V2_PROGRAM_ID,\n  ALDRIN_SWAP_PROGRAM_ID,\n  DEVNET_SERUM_DEX_PROGRAM,\n  MAINNET_SERUM_DEX_PROGRAM,\n  RAYDIUM_AMM_V4_PROGRAM_ID,\n  CROPPER_PROGRAM_ID,\n  SENCHA_PROGRAM_ID,\n} from '../constants';\nimport { Amm } from './amm';\nimport { SerumMarket, StableSwap } from './market';\nimport { SWAP_PROGRAM_ID as SABER_SWAP_PROGRAM_ID } from '@saberhq/stableswap-sdk';\nimport {\n  STABLE_SWAP_N_POOL_PROGRAM_ID as MERCURIAL_SWAP_PROGRAM_ID,\n  StableSwapNPool,\n} from '@mercurial-finance/stable-swap-n-pool';\nimport { SaberAmm } from './saber/saberAmm';\nimport { SerumAmm } from './serum/serumAmm';\nimport { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { AldrinAmm } from './aldrin/aldrinAmm';\nimport { PROGRAM_ID_TO_LABEL } from './spl-token-swap/splTokenSwapPools';\nimport { SplTokenSwapAmm } from './spl-token-swap/splTokenSwapAmm';\nimport { MercurialAmm } from './mercurial/mercurialAmm';\nimport { RaydiumAmm } from './raydium/raydiumAmm';\nimport { CropperAmm } from './cropper/cropperAmm';\nimport { SenchaAmm } from './sencha/senchaAmm';\n\nexport function ammFactory(\n  address: PublicKey,\n  accountInfo: AccountInfo<Buffer>,\n  params?: any\n): Amm | undefined {\n  const programId = new PublicKey(accountInfo.owner);\n\n  if (\n    programId.equals(MAINNET_SERUM_DEX_PROGRAM) ||\n    programId.equals(DEVNET_SERUM_DEX_PROGRAM)\n  ) {\n    const decoded = SerumMarket.getLayout(programId).decode(accountInfo.data);\n    if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n      throw new Error('Invalid market');\n    }\n    const serumMarket = new SerumMarket(decoded, 0, 0, {}, programId);\n    return new SerumAmm(serumMarket);\n  } else if (programId.equals(RAYDIUM_AMM_V4_PROGRAM_ID)) {\n    const raydiumAmm = new RaydiumAmm(address, accountInfo);\n    if (raydiumAmm.status === 1) {\n      return raydiumAmm;\n    }\n  } else if (programId.equals(MERCURIAL_SWAP_PROGRAM_ID)) {\n    const mercurialPool = StableSwapNPool.loadWithData(\n      address,\n      accountInfo.data,\n      findProgramAddressSync([address.toBuffer()], MERCURIAL_SWAP_PROGRAM_ID)[0]\n    );\n\n    return new MercurialAmm(mercurialPool);\n  } else if (programId.equals(SABER_SWAP_PROGRAM_ID)) {\n    const stableSwap = StableSwap.loadWithData(\n      address,\n      accountInfo.data,\n      findProgramAddressSync([address.toBuffer()], SABER_SWAP_PROGRAM_ID)[0]\n    );\n\n    return new SaberAmm(stableSwap);\n  } else if (\n    programId.equals(ALDRIN_SWAP_PROGRAM_ID) ||\n    programId.equals(ALDRIN_SWAP_V2_PROGRAM_ID)\n  ) {\n    return new AldrinAmm(address, accountInfo, params);\n  } else if ([...PROGRAM_ID_TO_LABEL.keys()].includes(programId.toBase58())) {\n    const label =\n      PROGRAM_ID_TO_LABEL.get(accountInfo.owner.toBase58()) ?? 'Unknown';\n    return new SplTokenSwapAmm(address, accountInfo, label);\n  } else if (programId.equals(CROPPER_PROGRAM_ID)) {\n    return new CropperAmm(address, accountInfo, params);\n  } else if (programId.equals(SENCHA_PROGRAM_ID)) {\n    return new SenchaAmm(address, accountInfo);\n  }\n  // Not supported by frontend\n  return;\n}\n","import { RouteInfo } from './routes';\n\nexport const getCacheMint = (marketInfos: RouteInfo['marketInfos']) => {\n  return `${marketInfos[0]?.inputMint}-${marketInfos[0]?.outputMint}-${\n    marketInfos[1]?.outputMint\n  }-${marketInfos.map((item) => item.marketMeta.amm.id)}`;\n};\n","import {\n  Signer,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport const getEmptyInstruction: () => Instruction = () => ({\n  instructions: [],\n  cleanupInstructions: [],\n  signers: [],\n});\n\nexport type Instruction = {\n  instructions: TransactionInstruction[];\n  cleanupInstructions: TransactionInstruction[];\n  signers: Signer[];\n};\n\nexport type TransactionPayload = {\n  transaction: Transaction;\n  signers: Signer[];\n  execute: () => Promise<TransactionSignature>;\n};\n","import {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  Token,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '../constants';\nimport { getEmptyInstruction, Instruction } from './instruction';\n\n// Leverage the existing ATA when present\nexport async function createAndCloseWSOLAccount(\n  connection: Connection,\n  owner: PublicKey,\n  amount: number\n): Promise<Instruction & { address: PublicKey }> {\n  const result = getEmptyInstruction();\n  result.instructions = [];\n\n  const toAccount = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    WRAPPED_SOL_MINT,\n    owner\n  );\n\n  const info = await connection.getAccountInfo(toAccount);\n\n  if (info === null) {\n    result.instructions.push(\n      Token.createAssociatedTokenAccountInstruction(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        WRAPPED_SOL_MINT,\n        toAccount,\n        owner,\n        owner\n      )\n    );\n  }\n\n  // Fund account and sync\n  result.instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: owner,\n      toPubkey: toAccount,\n      lamports: amount,\n    })\n  );\n  result.instructions.push(\n    // This is not exposed by the types, but indeed it exists\n    (Token as any).createSyncNativeInstruction(TOKEN_PROGRAM_ID, toAccount)\n  );\n\n  result.cleanupInstructions = [\n    Token.createCloseAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      toAccount,\n      owner,\n      owner,\n      []\n    ),\n  ];\n\n  return {\n    address: toAccount,\n    ...result,\n  };\n}\n\nexport async function findOrCreateAssociatedAccountByMint(\n  connection: Connection,\n  payer: PublicKey,\n  owner: PublicKey,\n  mintAddress: PublicKey | string,\n  unwrapSOL: boolean,\n): Promise<Instruction & { address: PublicKey }> {\n  const mint =\n    typeof mintAddress === 'string' ? new PublicKey(mintAddress) : mintAddress;\n  const toAccount = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mint,\n    owner\n  );\n  const cleanupInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  const info = await connection.getAccountInfo(toAccount);\n  if (info === null) {\n    instructions.push(\n      Token.createAssociatedTokenAccountInstruction(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        mint,\n        toAccount,\n        owner,\n        payer\n      )\n    );\n  }\n\n  // We close it when wrapped SOL\n  if (mint.equals(WRAPPED_SOL_MINT) && unwrapSOL) {\n    cleanupInstructions.push(\n      Token.createCloseAccountInstruction(\n        TOKEN_PROGRAM_ID,\n        toAccount,\n        owner,\n        owner,\n        []\n      )\n    );\n  }\n\n  return {\n    address: toAccount,\n    instructions: instructions,\n    cleanupInstructions,\n    signers: [],\n  };\n}\n","import { Connection, PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { isPlatformFeeSupported, RouteInfo } from './routes';\nimport { getEmptyInstruction, Instruction } from '../utils/instruction';\nimport { findOrCreateAssociatedAccountByMint } from '../utils/token';\nimport {\n  createSetTokenLedgerInstruction,\n} from './jupiterInstruction';\nimport { Owner } from '../utils/Owner';\nimport { PlatformFee } from './types';\n\nasync function routeToInstructions(\n  user: Owner,\n  openOrdersAddresses: (PublicKey | undefined)[],\n  userSourceTokenAccountAddress: PublicKey,\n  userIntermediaryTokenAccountAddress: PublicKey | undefined,\n  userDestinationTokenAccountAddress: PublicKey,\n  routeInfo: RouteInfo,\n  platformFee: PlatformFee | undefined\n): Promise<Instruction> {\n  const outAmountWithSlippage = routeInfo.outAmountWithSlippage;\n  const inputAmount = routeInfo.inAmount;\n\n  const legs = routeInfo.marketInfos.length;\n  if (legs == 2 && !userIntermediaryTokenAccountAddress) {\n    throw new Error('Missing intermediary token account');\n  }\n\n  const userTokenAccountAddresses =\n    legs === 1\n      ? [userSourceTokenAccountAddress, userDestinationTokenAccountAddress]\n      : [\n          userSourceTokenAccountAddress,\n          userIntermediaryTokenAccountAddress!,\n          userDestinationTokenAccountAddress,\n        ];\n\n  let instructions: TransactionInstruction[] = [];\n\n  const platformFeeSupported = isPlatformFeeSupported(routeInfo.marketInfos.map((mi) => mi.marketMeta));\n\n  if (legs > 1) {\n    instructions.push(\n      createSetTokenLedgerInstruction(userIntermediaryTokenAccountAddress!)\n    );\n  }\n\n  for (const [index, marketInfo] of routeInfo.marketInfos.entries()) {\n    const amm = marketInfo.marketMeta.amm;\n    const legInputAmount = index === 0 ? inputAmount : null;\n    const legOutAmountWithSlippage =\n      index === legs - 1 ? outAmountWithSlippage : 0;\n    const legPlatformFee =\n      index === (legs - 1) && platformFeeSupported ? platformFee : undefined;\n\n    const [source, destination] = userTokenAccountAddresses.slice(index);\n\n    instructions.push(\n      ...amm.createSwapInstructions({\n        sourceMint: marketInfo.inputMint,\n        destinationMint: marketInfo.outputMint,\n        sourceTokenAccount: source,\n        destinationTokenAccount: destination,\n        userTransferAuthority: user.publicKey,\n        amount: legInputAmount,\n        minimumOutAmount: legOutAmountWithSlippage,\n        openOrdersAddress: openOrdersAddresses[index],\n        platformFee: legPlatformFee\n      })\n    );\n  }\n\n  const { signers, cleanupInstructions } = getEmptyInstruction();\n\n  if (user.isKeyPair && user.signer) {\n    signers.push(user.signer);\n  }\n  return {\n    signers,\n    cleanupInstructions,\n    instructions,\n  };\n}\n\nexport const routeAtaInstructions = async (\n  connection: Connection,\n  marketInfos: RouteInfo['marketInfos'],\n  userPublicKey: PublicKey,\n  unwrapSOL: boolean,\n) => {\n  const getUserIntermediateTokenAccountAddress = async () => {\n    const userIntermediateTokenAccountAddress =\n      marketInfos.length === 2\n        ? await findOrCreateAssociatedAccountByMint(\n            connection,\n            userPublicKey,\n            userPublicKey,\n            marketInfos[0].outputMint,\n            unwrapSOL,\n          )\n        : undefined;\n    return userIntermediateTokenAccountAddress;\n  };\n\n  const getUserDestinationTokenAccountAddress = async () => {\n    return await findOrCreateAssociatedAccountByMint(\n      connection,\n      userPublicKey,\n      userPublicKey,\n      marketInfos.length === 2\n        ? marketInfos[1].outputMint\n        : marketInfos[0].outputMint,\n      unwrapSOL,\n    );\n  };\n\n  const [\n    userIntermediaryTokenAccountResult,\n    userDestinationTokenAccountResult,\n  ] = await Promise.all([\n    getUserIntermediateTokenAccountAddress(),\n    getUserDestinationTokenAccountAddress(),\n  ]);\n\n  return {\n    userIntermediaryTokenAccountResult,\n    userDestinationTokenAccountResult,\n  };\n};\n\nexport default routeToInstructions;\n","export const wait = (time: number) =>\n  new Promise((resolve) => setTimeout(resolve, time));\n","import { Connection, PublicKey } from '@solana/web3.js';\nimport { SerumMarket } from '../market';\nimport { getEmptyInstruction, Instruction } from '../../utils/instruction';\nimport { wait } from '../../utils/wait';\nimport { createOpenOrdersInstruction } from '../jupiterInstruction';\n\nexport type MarketToOpenOrdersAddress = Map<string, PublicKey>;\n\nexport async function getOrCreateOpenOrdersAddress(\n  connection: Connection,\n  user: PublicKey,\n  serumMarket: SerumMarket,\n  marketToOpenOrdersAddress: MarketToOpenOrdersAddress\n): Promise<(Instruction & { address: PublicKey }) | undefined> {\n  const result = getEmptyInstruction();\n\n  const marketAddress = serumMarket.address.toString();\n  let openOrdersAddress = marketToOpenOrdersAddress.get(marketAddress);\n  if (openOrdersAddress) {\n    let retries = 0;\n    let openOrdersAccountInfo = null;\n\n    // get account info might not updated after a swap, add retry to mitigate it.\n    while (retries < 3 && !openOrdersAccountInfo) {\n      // We verify if it indeed exists, with low commitment to pick it up, to address the unsafe behaviour below\n      openOrdersAccountInfo = await connection.getAccountInfo(\n        openOrdersAddress,\n        'processed'\n      );\n      retries++;\n      await wait(450);\n    }\n\n    if (openOrdersAccountInfo) {\n      return {\n        ...result,\n        address: openOrdersAddress,\n      };\n    }\n  }\n\n  const [newOpenOrdersAddress, ix] = createOpenOrdersInstruction(\n    serumMarket,\n    user\n  );\n\n  openOrdersAddress = newOpenOrdersAddress;\n  result.instructions = [ix];\n\n  // This is unsafe, since we don't know yet if it has succeeded\n  marketToOpenOrdersAddress.set(serumMarket.address.toString(), openOrdersAddress);\n\n  return {\n    ...result,\n    address: openOrdersAddress,\n  };\n}\n","import { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { Connection, FeeCalculator, PublicKey } from '@solana/web3.js';\nimport type { SerumOpenOrdersMap } from '..';\nimport { deserializeAccount } from '../utils/deserializeAccount';\nimport { getCacheMint } from './cache';\nimport { RouteInfo, TransactionFeeInfo } from './routes';\nimport { routeAtaInstructions } from './routeToInstructions';\nimport { getOrCreateOpenOrdersAddress } from './serum/openOrders';\nimport { SerumAmm } from './serum/serumAmm';\nimport { InstructionCache, PlatformFeeAndAccounts, SetupInstructions } from './types';\n\nconst calculateTransactionDepositAndFee = ({\n  intermediate,\n  destination,\n  openOrders,\n  feeCalculator,\n}: SetupInstructions & {\n  feeCalculator: FeeCalculator;\n}): TransactionFeeInfo => {\n  const SERUM_OPEN_ACCOUNT_LAMPORTS = 23352760;\n  const OPEN_TOKEN_ACCOUNT_LAMPORTS = 2039280;\n  const openOrdersDeposits = openOrders\n    .filter((ooi) => ooi && ooi.instructions.length > 0)\n    .map(() => SERUM_OPEN_ACCOUNT_LAMPORTS);\n  const ataDepositLength = [destination, intermediate].filter(\n    (item) => item?.instructions.length && item.cleanupInstructions.length === 0\n  ).length;\n  const ataDeposit = ataDepositLength * OPEN_TOKEN_ACCOUNT_LAMPORTS;\n\n  return {\n    signatureFee:\n      ([destination.signers, intermediate?.signers, openOrders?.some((oo) => oo?.signers)]\n        .filter(Boolean)\n        .flat().length +\n        1) *\n      feeCalculator.lamportsPerSignature,\n    openOrdersDeposits,\n    ataDeposit,\n    ataDepositLength: ataDepositLength,\n  };\n};\n\nexport const getDepositAndFeeFromInstructions = async ({\n  connection,\n  marketInfos,\n  userPublicKey,\n  feeCalculator,\n  instructionCache,\n  serumOpenOrdersPromise,\n  unwrapSOL,\n}: {\n  connection: Connection;\n  userPublicKey: PublicKey;\n  feeCalculator: FeeCalculator;\n  marketInfos: RouteInfo['marketInfos'];\n  instructionCache: InstructionCache;\n  /* promise because we can choose not to await it when we dont need it */\n  serumOpenOrdersPromise: Promise<SerumOpenOrdersMap>;\n  unwrapSOL: boolean;\n}) => {\n  const jointMintsCacheKey = getCacheMint(marketInfos);\n\n  const walletPublicKey = userPublicKey.toBase58();\n\n  const routeCache = instructionCache\n    ?.get(walletPublicKey)\n    ?.get(jointMintsCacheKey);\n\n  if (routeCache) {\n    const { destination, intermediate, openOrders } = routeCache;\n    return calculateTransactionDepositAndFee({\n      intermediate,\n      destination,\n      openOrders,\n      feeCalculator,\n    });\n  }\n\n  const openOrdersInstructionsPromise = Promise.all(marketInfos.map(async (marketInfo) => {\n    const amm = marketInfo.marketMeta.amm\n    if (amm instanceof SerumAmm) {\n      return await getOrCreateOpenOrdersAddress(\n        connection,\n        userPublicKey,\n        amm.market,\n        await serumOpenOrdersPromise\n      )\n    }\n    return;\n  }));\n\n  const promise = routeAtaInstructions(\n    connection,\n    marketInfos,\n    userPublicKey,\n    unwrapSOL,\n  ).then(\n    ({\n      userIntermediaryTokenAccountResult,\n      userDestinationTokenAccountResult,\n    }) => {\n      return openOrdersInstructionsPromise.then((openOrdersInstructions) => ({\n        intermediate: userIntermediaryTokenAccountResult,\n        destination: userDestinationTokenAccountResult,\n        openOrders: openOrdersInstructions,\n      }));\n    }\n  );\n\n  const result = await promise;\n\n  const walletCache =\n    instructionCache.get(walletPublicKey) ||\n    (new Map() as NonNullable<ReturnType<InstructionCache['get']>>);\n\n  walletCache.set(jointMintsCacheKey, result);\n\n  instructionCache.set(walletPublicKey, walletCache);\n\n  return calculateTransactionDepositAndFee({ ...result, feeCalculator });\n};\n\nexport const NO_PLATFORM_FEE: PlatformFeeAndAccounts = {\n  feeBps: 0,\n  feeAccounts: new Map<string, PublicKey>()\n};\n\nexport async function getPlatformFeeAccounts(connection: Connection, feeAccountOwner: PublicKey): Promise<Map<string, PublicKey>> {\n  const tokenAccounts = (await connection.getTokenAccountsByOwner(\n    feeAccountOwner,\n    {programId: TOKEN_PROGRAM_ID}\n  )).value;\n\n  const feeAccounts = tokenAccounts.reduce((acc, tokenAccount) => {\n    const deserializedtokenAccount = deserializeAccount(tokenAccount.account.data);\n    if (deserializedtokenAccount) {\n      acc.set(deserializedtokenAccount.mint.toBase58(), tokenAccount.pubkey);\n    }\n    return acc;\n  }, new Map<string, PublicKey>());\n\n  return feeAccounts;\n}","import {\n  Connection,\n  PublicKey,\n  Transaction,\n  TransactionCtorFields,\n  Signer,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { Instruction, TransactionPayload } from './instruction';\nimport { Owner } from './Owner';\n\nexport class TransactionBuilder {\n  private connection: Connection;\n  private feePayer: PublicKey;\n  private instructions: Instruction[];\n  private owner: Owner;\n\n  constructor(connection: Connection, feePayer: PublicKey, owner: Owner) {\n    this.connection = connection;\n    this.feePayer = feePayer;\n    this.instructions = [];\n    this.owner = owner;\n  }\n\n  addInstruction(instruction: Instruction): TransactionBuilder {\n    this.instructions.push(instruction);\n    return this;\n  }\n\n  async build(recentBlockHash?: string): Promise<TransactionPayload> {\n    if (!recentBlockHash) {\n      recentBlockHash = (\n        await this.connection.getRecentBlockhash('singleGossip')\n      ).blockhash;\n    }\n\n    const txFields: TransactionCtorFields = {\n      recentBlockhash: recentBlockHash,\n      feePayer: this.feePayer,\n    };\n\n    let instructions: TransactionInstruction[] = [];\n    let cleanupInstructions: TransactionInstruction[] = [];\n    let signers: Signer[] = [];\n    this.instructions.forEach((curr) => {\n      instructions = instructions.concat(curr.instructions);\n      cleanupInstructions = cleanupInstructions.concat(\n        curr.cleanupInstructions\n      );\n      signers = signers.concat(curr.signers);\n    });\n\n    const transaction = new Transaction(txFields);\n    instructions\n      .concat(cleanupInstructions)\n      .forEach((ix) => transaction.add(ix));\n    transaction.feePayer = this.feePayer;\n\n    return {\n      transaction: transaction,\n      signers: signers,\n      execute: this.owner.isKeyPair\n        ? () => {\n            return this.connection.sendTransaction(transaction, signers);\n          }\n        : async () => {\n            throw new Error(\n              'Please use a Keypair for the owner parameter to enable the execute function'\n            );\n          },\n    };\n  }\n}\n","import { Keypair, PublicKey, Signer } from '@solana/web3.js';\n\ntype _Owner = Keypair | PublicKey;\n\nexport class Owner {\n  private readonly _owner: _Owner;\n\n  constructor(owner: _Owner) {\n    this._owner = owner;\n  }\n\n  get publicKey(): PublicKey {\n    if (Owner.isKeyPair(this._owner)) {\n      return this._owner.publicKey;\n    }\n\n    return this._owner;\n  }\n\n  get signer(): Signer | undefined {\n    return Owner.isKeyPair(this._owner) ? this._owner : undefined;\n  }\n\n  get isKeyPair(): boolean {\n    return Owner.isKeyPair(this._owner);\n  }\n\n  get isPublicKey(): boolean {\n    return Owner.isPublicKey(this._owner);\n  }\n\n  static isKeyPair(owner: _Owner): owner is Keypair {\n    return (owner as Keypair).secretKey !== undefined;\n  }\n\n  static isPublicKey(owner: _Owner): owner is PublicKey {\n    return !Owner.isKeyPair(owner);\n  }\n}\n","export class TransactionError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, Error.prototype);\n  }\n\n  // transaction id\n  txid?: string;\n}\n","import {\n  ConfirmedTransactionMeta,\n  Connection,\n  PublicKey,\n  Transaction,\n  TransactionResponse,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport promiseRetry from 'promise-retry';\nimport { WRAPPED_SOL_MINT } from '../constants';\nimport { TransactionError } from '../lib/error';\n\nfunction diffTokenBalance(\n  accountKeyIndex: number,\n  meta: ConfirmedTransactionMeta\n): number | undefined {\n  const postBalance = meta.postTokenBalances?.find(\n    (postTokenBalance) => postTokenBalance.accountIndex === accountKeyIndex\n  )?.uiTokenAmount.amount;\n  const preBalance = meta.preTokenBalances?.find(\n    (preTokenBalance) => preTokenBalance.accountIndex === accountKeyIndex\n  )?.uiTokenAmount.amount;\n\n  // When token account is created it isn't present in preBalance\n  if (!postBalance) return;\n  return Math.abs(\n    parseInt(postBalance) -\n      (preBalance !== undefined ? parseInt(preBalance) : 0)\n  );\n}\n\nexport function extractTokenBalanceChangeFromTransaction(\n  transactionResult: TransactionResponse,\n  tokenAccountAddress: PublicKey\n): number | undefined {\n  const message = transactionResult.transaction.message;\n  const meta = transactionResult.meta;\n  if (!meta) {\n    return;\n  }\n  const index = message.accountKeys.findIndex((p) =>\n    p.equals(tokenAccountAddress)\n  );\n\n  return diffTokenBalance(index, meta);\n}\n\nexport function extractWrappedSOLChangeFromTransaction(\n  transactionResult: TransactionResponse\n): number | undefined {\n  const meta = transactionResult.meta;\n  if (!meta) {\n    return;\n  }\n  const index = meta.preTokenBalances?.find(\n    (preTokenBalance) => preTokenBalance.mint === WRAPPED_SOL_MINT.toString()\n  )?.accountIndex;\n\n  if (!index) return;\n\n  return diffTokenBalance(index, meta);\n}\n\nexport function extractSOLChangeFromTransaction(\n  transactionResult: TransactionResponse\n): number | undefined {\n  const meta = transactionResult.meta;\n  if (!meta) {\n    return;\n  }\n  const index = meta.postTokenBalances?.find(\n    (postTokenBalance) => postTokenBalance.mint === WRAPPED_SOL_MINT.toString()\n  )?.accountIndex;\n\n  if (!index) return;\n\n  return diffTokenBalance(index, meta);\n}\n\nexport function getWritableKeys(transaction: Transaction) {\n  return [\n    ...new Set(\n      transaction.instructions\n        .map((inst) =>\n          inst.keys.filter((key) => key.isWritable).map((k) => k.pubkey)\n        )\n        .reduce((acc, el) => acc.concat(el))\n    ).values(),\n  ];\n}\n\nexport function getTokenBalanceChangesFromTransactionResponse(\n  inputMint: PublicKey,\n  outputMint: PublicKey,\n  sourceAddress: PublicKey,\n  destinationAddress: PublicKey,\n  transactionResponse: TransactionResponse | null\n) {\n  let sourceTokenBalanceChange: number | undefined;\n  let destinationTokenBalanceChange: number | undefined;\n\n  if (transactionResponse) {\n    sourceTokenBalanceChange =\n      inputMint.toBase58() === WRAPPED_SOL_MINT.toString()\n        ? extractWrappedSOLChangeFromTransaction(transactionResponse)\n        : extractTokenBalanceChangeFromTransaction(\n            transactionResponse,\n            sourceAddress\n          );\n    destinationTokenBalanceChange =\n      outputMint.toBase58() === WRAPPED_SOL_MINT.toString()\n        ? extractSOLChangeFromTransaction(transactionResponse)\n        : extractTokenBalanceChangeFromTransaction(\n            transactionResponse,\n            destinationAddress\n          );\n  }\n\n  if (!(sourceTokenBalanceChange && destinationTokenBalanceChange)) {\n    throw new Error(\n      'Cannot find source or destination token account balance change'\n    );\n  }\n\n  return [sourceTokenBalanceChange, destinationTokenBalanceChange];\n}\n\nexport function getConfirmTransaction(\n  connection: Connection,\n  txid: TransactionSignature\n) {\n  return promiseRetry(\n    async (retry) => {\n      const txResult = await connection.getTransaction(txid, {\n        commitment: 'confirmed',\n      });\n      if (!txResult) {\n        const error = new TransactionError('Transaction was not confirmed');\n        error.txid = txid;\n\n        retry(error);\n        return txResult;\n      }\n      return txResult;\n    },\n    {\n      retries: 30,\n      minTimeout: 500,\n    }\n  );\n}\n","export function chunks<T>(array: T[], size: number): T[][] {\n  return Array.apply<number, T[], T[][]>(\n    0,\n    new Array(Math.ceil(array.length / size))\n  ).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n","import { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { chunkedGetMultipleAccountInfos } from '../utils/chunkedGetMultipleAccountInfos';\nimport { MarketInfo } from './market';\nimport {\n  isPlatformFeeSupported,\n  Route,\n  RouteInfo,\n  TransactionFeeInfo,\n} from './routes';\n\nconst PLATFORM_FEE_DENOMINATOR = 10000;\n\nexport async function fetchRoutes(\n  connection: Connection,\n  routes: Route[]\n): Promise<Route[]> {\n  await routeBatchFetcher(connection, routes);\n\n  return routes;\n}\n\ninterface GetQuotesParams {\n  routes: Route[];\n  amount: number;\n  inputMint: PublicKey;\n  outputMint: PublicKey;\n  platformFeeBps: number;\n  slippage: number;\n  getDepositAndFeeForRoute: (\n    marketInfos: RouteInfo['marketInfos']\n  ) => Promise<TransactionFeeInfo | undefined>;\n}\n\nexport const computeRouteInfos = ({\n  routes,\n  amount,\n  inputMint,\n  outputMint,\n  platformFeeBps,\n  slippage,\n  getDepositAndFeeForRoute,\n}: GetQuotesParams) => {\n  const routesInfo: RouteInfo[] = routes\n    .map((route) => {\n      const { marketMetas, intermediateMint } = route;\n\n      // Chain all marketMetas\n      let marketInfos: MarketInfo[] = [];\n      let intermediateAmount = amount;\n      let outAmountWithSlippage = amount;\n      const platformFeeSupported = isPlatformFeeSupported(marketMetas);\n      const tokenMints: PublicKey[] = [inputMint, outputMint];\n      // TODO: Avoid this hack with a smarter data structure\n      if (intermediateMint) {\n        tokenMints.splice(1, 0, intermediateMint);\n      }\n\n      const legs = marketMetas.length;\n      for (const [i, marketMeta] of marketMetas.entries()) {\n        try {\n          const sourceMint = tokenMints[i];\n          const destinationMint = tokenMints[i + 1];\n          const quote = marketMeta.amm.getQuote({\n            sourceMint,\n            destinationMint,\n            amount: intermediateAmount,\n          });\n\n          // Platform fee applicable only on last leg\n          const platformFee =\n            legs - 1 === i && platformFeeSupported\n              ? {\n                  amount: Math.floor(\n                    (quote.outAmount * platformFeeBps) /\n                      PLATFORM_FEE_DENOMINATOR\n                  ),\n                  mint: destinationMint.toBase58(),\n                  pct: platformFeeBps / 100,\n                }\n              : { amount: 0, mint: destinationMint.toBase58(), pct: 0 };\n\n          const outAmountAfterFees = Math.max(\n            0,\n            quote.outAmount - platformFee.amount\n          );\n\n          const legOutAmountWithSlippage = Math.round(\n            outAmountAfterFees * (1 - slippage / 100)\n          );\n\n          marketInfos.push({\n            marketMeta,\n            inputMint: sourceMint,\n            outputMint: destinationMint,\n            notEnoughLiquidity: quote.notEnoughLiquidity,\n            minInAmount: quote.minInAmount,\n            minOutAmount: quote.minOutAmount,\n            inAmount: quote.inAmount,\n            outAmount: outAmountAfterFees,\n            priceImpactPct: quote.priceImpactPct,\n            lpFee: {\n              amount: quote.feeAmount,\n              mint: quote.feeMint,\n              pct: quote.feePct,\n            },\n            platformFee,\n          });\n\n          intermediateAmount = outAmountAfterFees;\n          outAmountWithSlippage = legOutAmountWithSlippage;\n        } catch (e: any) {\n          // we supress this error for now\n          if (e.message === 'Number can only safely store up to 53 bits') {\n            return undefined;\n          }\n          throw e;\n        }\n      }\n\n      return {\n        marketInfos,\n        getDepositAndFee: () => getDepositAndFeeForRoute(marketInfos),\n        inAmount: marketInfos[0].inAmount,\n        outAmount: intermediateAmount,\n        outAmountWithSlippage: outAmountWithSlippage,\n        priceImpactPct:\n          1 -\n          marketInfos.reduce((priceFactor, marketInfo) => {\n            priceFactor *= 1 - marketInfo.priceImpactPct;\n            return priceFactor;\n          }, 1),\n      };\n    })\n    .filter((item): item is RouteInfo => item !== undefined)\n    .sort((a, b) => b.outAmount - a.outAmount); // sort based on which one have better output\n\n  return routesInfo;\n};\nasync function routeBatchFetcher(connection: Connection, routes: Route[]) {\n  // optimize to only fetch accounts that are needed\n  const accountsToFetchMap = new Set<string>();\n  const accountInfoMap = new Map<string, AccountInfo<Buffer> | null>();\n\n  routes.forEach(({ marketMetas }) => {\n    return marketMetas.forEach(({ amm }) => {\n      amm.getAccountsForUpdate().forEach((account) => {\n        accountsToFetchMap.add(account.toString());\n      });\n    });\n  });\n\n  const accountsToFetch = Array.from(accountsToFetchMap);\n  const accountInfos = await chunkedGetMultipleAccountInfos(\n    connection,\n    accountsToFetch.map((account) => new PublicKey(account))\n  );\n\n  accountInfos.forEach((item, index) => {\n    const publicKey = accountsToFetch[index];\n    accountInfoMap.set(publicKey, item);\n  });\n\n  routes.forEach(({ marketMetas }) => {\n    marketMetas.forEach(({ amm }) => {\n      amm.update(accountInfoMap);\n    });\n  });\n}\n","import { Connection, PublicKey } from '@solana/web3.js';\nimport { chunks } from './chunks';\n\nexport async function chunkedGetMultipleAccountInfos(\n  connection: Connection,\n  pks: PublicKey[],\n  chunkSize: number = 100\n) {\n  return (\n    await Promise.all(\n      chunks(pks, chunkSize).map((chunk) =>\n        connection.getMultipleAccountsInfo(chunk)\n      )\n    )\n  ).flat();\n}\n","import {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  Token,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport {\n  Cluster,\n  Connection,\n  FeeCalculator,\n  Keypair,\n  PublicKey,\n  Transaction,\n  TransactionResponse,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport { OpenOrders } from '@project-serum/serum';\nimport {\n  computeRouteMap,\n  computeRoutes,\n  getAllAmms,\n  getTokenRouteSegments,\n  isSplitSetupRequired,\n  RouteInfo,\n} from './routes';\nimport { MarketInfo } from './market';\nimport {\n  DEVNET_SERUM_DEX_PROGRAM,\n  MAINNET_SERUM_DEX_PROGRAM,\n  WRAPPED_SOL_MINT,\n} from '../constants';\nimport { getDepositAndFeeFromInstructions, NO_PLATFORM_FEE } from './fee';\nimport { getCacheMint } from './cache';\nimport routeToInstructions, {\n  routeAtaInstructions,\n} from './routeToInstructions';\nimport { getOrCreateOpenOrdersAddress } from './serum/openOrders';\nimport { createAndCloseWSOLAccount } from '../utils/token';\nimport { getEmptyInstruction } from '../utils/instruction';\nimport { TransactionBuilder } from '../utils/TransactionBuilder';\nimport { Owner } from '../utils/Owner';\nimport {\n  getConfirmTransaction,\n  getTokenBalanceChangesFromTransactionResponse,\n} from '../utils/transactionHelpers';\nimport {\n  createCreateTokenLedgerInstruction,\n  createOpenOrdersInstruction,\n  createRaydiumSwapInstruction,\n  createMercurialExchangeInstruction,\n  createSerumSwapInstruction,\n  createSetTokenLedgerInstruction,\n} from './jupiterInstruction';\nimport { fetchRoutes, computeRouteInfos } from './computeRouteInfos';\nimport type { SignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport { TransactionError } from './error';\nimport {\n  InstructionCache,\n  TokenRouteSegments,\n  PlatformFeeAndAccounts,\n} from './types';\nimport { SerumAmm } from './serum/serumAmm';\nimport { SaberAmm } from './saber/saberAmm';\nimport { SplTokenSwapAmm } from './spl-token-swap/splTokenSwapAmm';\nimport { MercurialAmm } from './mercurial/mercurialAmm';\nimport { AldrinAmm } from './aldrin/aldrinAmm';\nimport { RaydiumAmm } from './raydium/raydiumAmm';\nimport { CropperAmm } from './cropper/cropperAmm';\nimport { SenchaAmm } from './sencha/senchaAmm';\n\nexport type SerumOpenOrdersMap = Map<string, PublicKey>;\nexport { MarketInfo } from './market';\nexport { getPlatformFeeAccounts } from './fee';\nexport * from './types';\nexport { RouteInfo, TransactionFeeInfo, getRouteInfoUniqueId } from './routes';\nexport {\n  AldrinAmm,\n  RaydiumAmm,\n  SerumAmm,\n  SaberAmm,\n  SplTokenSwapAmm,\n  MercurialAmm,\n  CropperAmm,\n  SenchaAmm,\n};\n\nexport type SwapResult =\n  | {\n      txid: string;\n      inputAddress: PublicKey;\n      outputAddress: PublicKey;\n      inputAmount: number | undefined;\n      outputAmount: number | undefined;\n    }\n  | {\n      error?: TransactionError;\n    };\n\ntype InputMintAndOutputMint = string;\n\ntype JupiterLoadArgs = {\n  connection: Connection;\n  cluster: Cluster;\n  user?: PublicKey | Keypair;\n  platformFeeAndAccounts?: PlatformFeeAndAccounts;\n  routeCacheDuration?: number;\n  wrapUnwrapSOL?: boolean;\n  marketUrl?: string;\n};\n\nexport class Jupiter {\n  /* promise because we can choose not to await it when we dont need it */\n  private serumOpenOrdersPromise: Promise<SerumOpenOrdersMap> | undefined =\n    undefined;\n  private instructionCache: InstructionCache = new Map();\n  private user: Keypair | PublicKey | undefined;\n  private routeCache = new Map<\n    InputMintAndOutputMint,\n    { fetchTimestamp: number }\n  >();\n\n  constructor(\n    private connection: Connection,\n    private cluster: Cluster,\n    private tokenRouteSegments: TokenRouteSegments,\n    private feeCalculator: FeeCalculator,\n    private platformFeeAndAccounts: PlatformFeeAndAccounts,\n    /** route cache duration in ms */\n    private routeCacheDuration: number = 0,\n    /** When set to true (default) native SOL is wrapped and wSOL unwrapped in each swap, otherwise it assumes wSOL is funded when it exists */\n    private wrapUnwrapSOL: boolean = true,\n  ) {}\n\n  /**\n   * load performs the necessary async scaffolding of the Jupiter object\n   */\n  static async load({\n    connection,\n    cluster,\n    user,\n    platformFeeAndAccounts: platformFee = NO_PLATFORM_FEE,\n    routeCacheDuration = 0,\n    wrapUnwrapSOL = true,\n    // @internal,\n    marketUrl,\n  }: JupiterLoadArgs) {\n    const tokenRouteSegments = await Jupiter.fetchTokenRouteSegments(\n      connection,\n      cluster,\n      marketUrl\n    );\n\n    const {\n      value: { feeCalculator },\n    } = await connection.getRecentBlockhashAndContext('processed');\n\n    const jupiter = new Jupiter(\n      connection,\n      cluster,\n      tokenRouteSegments,\n      feeCalculator,\n      platformFee,\n      routeCacheDuration,\n      wrapUnwrapSOL\n    );\n    if (user) jupiter.setUserPublicKey(user);\n    return jupiter;\n  }\n\n  async computeRoutes(\n    inputMint: PublicKey,\n    outputMint: PublicKey,\n    inputAmount: number,\n    slippage: number,\n    shouldFetchRoutes: boolean = false\n  ) {\n    const getDepositAndFees = async (marketInfos: MarketInfo[]) => {\n      if (this.user && this.serumOpenOrdersPromise) {\n        const owner = new Owner(this.user);\n        return getDepositAndFeeFromInstructions({\n          connection: this.connection,\n          feeCalculator: this.feeCalculator!,\n          instructionCache: this.instructionCache,\n          marketInfos: marketInfos,\n          serumOpenOrdersPromise: this.serumOpenOrdersPromise,\n          userPublicKey: owner.publicKey,\n          unwrapSOL: this.wrapUnwrapSOL,\n        });\n      }\n    };\n\n    // Platform fee can only be applied when fee account exists\n    const platformFeeBps = this.platformFeeAndAccounts.feeAccounts.get(\n      outputMint.toBase58()\n    )\n      ? this.platformFeeAndAccounts.feeBps\n      : 0;\n\n    const now = new Date().getTime();\n\n    // do sort so that it's always the same order for the same inputMint and outputMint and vice versa\n    const inputMintAndOutputMint = [inputMint.toBase58(), outputMint.toBase58()]\n      .sort((a, b) => a.localeCompare(b))\n      .join('');\n\n    const routeCache = this.routeCache.get(inputMintAndOutputMint);\n\n    const routes = computeRoutes(\n      inputMint,\n      outputMint,\n      this.tokenRouteSegments\n    );\n\n    if (routeCache) {\n      const { fetchTimestamp } = routeCache;\n      if (now - fetchTimestamp > this.routeCacheDuration) {\n        shouldFetchRoutes = true;\n      }\n    } else {\n      shouldFetchRoutes = true;\n    }\n\n    if (shouldFetchRoutes) {\n      await fetchRoutes(this.connection, routes);\n\n      this.routeCache.set(inputMintAndOutputMint, {\n        fetchTimestamp: new Date().getTime(),\n      });\n    }\n\n    try {\n      const routesInfos = computeRouteInfos({\n        routes,\n        amount: inputAmount,\n        inputMint,\n        outputMint,\n        getDepositAndFeeForRoute: getDepositAndFees,\n        slippage,\n        platformFeeBps,\n      });\n      return {\n        routesInfos,\n        /* indicate if the result is fetched or get from cache */\n        cached: !shouldFetchRoutes,\n      };\n    } catch (e) {\n      throw e;\n    } finally {\n      // clear cache if it is expired\n      this.routeCache.forEach(({ fetchTimestamp }, key) => {\n        if (fetchTimestamp - now > this.routeCacheDuration) {\n          this.routeCache.delete(key);\n        }\n      });\n    }\n  }\n\n  setUserPublicKey(userPublicKey: Keypair | PublicKey) {\n    this.user = userPublicKey;\n    const owner = new Owner(this.user);\n    this.serumOpenOrdersPromise = Jupiter.findSerumOpenOrdersForOwner({\n      connection: this.connection,\n      cluster: this.cluster,\n      userPublicKey: owner.publicKey,\n    });\n  }\n\n  /**\n   * The token route segments contains all the routes and the market meta information.\n   */\n  static async fetchTokenRouteSegments(\n    connection: Connection,\n    cluster: Cluster,\n    marketUrl?: string\n  ) {\n    const amms = await getAllAmms(connection, cluster, marketUrl);\n\n    const tokenRouteSegments = getTokenRouteSegments(amms);\n\n    return tokenRouteSegments;\n  }\n\n  /**\n   * This generate a routeMap which represents every possible output token mint for a given input token mint.\n   * For example, we have SOL to USDC and this pairs have many routings like\n   * SOL => USDT\n   * USDT => USDC\n   * SOL => USDC\n   *\n   * From here we know that we can have 2 different routing of SOL => USDC.\n   * We do single level routing map but for all coins which result in the route map below:\n   * SOL => USDT, USDC\n   * USDT => SOL\n   * USDC => SOL, USDT\n   *\n   * From this route map we can map out all possible route from one to another by checking the intersection.\n   */\n  getRouteMap() {\n    return computeRouteMap(this.tokenRouteSegments);\n  }\n\n  /**\n   * Query existing open order account, this query is slow.\n   * We suggest to fetch this in the background.\n  */\n  static findSerumOpenOrdersForOwner = async ({\n    userPublicKey,\n    cluster,\n    connection,\n  }: {\n    userPublicKey: PublicKey;\n    cluster: Cluster;\n    connection: Connection;\n  }) => {\n    const newMarketToOpenOrdersAddress: SerumOpenOrdersMap = new Map();\n\n    if (userPublicKey) {\n      const programId =\n        cluster === 'mainnet-beta'\n          ? MAINNET_SERUM_DEX_PROGRAM\n          : DEVNET_SERUM_DEX_PROGRAM;\n\n      const allOpenOrders = await OpenOrders.findForOwner(\n        connection,\n        userPublicKey,\n        programId\n      );\n\n      allOpenOrders.forEach((openOrders) => {\n        newMarketToOpenOrdersAddress.set(\n          openOrders.market.toString(),\n          openOrders.address\n        );\n      });\n    }\n    return newMarketToOpenOrdersAddress;\n  };\n\n  public exchange: (params: { route: RouteInfo }) => Promise<{\n    transactions: {\n      setupTransaction?: Transaction;\n      swapTransaction: Transaction;\n      cleanupTransaction?: Transaction;\n    };\n    execute: (params?: {\n      wallet?: Pick<\n        SignerWalletAdapter,\n        'sendTransaction' | 'signAllTransactions' | 'signTransaction'\n      >;\n      confirmationWaiterFactory?: (\n        txid: TransactionSignature,\n        totalTxs: number\n      ) => Promise<TransactionResponse | null>;\n    }) => Promise<SwapResult>;\n  }> = async ({ route }) => {\n    const { connection, serumOpenOrdersPromise } = this;\n    if (!this.user) {\n      throw new Error('user not found');\n    }\n    if (!serumOpenOrdersPromise) {\n      throw new Error('Serum open orders promise not found');\n    }\n\n    const owner = new Owner(this.user);\n\n    const inputMint = route.marketInfos[0].inputMint;\n    const outputMint =\n      route.marketInfos[route.marketInfos.length - 1].outputMint;\n\n    const cacheMint = getCacheMint(route.marketInfos);\n\n    let instructions = this.instructionCache\n      ?.get(owner.publicKey.toBase58())\n      ?.get(cacheMint);\n\n    if (!instructions) {\n      const [ataInstructions, openOrdersInstructions] = await Promise.all([\n        routeAtaInstructions(connection, route.marketInfos, owner.publicKey, this.wrapUnwrapSOL),\n        Promise.all(\n          route.marketInfos.map(async (marketInfo) => {\n            const amm = marketInfo.marketMeta.amm;\n            if (amm instanceof SerumAmm) {\n              return await getOrCreateOpenOrdersAddress(\n                connection,\n                owner.publicKey,\n                amm.market,\n                await serumOpenOrdersPromise\n              );\n            }\n            return;\n          })\n        ),\n      ]);\n\n      instructions = {\n        intermediate: ataInstructions.userIntermediaryTokenAccountResult,\n        destination: ataInstructions.userDestinationTokenAccountResult,\n        openOrders: openOrdersInstructions,\n      };\n    }\n\n    const sourceInstruction = inputMint.equals(WRAPPED_SOL_MINT) && this.wrapUnwrapSOL\n      ? await createAndCloseWSOLAccount(\n          connection,\n          owner.publicKey,\n          route.inAmount\n        )\n      : {\n          ...getEmptyInstruction(),\n          address: await Token.getAssociatedTokenAddress(\n            ASSOCIATED_TOKEN_PROGRAM_ID,\n            TOKEN_PROGRAM_ID,\n            inputMint,\n            owner.publicKey\n          ),\n        };\n\n    // Construct platform fee\n    const feeAccount = this.platformFeeAndAccounts.feeAccounts.get(\n      outputMint.toBase58()\n    );\n    const platformFee = feeAccount\n      ? { feeBps: this.platformFeeAndAccounts.feeBps, feeAccount }\n      : undefined;\n\n    const preparedInstructions = await routeToInstructions(\n      owner,\n      instructions.openOrders.map((oo) => oo?.address),\n      sourceInstruction.address,\n      instructions.intermediate?.address,\n      instructions.destination.address,\n      route,\n      platformFee\n    );\n\n    const splitSetupRequired = isSplitSetupRequired(route.marketInfos);\n\n    const setupTransactionBuilder = new TransactionBuilder(\n      connection,\n      owner.publicKey,\n      owner\n    );\n\n    const transactionBuilder = new TransactionBuilder(\n      connection,\n      owner.publicKey,\n      owner\n    );\n\n    const cleanupTransactionBuilder = new TransactionBuilder(\n      connection,\n      owner.publicKey,\n      owner\n    );\n\n    if (splitSetupRequired) {\n      if (instructions.openOrders) {\n        instructions.openOrders.forEach((openOrders) => {\n          if (openOrders) {\n            setupTransactionBuilder.addInstruction(openOrders);\n          }\n        });\n      }\n\n      if (instructions.intermediate) {\n        setupTransactionBuilder.addInstruction({\n          ...instructions.intermediate,\n          cleanupInstructions: [],\n        });\n      }\n\n      setupTransactionBuilder.addInstruction({\n        ...sourceInstruction,\n        cleanupInstructions: [],\n      });\n\n      cleanupTransactionBuilder\n        .addInstruction({\n          ...getEmptyInstruction(),\n          cleanupInstructions: sourceInstruction.cleanupInstructions,\n        })\n        .addInstruction({\n          ...getEmptyInstruction(),\n          cleanupInstructions:\n            instructions.intermediate?.cleanupInstructions ?? [],\n        });\n\n      // if source address the same as destination address, then we don't need to setup or cleanup twice, mainly SOL-SOL\n      if (!sourceInstruction.address.equals(instructions.destination.address)) {\n        setupTransactionBuilder.addInstruction({\n          ...instructions.destination,\n          cleanupInstructions: [],\n        });\n\n        cleanupTransactionBuilder.addInstruction({\n          ...getEmptyInstruction(),\n          cleanupInstructions: instructions.destination.cleanupInstructions,\n        });\n      }\n    } else {\n      if (instructions.openOrders) {\n        instructions.openOrders.forEach((openOrders) => {\n          if (openOrders) {\n            transactionBuilder.addInstruction(openOrders);\n          }\n        });\n      }\n\n      if (instructions.intermediate) {\n        transactionBuilder.addInstruction(instructions.intermediate);\n      }\n\n      transactionBuilder.addInstruction(sourceInstruction);\n\n      // if source address the same as destination address, then we don't need to setup or cleanup twice, mainly SOL-SOL\n      if (!sourceInstruction.address.equals(instructions.destination.address)) {\n        transactionBuilder.addInstruction(instructions.destination);\n      }\n    }\n\n    transactionBuilder.addInstruction(preparedInstructions);\n\n    const recentBlockHash = (\n      await this.connection.getRecentBlockhash('singleGossip')\n    ).blockhash;\n\n    const { transaction: setupTransaction } =\n      await setupTransactionBuilder.build(recentBlockHash);\n\n    const { transaction } = await transactionBuilder.build(recentBlockHash);\n\n    const { transaction: cleanupTransaction } =\n      await cleanupTransactionBuilder.build(recentBlockHash);\n\n    // Is this horrible? Yes.\n    const [\n      setupTransactionObject,\n      swapTransactionObject,\n      cleanupTransactionObject,\n    ] = ((): [\n      one: Transaction | undefined,\n      two: Transaction,\n      three: Transaction | undefined\n    ] => {\n      if (\n        setupTransaction.instructions.length &&\n        cleanupTransaction.instructions.length\n      ) {\n        return [setupTransaction, transaction, cleanupTransaction] as [\n          one: Transaction | undefined,\n          two: Transaction,\n          three: Transaction | undefined\n        ];\n      } else if (setupTransaction.instructions.length) {\n        const [first, second] = [setupTransaction, transaction];\n\n        return [first, second, undefined];\n      } else if (cleanupTransaction.instructions.length) {\n        const [second, third] = [transaction, cleanupTransaction];\n\n        return [undefined, second, third];\n      } else {\n        return [undefined, transaction, undefined];\n      }\n    })();\n\n    return {\n      transactions: {\n        setupTransaction: setupTransactionObject,\n        swapTransaction: swapTransactionObject,\n        cleanupTransaction: cleanupTransactionObject,\n      },\n      execute: async ({\n        wallet,\n        confirmationWaiterFactory,\n      }: {\n        wallet?: Pick<\n          SignerWalletAdapter,\n          'sendTransaction' | 'signAllTransactions' | 'signTransaction'\n        >;\n        confirmationWaiterFactory?: (\n          txid: TransactionSignature,\n          totalTxs: number\n        ) => Promise<TransactionResponse | null>;\n      } = {}) => {\n        let txid: TransactionSignature = '';\n        try {\n          const transactions = [\n            setupTransactionObject,\n            swapTransactionObject,\n            cleanupTransactionObject,\n          ].filter(Boolean) as Transaction[];\n\n          const totalTxs = transactions.length;\n\n          if (owner.isKeyPair && owner.signer) {\n            transactions.forEach((transaction) => {\n              transaction.sign(owner.signer!);\n            });\n          } else {\n            if (!wallet) {\n              throw new Error('Signer wallet not found');\n            }\n            if (totalTxs > 1) {\n              await wallet.signAllTransactions(transactions);\n            } else {\n              await wallet.signTransaction(transactions[0]);\n            }\n          }\n\n          let setupError;\n\n          if (setupTransactionObject) {\n            try {\n              const setupTxid = await connection.sendRawTransaction(\n                setupTransactionObject.serialize(),\n                {\n                  skipPreflight: true,\n                }\n              );\n\n              if (confirmationWaiterFactory) {\n                await confirmationWaiterFactory(setupTxid, totalTxs);\n              } else {\n                await getConfirmTransaction(connection, setupTxid);\n              }\n            } catch (e) {\n              setupError = e;\n              throw setupError;\n            }\n          }\n\n          try {\n            const txid = await connection.sendRawTransaction(\n              swapTransactionObject.serialize(),\n              {\n                skipPreflight: true,\n              }\n            );\n\n            let transactionResponse: TransactionResponse | null = null;\n            if (confirmationWaiterFactory) {\n              transactionResponse = await confirmationWaiterFactory(\n                txid,\n                totalTxs\n              );\n            }\n\n            if (!transactionResponse) {\n              transactionResponse = await getConfirmTransaction(\n                connection,\n                txid\n              );\n            }\n\n            const [sourceTokenBalanceChange, destinationTokenBalanceChange] =\n              getTokenBalanceChangesFromTransactionResponse(\n                inputMint,\n                outputMint,\n                sourceInstruction.address,\n                instructions!.destination.address,\n                transactionResponse\n              );\n\n            return {\n              txid,\n              inputAddress: sourceInstruction.address,\n              outputAddress: instructions!.destination.address,\n              inputAmount: sourceTokenBalanceChange,\n              outputAmount: destinationTokenBalanceChange,\n            };\n          } catch (e) {\n            throw e;\n          } finally {\n            if (cleanupTransactionObject && !setupError) {\n              const cleanupTxId = await connection.sendRawTransaction(\n                cleanupTransactionObject.serialize(),\n                {\n                  skipPreflight: true,\n                }\n              );\n              await confirmationWaiterFactory?.(cleanupTxId, totalTxs);\n            }\n          }\n        } catch (e) {\n          const transactionError = e as TransactionError;\n          if (txid) {\n            transactionError.txid = txid;\n          }\n\n          return {\n            error: transactionError,\n          };\n        } finally {\n          const hasOpenOrders = instructions?.openOrders.some(\n            (oo) => oo?.instructions.length\n          );\n          if (\n            hasOpenOrders ||\n            instructions?.intermediate?.instructions.length ||\n            instructions?.destination.instructions.length\n          ) {\n            this.instructionCache\n              .get(owner.publicKey.toBase58())\n              ?.delete(cacheMint);\n          }\n          this.routeCache.clear();\n        }\n      },\n    };\n  };\n\n  static createCreateTokenLedgerInstruction =\n    createCreateTokenLedgerInstruction;\n  static createOpenOrdersInstruction = createOpenOrdersInstruction;\n  static createRaydiumSwapInstruction = createRaydiumSwapInstruction;\n  static createMercurialExchangeInstruction =\n    createMercurialExchangeInstruction;\n  static createSerumSwapInstruction = createSerumSwapInstruction;\n  static createSetTokenLedgerInstruction = createSetTokenLedgerInstruction;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nvar buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nvar Layout = /** @class */ (function () {\n    function Layout(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    Layout.prototype.makeDestinationObject = function () {\n        return {};\n    };\n    /**\n     * Decode from a Uint8Array into a JavaScript value.\n     *\n     * @param {Uint8Array} b - the buffer from which encoded data is read.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {(Number|Array|Object)} - the value of the decoded data.\n     *\n     * @abstract\n     */\n    Layout.prototype.decode = function (b, offset) {\n        throw new Error('Layout is abstract');\n    };\n    /**\n     * Encode a JavaScript value into a Uint8Array.\n     *\n     * @param {(Number|Array|Object)} src - the value to be encoded into\n     * the buffer.  The type accepted depends on the (sub-)type of {@link\n     * Layout}.\n     *\n     * @param {Uint8Array} b - the buffer into which encoded data will be\n     * written.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {Number} - the number of bytes encoded, including the\n     * space skipped for internal padding, but excluding data such as\n     * {@link Sequence#count|lengths} when stored {@link\n     * ExternalLayout|externally}.  This is the adjustment to `offset`\n     * producing the offset where data for the next layout would be\n     * written.\n     *\n     * @abstract\n     */\n    Layout.prototype.encode = function (src, b, offset) {\n        throw new Error('Layout is abstract');\n    };\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    Layout.prototype.getSpan = function (b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    };\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    Layout.prototype.replicate = function (property) {\n        var rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    };\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    Layout.prototype.fromArray = function (values) {\n        return undefined;\n    };\n    return Layout;\n}());\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (function () { return new Class(); });\n    Object.defineProperty(Class.prototype, 'encode', {\n        value: function (b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true\n    });\n    Object.defineProperty(Class, 'decode', {\n        value: function (b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nvar ExternalLayout = /** @class */ (function (_super) {\n    __extends(ExternalLayout, _super);\n    function ExternalLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    ExternalLayout.prototype.isCount = function () {\n        throw new Error('ExternalLayout is abstract');\n    };\n    return ExternalLayout;\n}(Layout));\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nvar GreedyCount = /** @class */ (function (_super) {\n    __extends(GreedyCount, _super);\n    function GreedyCount(elementSpan, property) {\n        var _this = this;\n        if (undefined === elementSpan) {\n            elementSpan = 1;\n        }\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        _this = _super.call(this, -1, property) || this;\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        _this.elementSpan = elementSpan;\n        return _this;\n    }\n    /** @override */\n    GreedyCount.prototype.isCount = function () {\n        return true;\n    };\n    /** @override */\n    GreedyCount.prototype.decode = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    };\n    /** @override */\n    GreedyCount.prototype.encode = function (src, b, offset) {\n        return 0;\n    };\n    return GreedyCount;\n}(ExternalLayout));\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nvar OffsetLayout = /** @class */ (function (_super) {\n    __extends(OffsetLayout, _super);\n    function OffsetLayout(layout, offset, property) {\n        var _this = this;\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        else if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        _this = _super.call(this, layout.span, property || layout.property) || this;\n        /** The subordinated layout. */\n        _this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        _this.offset = offset;\n        return _this;\n    }\n    /** @override */\n    OffsetLayout.prototype.isCount = function () {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    };\n    /** @override */\n    OffsetLayout.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return this.layout.decode(b, offset + this.offset);\n    };\n    /** @override */\n    OffsetLayout.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return this.layout.encode(src, b, offset + this.offset);\n    };\n    return OffsetLayout;\n}(ExternalLayout));\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UInt = /** @class */ (function (_super) {\n    __extends(UInt, _super);\n    function UInt(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    UInt.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    };\n    /** @override */\n    UInt.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    };\n    return UInt;\n}(Layout));\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UIntBE = /** @class */ (function (_super) {\n    __extends(UIntBE, _super);\n    function UIntBE(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    UIntBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    };\n    /** @override */\n    UIntBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    };\n    return UIntBE;\n}(Layout));\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Int = /** @class */ (function (_super) {\n    __extends(Int, _super);\n    function Int(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    Int.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    };\n    /** @override */\n    Int.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    };\n    return Int;\n}(Layout));\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar IntBE = /** @class */ (function (_super) {\n    __extends(IntBE, _super);\n    function IntBE(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    IntBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    };\n    /** @override */\n    IntBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    };\n    return IntBE;\n}(Layout));\nexports.IntBE = IntBE;\nvar V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    var hi32 = Math.floor(src / V2E32);\n    var lo32 = src - (hi32 * V2E32);\n    return { hi32: hi32, lo32: lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearUInt64 = /** @class */ (function (_super) {\n    __extends(NearUInt64, _super);\n    function NearUInt64(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearUInt64.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var lo32 = buffer.readUInt32LE(offset);\n        var hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearUInt64.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    };\n    return NearUInt64;\n}(Layout));\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearUInt64BE = /** @class */ (function (_super) {\n    __extends(NearUInt64BE, _super);\n    function NearUInt64BE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearUInt64BE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var hi32 = buffer.readUInt32BE(offset);\n        var lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearUInt64BE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    };\n    return NearUInt64BE;\n}(Layout));\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearInt64 = /** @class */ (function (_super) {\n    __extends(NearInt64, _super);\n    function NearInt64(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearInt64.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var lo32 = buffer.readUInt32LE(offset);\n        var hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearInt64.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    };\n    return NearInt64;\n}(Layout));\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearInt64BE = /** @class */ (function (_super) {\n    __extends(NearInt64BE, _super);\n    function NearInt64BE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearInt64BE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var hi32 = buffer.readInt32BE(offset);\n        var lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearInt64BE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    };\n    return NearInt64BE;\n}(Layout));\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Float = /** @class */ (function (_super) {\n    __extends(Float, _super);\n    function Float(property) {\n        return _super.call(this, 4, property) || this;\n    }\n    /** @override */\n    Float.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    };\n    /** @override */\n    Float.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    };\n    return Float;\n}(Layout));\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar FloatBE = /** @class */ (function (_super) {\n    __extends(FloatBE, _super);\n    function FloatBE(property) {\n        return _super.call(this, 4, property) || this;\n    }\n    /** @override */\n    FloatBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    };\n    /** @override */\n    FloatBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    };\n    return FloatBE;\n}(Layout));\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Double = /** @class */ (function (_super) {\n    __extends(Double, _super);\n    function Double(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    Double.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    };\n    /** @override */\n    Double.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    };\n    return Double;\n}(Layout));\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar DoubleBE = /** @class */ (function (_super) {\n    __extends(DoubleBE, _super);\n    function DoubleBE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    DoubleBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    };\n    /** @override */\n    DoubleBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    };\n    return DoubleBE;\n}(Layout));\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Sequence = /** @class */ (function (_super) {\n    __extends(Sequence, _super);\n    function Sequence(elementLayout, count, property) {\n        var _this = this;\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        var span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The layout for individual elements of the sequence. */\n        _this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        _this.count = count;\n        return _this;\n    }\n    /** @override */\n    Sequence.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = 0;\n        var count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            var idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    };\n    /** @override */\n    Sequence.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var rv = [];\n        var i = 0;\n        var count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    Sequence.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var elo = this.elementLayout;\n        var span = src.reduce(function (span, v) {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    };\n    return Sequence;\n}(Layout));\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nvar Structure = /** @class */ (function (_super) {\n    __extends(Structure, _super);\n    function Structure(fields, property, decodePrefixes) {\n        var _this = this;\n        if (!(Array.isArray(fields)\n            && fields.reduce(function (acc, v) { return acc && (v instanceof Layout); }, true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var fd = fields_1[_i];\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        var span = -1;\n        try {\n            span = fields.reduce(function (span, fd) { return span + fd.getSpan(); }, 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        _this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        _this.decodePrefixes = !!decodePrefixes;\n        return _this;\n    }\n    /** @override */\n    Structure.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = 0;\n        try {\n            span = this.fields.reduce(function (span, fd) {\n                var fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    };\n    /** @override */\n    Structure.prototype.decode = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var dest = this.makeDestinationObject();\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    Structure.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var firstOffset = offset;\n        var lastOffset = 0;\n        var lastWrote = 0;\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            var span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                var fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    };\n    /** @override */\n    Structure.prototype.fromArray = function (values) {\n        var dest = this.makeDestinationObject();\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    };\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    Structure.prototype.layoutFor = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    Structure.prototype.offsetOf = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        var offset = 0;\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    };\n    return Structure;\n}(Layout));\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nvar UnionDiscriminator = /** @class */ (function () {\n    function UnionDiscriminator(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    UnionDiscriminator.prototype.decode = function (b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    };\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    UnionDiscriminator.prototype.encode = function (src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    };\n    return UnionDiscriminator;\n}());\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nvar UnionLayoutDiscriminator = /** @class */ (function (_super) {\n    __extends(UnionLayoutDiscriminator, _super);\n    function UnionLayoutDiscriminator(layout, property) {\n        var _this = this;\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        _this = _super.call(this, property || layout.property || 'variant') || this;\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        _this.layout = layout;\n        return _this;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    UnionLayoutDiscriminator.prototype.decode = function (b, offset) {\n        return this.layout.decode(b, offset);\n    };\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    UnionLayoutDiscriminator.prototype.encode = function (src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    };\n    return UnionLayoutDiscriminator;\n}(UnionDiscriminator));\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Union = /** @class */ (function (_super) {\n    __extends(Union, _super);\n    function Union(discr, defaultLayout, property) {\n        var _this = this;\n        var upv = ((discr instanceof UInt)\n            || (discr instanceof UIntBE));\n        var discriminator;\n        if (upv) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        var span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && upv) {\n                span += discriminator.layout.span;\n            }\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        _this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        _this.usesPrefixDiscriminator = upv;\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        _this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        _this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        var boundGetSourceVariant = _this.defaultGetSourceVariant.bind(_this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        _this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        _this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n        return _this;\n    }\n    /** @override */\n    Union.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        var vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    };\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    Union.prototype.defaultGetSourceVariant = function (src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            var vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (var tag in this.registry) {\n                var vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    };\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    Union.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var dest;\n        var dlo = this.discriminator;\n        var discr = dlo.decode(b, offset);\n        var clo = this.registry[discr];\n        if (undefined === clo) {\n            var defaultLayout = this.defaultLayout;\n            var contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    Union.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            var dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            var clo = this.defaultLayout;\n            var contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    };\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    Union.prototype.addVariant = function (variant, layout, property) {\n        var rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    };\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    Union.prototype.getVariant = function (vb, offset) {\n        var variant;\n        if (vb instanceof Uint8Array) {\n            if (undefined === offset) {\n                offset = 0;\n            }\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    };\n    return Union;\n}(Layout));\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nvar VariantLayout = /** @class */ (function (_super) {\n    __extends(VariantLayout, _super);\n    function VariantLayout(union, variant, layout, property) {\n        var _this = this;\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        var span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The {@link Union} to which this variant belongs. */\n        _this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        _this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        _this.layout = layout || null;\n        return _this;\n    }\n    /** @override */\n    VariantLayout.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        var span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    };\n    /** @override */\n    VariantLayout.prototype.decode = function (b, offset) {\n        var dest = this.makeDestinationObject();\n        if (undefined === offset) {\n            offset = 0;\n        }\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        // VariantLayout property is never undefined\n        var property = this.property;\n        if (this.layout) {\n            dest[property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (property) {\n            dest[property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    };\n    /** @override */\n    VariantLayout.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        // VariantLayout property is never undefined\n        var property = this.property;\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, property))) {\n            throw new TypeError('variant lacks property ' + property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        var span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    };\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    VariantLayout.prototype.fromArray = function (values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    };\n    return VariantLayout;\n}(Layout));\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar BitStructure = /** @class */ (function (_super) {\n    __extends(BitStructure, _super);\n    function BitStructure(word, msb, property) {\n        var _this = this;\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        _this = _super.call(this, word.span, property) || this;\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        _this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        _this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        _this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        var value = 0;\n        _this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        _this._packedGetValue = function () {\n            return value;\n        };\n        return _this;\n    }\n    /** @override */\n    BitStructure.prototype.decode = function (b, offset) {\n        var dest = this.makeDestinationObject();\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(value);\n            }\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    BitStructure.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                var fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    };\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    BitStructure.prototype.addField = function (bits, property) {\n        var bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    };\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    BitStructure.prototype.addBoolean = function (property) {\n        // This is my Boolean, not the Javascript one.\n        // eslint-disable-next-line no-new-wrappers\n        var bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    };\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    BitStructure.prototype.fieldFor = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    };\n    return BitStructure;\n}(Layout));\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nvar BitField = /** @class */ (function () {\n    function BitField(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        var totalBits = 8 * container.span;\n        var usedBits = container.fields.reduce(function (sum, fd) { return sum + fd.bits; }, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    BitField.prototype.decode = function (b, offset) {\n        var word = this.container._packedGetValue();\n        var wordValue = fixBitwiseResult(word & this.wordMask);\n        var value = wordValue >>> this.start;\n        return value;\n    };\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    BitField.prototype.encode = function (value) {\n        if ((!Number.isInteger(value))\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        var word = this.container._packedGetValue();\n        var wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    };\n    return BitField;\n}());\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nvar Boolean = /** @class */ (function (_super) {\n    __extends(Boolean, _super);\n    function Boolean(container, property) {\n        return _super.call(this, container, 1, property) || this;\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    Boolean.prototype.decode = function (b, offset) {\n        return !!BitField.prototype.decode.call(this, b, offset);\n    };\n    /** @override */\n    Boolean.prototype.encode = function (value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        return BitField.prototype.encode.call(this, value);\n    };\n    return Boolean;\n}(BitField));\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Blob = /** @class */ (function (_super) {\n    __extends(Blob, _super);\n    function Blob(length, property) {\n        var _this = this;\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        var span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        _this.length = length;\n        return _this;\n    }\n    /** @override */\n    Blob.prototype.getSpan = function (b, offset) {\n        var span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    };\n    /** @override */\n    Blob.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    Blob.prototype.encode = function (src, b, offset) {\n        var span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        var srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    };\n    return Blob;\n}(Layout));\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar CString = /** @class */ (function (_super) {\n    __extends(CString, _super);\n    function CString(property) {\n        return _super.call(this, -1, property) || this;\n    }\n    /** @override */\n    CString.prototype.getSpan = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    };\n    /** @override */\n    CString.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    };\n    /** @override */\n    CString.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = src.toString();\n        }\n        var srcb = buffer_1.Buffer.from(src, 'utf8');\n        var span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    };\n    return CString;\n}(Layout));\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UTF8 = /** @class */ (function (_super) {\n    __extends(UTF8, _super);\n    function UTF8(maxSpan, property) {\n        var _this = this;\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        _this = _super.call(this, -1, property) || this;\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        _this.maxSpan = maxSpan;\n        return _this;\n    }\n    /** @override */\n    UTF8.prototype.getSpan = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return b.length - offset;\n    };\n    /** @override */\n    UTF8.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    };\n    /** @override */\n    UTF8.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = src.toString();\n        }\n        var srcb = buffer_1.Buffer.from(src, 'utf8');\n        var span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    };\n    return UTF8;\n}(Layout));\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Constant = /** @class */ (function (_super) {\n    __extends(Constant, _super);\n    function Constant(value, property) {\n        var _this = _super.call(this, 0, property) || this;\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        _this.value = value;\n        return _this;\n    }\n    /** @override */\n    Constant.prototype.decode = function (b, offset) {\n        return this.value;\n    };\n    /** @override */\n    Constant.prototype.encode = function (src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    };\n    return Constant;\n}(Layout));\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = (function (elementSpan, property) { return new GreedyCount(elementSpan, property); });\n/** Factory for {@link OffsetLayout}. */\nexports.offset = (function (layout, offset, property) { return new OffsetLayout(layout, offset, property); });\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (function (property) { return new UInt(1, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (function (property) { return new UInt(2, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (function (property) { return new UInt(3, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (function (property) { return new UInt(4, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (function (property) { return new UInt(5, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (function (property) { return new UInt(6, property); });\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (function (property) { return new NearUInt64(property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (function (property) { return new UIntBE(2, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (function (property) { return new UIntBE(3, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (function (property) { return new UIntBE(4, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (function (property) { return new UIntBE(5, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (function (property) { return new UIntBE(6, property); });\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (function (property) { return new NearUInt64BE(property); });\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (function (property) { return new Int(1, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (function (property) { return new Int(2, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (function (property) { return new Int(3, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (function (property) { return new Int(4, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (function (property) { return new Int(5, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (function (property) { return new Int(6, property); });\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (function (property) { return new NearInt64(property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (function (property) { return new IntBE(2, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (function (property) { return new IntBE(3, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (function (property) { return new IntBE(4, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (function (property) { return new IntBE(5, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (function (property) { return new IntBE(6, property); });\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (function (property) { return new NearInt64BE(property); });\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (function (property) { return new Float(property); });\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (function (property) { return new FloatBE(property); });\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (function (property) { return new Double(property); });\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (function (property) { return new DoubleBE(property); });\n/** Factory for {@link Structure} values. */\nexports.struct = (function (fields, property, decodePrefixes) {\n    return new Structure(fields, property, decodePrefixes);\n});\n/** Factory for {@link BitStructure} values. */\nexports.bits = (function (word, msb, property) { return new BitStructure(word, msb, property); });\n/** Factory for {@link Sequence} values. */\nexports.seq = (function (elementLayout, count, property) {\n    return new Sequence(elementLayout, count, property);\n});\n/** Factory for {@link Union} values. */\nexports.union = (function (discr, defaultLayout, property) {\n    return new Union(discr, defaultLayout, property);\n});\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = (function (layout, property) { return new UnionLayoutDiscriminator(layout, property); });\n/** Factory for {@link Blob} values. */\nexports.blob = (function (length, property) { return new Blob(length, property); });\n/** Factory for {@link CString} values. */\nexports.cstr = (function (property) { return new CString(property); });\n/** Factory for {@link UTF8} values. */\nexports.utf8 = (function (maxSpan, property) { return new UTF8(maxSpan, property); });\n/** Factory for {@link Constant} values. */\nexports.constant = (function (value, property) { return new Constant(value, property); });\n//# sourceMappingURL=Layout.js.map","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./react-hook.cjs.production.min.js')\n} else {\n  module.exports = require('./react-hook.cjs.development.js')\n}\n","export const Errors = {\n  INITIALIZE_ERROR: 'INITIALIZE_ERROR' as 'INITIALIZE_ERROR',\n  ROUTES_ERROR: 'ROUTES_ERROR' as 'ROUTES_ERROR',\n};\n","import React, {\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  createContext,\n  useContext,\n} from 'react';\nimport {\n  Connection,\n  PublicKey,\n  TransactionResponse,\n  Cluster,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport { Errors } from './error';\nimport type { SignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport useDebounce from './utils/useDebounce';\nimport {\n  RouteInfo,\n  Jupiter,\n  SwapResult,\n  TOKEN_LIST_URL,\n  MARKETS_URL,\n  TransactionFeeInfo,\n  getRouteInfoUniqueId,\n  PlatformFeeAndAccounts,\n} from '@jup-ag/core';\n\nexport type JupiterError = typeof Errors[keyof typeof Errors];\n\ninterface UseJupiterResult {\n  /** routes that are possible, sorted decending based on outAmount */\n  routes?: RouteInfo[];\n  /** exchange function to submit transaction */\n  exchange: (params: {\n    wallet: Pick<\n      SignerWalletAdapter,\n      | 'signAllTransactions'\n      | 'publicKey'\n      | 'sendTransaction'\n      | 'signTransaction'\n    >;\n    route: RouteInfo;\n    /** a confirmation waiter factory to make a confirmation waiter for each transaction */\n    confirmationWaiterFactory: (\n      txid: TransactionSignature,\n      totalTxs: number\n    ) => Promise<TransactionResponse | null>;\n  }) => Promise<SwapResult>;\n  /** refresh function to refetch the prices */\n  refresh: () => void;\n  /** last refresh timestamp */\n  lastRefreshTimestamp: number;\n  /** all possible token mints to be chosen from */\n  allTokenMints: string[];\n  /** route map input mint with output mints */\n  routeMap: Map<string, string[]>;\n  /** loading state */\n  loading: boolean;\n  error: JupiterError | undefined;\n}\n\ninterface JupiterProps {\n  connection: Connection;\n  cluster: Cluster;\n  userPublicKey?: PublicKey;\n  platformFeeAndAccounts?: PlatformFeeAndAccounts;\n  routeCacheDuration?: number;\n  /* custom jupiter market url */\n  marketUrl?: string;\n}\n\nconst JupiterContext = createContext<\n  | (Pick<UseJupiterResult, 'allTokenMints' | 'routeMap'> & {\n      connection: Connection;\n      cluster: string;\n      jupiter: Jupiter | undefined;\n      error: JupiterError | undefined;\n      setError: (error?: JupiterError) => void;\n    })\n  | null\n>(null);\n\nexport const JupiterProvider: React.FC<JupiterProps> = ({\n  connection,\n  cluster,\n  userPublicKey,\n  children,\n  platformFeeAndAccounts,\n  routeCacheDuration,\n  marketUrl,\n}) => {\n  const [jupiter, setJupiter] = useState<Jupiter>();\n\n  const [error, setError] = useState<JupiterError>();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const _jupiter = await Jupiter.load({\n          connection,\n          cluster,\n          user: userPublicKey,\n          platformFeeAndAccounts,\n          routeCacheDuration,\n          marketUrl,\n        });\n\n        setJupiter(_jupiter);\n      } catch (e) {\n        setError(Errors.INITIALIZE_ERROR);\n        throw e;\n      }\n    })();\n  }, [connection, cluster]);\n\n  useEffect(() => {\n    if (jupiter && userPublicKey) {\n      jupiter.setUserPublicKey(userPublicKey);\n    }\n  }, [jupiter, userPublicKey]);\n\n  const routeMap = useMemo(() => {\n    let routeMap = new Map<string, string[]>();\n\n    if (jupiter) {\n      routeMap = jupiter.getRouteMap();\n    }\n    return routeMap;\n  }, [jupiter]);\n\n  const allTokenMints = useMemo(() => {\n    return Array.from(routeMap.keys());\n  }, [routeMap]);\n\n  return (\n    <JupiterContext.Provider\n      value={{\n        jupiter,\n        allTokenMints,\n        connection,\n        cluster,\n        routeMap,\n        error,\n        setError,\n      }}\n    >\n      {children}\n    </JupiterContext.Provider>\n  );\n};\n\ninterface UseJupiterProps {\n  amount: number;\n  inputMint: PublicKey | undefined;\n  outputMint: PublicKey | undefined;\n  slippage: number;\n  /* inputAmount is being debounced, debounceTime 0 to disable debounce */\n  debounceTime?: number;\n}\n\nexport const useJupiterRouteMap = () => {\n  const context = useContext(JupiterContext);\n  if (!context) {\n    throw new Error('JupiterProvider is required');\n  }\n  return context.routeMap;\n};\n\nexport const useJupiter = ({\n  amount,\n  inputMint,\n  outputMint,\n  slippage,\n  debounceTime = 250,\n}: UseJupiterProps): UseJupiterResult => {\n  const context = useContext(JupiterContext);\n  const [loading, setLoading] = useState(true);\n  const [routes, setRoutes] = useState<RouteInfo[]>();\n  const [refreshCount, setRefreshCount] = useState<number>(0);\n  // lastRefreshCount indicate when the last refresh was triggered on which refreshCount\n  const lastRefreshCount = useRef<number>(refreshCount);\n\n  const debouncedAmount = useDebounce(amount, debounceTime);\n\n  const lastRefreshTimestamp = useRef<number>(new Date().getTime());\n  const lastQueryTimestamp = useRef<number>(new Date().getTime());\n\n  if (!context) {\n    throw new Error('JupiterProvider is required');\n  }\n\n  const { routeMap, allTokenMints, jupiter, error, setError } = context;\n\n  // lastRefreshCount to determine when the last refresh was triggered, reset this to -1 to trigger a re-fetch\n  useEffect(() => {\n    lastRefreshCount.current = -1;\n  }, [[inputMint?.toString(), outputMint?.toString()].sort().join('-')]);\n\n  useEffect(() => {\n    // don't set loading if there is no input amount\n    if (\n      amount &&\n      debouncedAmount &&\n      refreshCount !== lastRefreshCount.current\n    ) {\n      setLoading(true);\n    }\n  }, [refreshCount, lastRefreshCount.current, debouncedAmount, slippage]);\n\n  useEffect(() => {\n    if (!jupiter) {\n      return;\n    }\n\n    if (!debouncedAmount || error === Errors.INITIALIZE_ERROR) {\n      setRoutes(undefined);\n      setLoading(false);\n    } else if (debouncedAmount) {\n      if (!inputMint || !outputMint || !routeMap) return;\n      let lastUpdatedTime = new Date().getTime();\n      lastQueryTimestamp.current = lastUpdatedTime;\n\n      jupiter\n        .computeRoutes(\n          inputMint,\n          outputMint,\n          debouncedAmount,\n          slippage,\n          loading\n        )\n        .then(({ routesInfos, cached }) => {\n          if (lastQueryTimestamp.current !== lastUpdatedTime) {\n            return;\n          }\n          setRoutes(routesInfos);\n          setError(undefined);\n\n          if (!cached) {\n            lastRefreshTimestamp.current = new Date().getTime();\n          }\n        })\n        .catch(() => {\n          if (lastQueryTimestamp.current !== lastUpdatedTime) {\n            return;\n          }\n          // Clear routes when erring to avoid bad pricing\n          setRoutes(undefined);\n          setError(Errors.ROUTES_ERROR);\n        })\n        .finally(() => {\n          if (lastQueryTimestamp.current !== lastUpdatedTime) {\n            return;\n          }\n          lastRefreshCount.current = refreshCount;\n          setLoading(false);\n        });\n    }\n  }, [loading, jupiter, debouncedAmount, inputMint, outputMint, slippage]);\n\n  const exchange: UseJupiterResult['exchange'] = useCallback(\n    async ({\n      wallet,\n      route,\n      confirmationWaiterFactory,\n    }): Promise<SwapResult> => {\n      if (error) {\n        throw new Error(error);\n      }\n\n      if (!jupiter) {\n        throw new Error('Jupiter not initialized');\n      }\n\n      if (!wallet?.publicKey) {\n        throw new Error('Wallet not connected');\n      }\n\n      if (!route) {\n        throw new Error('Invalid state, impossible to build transaction');\n      }\n\n      const { execute } = await jupiter.exchange({ route });\n\n      const result = await execute({ wallet, confirmationWaiterFactory });\n\n      return result;\n    },\n    [jupiter]\n  );\n\n  return {\n    allTokenMints,\n    routeMap,\n    exchange,\n    refresh: () => {\n      if (!loading) {\n        setRefreshCount((refreshCount) => refreshCount + 1);\n      }\n    },\n    lastRefreshTimestamp: lastRefreshTimestamp.current,\n    loading,\n    routes,\n    error,\n  };\n};\n\nexport {\n  RouteInfo,\n  getRouteInfoUniqueId,\n  TOKEN_LIST_URL,\n  MARKETS_URL,\n  Errors,\n  TransactionFeeInfo,\n};\n","import { useEffect, useState } from 'react';\n\nexport default function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInstructionErrorResponse = exports.KNOWN_PROGRAMS = exports.DexError = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nconst token_instructions_1 = require(\"./token-instructions\");\nvar DexError;\n(function (DexError) {\n    DexError[DexError[\"InvalidMarketFlags\"] = 0] = \"InvalidMarketFlags\";\n    DexError[DexError[\"InvalidAskFlags\"] = 1] = \"InvalidAskFlags\";\n    DexError[DexError[\"InvalidBidFlags\"] = 2] = \"InvalidBidFlags\";\n    DexError[DexError[\"InvalidQueueLength\"] = 3] = \"InvalidQueueLength\";\n    DexError[DexError[\"OwnerAccountNotProvided\"] = 4] = \"OwnerAccountNotProvided\";\n    DexError[DexError[\"ConsumeEventsQueueFailure\"] = 5] = \"ConsumeEventsQueueFailure\";\n    DexError[DexError[\"WrongCoinVault\"] = 6] = \"WrongCoinVault\";\n    DexError[DexError[\"WrongPcVault\"] = 7] = \"WrongPcVault\";\n    DexError[DexError[\"WrongCoinMint\"] = 8] = \"WrongCoinMint\";\n    DexError[DexError[\"WrongPcMint\"] = 9] = \"WrongPcMint\";\n    DexError[DexError[\"CoinVaultProgramId\"] = 10] = \"CoinVaultProgramId\";\n    DexError[DexError[\"PcVaultProgramId\"] = 11] = \"PcVaultProgramId\";\n    DexError[DexError[\"CoinMintProgramId\"] = 12] = \"CoinMintProgramId\";\n    DexError[DexError[\"PcMintProgramId\"] = 13] = \"PcMintProgramId\";\n    DexError[DexError[\"WrongCoinMintSize\"] = 14] = \"WrongCoinMintSize\";\n    DexError[DexError[\"WrongPcMintSize\"] = 15] = \"WrongPcMintSize\";\n    DexError[DexError[\"WrongCoinVaultSize\"] = 16] = \"WrongCoinVaultSize\";\n    DexError[DexError[\"WrongPcVaultSize\"] = 17] = \"WrongPcVaultSize\";\n    DexError[DexError[\"UninitializedVault\"] = 18] = \"UninitializedVault\";\n    DexError[DexError[\"UninitializedMint\"] = 19] = \"UninitializedMint\";\n    DexError[DexError[\"CoinMintUninitialized\"] = 20] = \"CoinMintUninitialized\";\n    DexError[DexError[\"PcMintUninitialized\"] = 21] = \"PcMintUninitialized\";\n    DexError[DexError[\"WrongMint\"] = 22] = \"WrongMint\";\n    DexError[DexError[\"WrongVaultOwner\"] = 23] = \"WrongVaultOwner\";\n    DexError[DexError[\"VaultHasDelegate\"] = 24] = \"VaultHasDelegate\";\n    DexError[DexError[\"AlreadyInitialized\"] = 25] = \"AlreadyInitialized\";\n    DexError[DexError[\"WrongAccountDataAlignment\"] = 26] = \"WrongAccountDataAlignment\";\n    DexError[DexError[\"WrongAccountDataPaddingLength\"] = 27] = \"WrongAccountDataPaddingLength\";\n    DexError[DexError[\"WrongAccountHeadPadding\"] = 28] = \"WrongAccountHeadPadding\";\n    DexError[DexError[\"WrongAccountTailPadding\"] = 29] = \"WrongAccountTailPadding\";\n    DexError[DexError[\"RequestQueueEmpty\"] = 30] = \"RequestQueueEmpty\";\n    DexError[DexError[\"EventQueueTooSmall\"] = 31] = \"EventQueueTooSmall\";\n    DexError[DexError[\"SlabTooSmall\"] = 32] = \"SlabTooSmall\";\n    DexError[DexError[\"BadVaultSignerNonce\"] = 33] = \"BadVaultSignerNonce\";\n    DexError[DexError[\"InsufficientFunds\"] = 34] = \"InsufficientFunds\";\n    DexError[DexError[\"SplAccountProgramId\"] = 35] = \"SplAccountProgramId\";\n    DexError[DexError[\"SplAccountLen\"] = 36] = \"SplAccountLen\";\n    DexError[DexError[\"WrongFeeDiscountAccountOwner\"] = 37] = \"WrongFeeDiscountAccountOwner\";\n    DexError[DexError[\"WrongFeeDiscountMint\"] = 38] = \"WrongFeeDiscountMint\";\n    DexError[DexError[\"CoinPayerProgramId\"] = 39] = \"CoinPayerProgramId\";\n    DexError[DexError[\"PcPayerProgramId\"] = 40] = \"PcPayerProgramId\";\n    DexError[DexError[\"ClientIdNotFound\"] = 41] = \"ClientIdNotFound\";\n    DexError[DexError[\"TooManyOpenOrders\"] = 42] = \"TooManyOpenOrders\";\n    DexError[DexError[\"FakeErrorSoWeDontChangeNumbers\"] = 43] = \"FakeErrorSoWeDontChangeNumbers\";\n    DexError[DexError[\"BorrowError\"] = 44] = \"BorrowError\";\n    DexError[DexError[\"WrongOrdersAccount\"] = 45] = \"WrongOrdersAccount\";\n    DexError[DexError[\"WrongBidsAccount\"] = 46] = \"WrongBidsAccount\";\n    DexError[DexError[\"WrongAsksAccount\"] = 47] = \"WrongAsksAccount\";\n    DexError[DexError[\"WrongRequestQueueAccount\"] = 48] = \"WrongRequestQueueAccount\";\n    DexError[DexError[\"WrongEventQueueAccount\"] = 49] = \"WrongEventQueueAccount\";\n    DexError[DexError[\"RequestQueueFull\"] = 50] = \"RequestQueueFull\";\n    DexError[DexError[\"EventQueueFull\"] = 51] = \"EventQueueFull\";\n    DexError[DexError[\"MarketIsDisabled\"] = 52] = \"MarketIsDisabled\";\n    DexError[DexError[\"WrongSigner\"] = 53] = \"WrongSigner\";\n    DexError[DexError[\"TransferFailed\"] = 54] = \"TransferFailed\";\n    DexError[DexError[\"ClientOrderIdIsZero\"] = 55] = \"ClientOrderIdIsZero\";\n    DexError[DexError[\"WrongRentSysvarAccount\"] = 56] = \"WrongRentSysvarAccount\";\n    DexError[DexError[\"RentNotProvided\"] = 57] = \"RentNotProvided\";\n    DexError[DexError[\"OrdersNotRentExempt\"] = 58] = \"OrdersNotRentExempt\";\n    DexError[DexError[\"OrderNotFound\"] = 59] = \"OrderNotFound\";\n    DexError[DexError[\"OrderNotYours\"] = 60] = \"OrderNotYours\";\n    DexError[DexError[\"WouldSelfTrade\"] = 61] = \"WouldSelfTrade\";\n    DexError[DexError[\"Unknown\"] = 1000] = \"Unknown\";\n})(DexError = exports.DexError || (exports.DexError = {}));\nexports.KNOWN_PROGRAMS = {\n    [token_instructions_1.TOKEN_PROGRAM_ID.toString()]: 'Token program',\n    [web3_js_1.SystemProgram.programId.toString()]: 'System program',\n};\nfunction parseInstructionErrorResponse(transaction, errorResponse) {\n    const [failedInstructionIndex, customError] = errorResponse;\n    const failedInstruction = transaction.instructions[failedInstructionIndex];\n    let parsedError;\n    if (failedInstruction.programId.toString() in tokens_and_markets_1.PROGRAM_LAYOUT_VERSIONS) {\n        parsedError = DexError[customError['Custom']];\n    }\n    else if (failedInstruction.programId.toString() in exports.KNOWN_PROGRAMS) {\n        const program = exports.KNOWN_PROGRAMS[failedInstruction.programId.toString()];\n        parsedError = `${program} error ${customError['Custom']}`;\n    }\n    else {\n        parsedError = `Unknown program ${failedInstruction.programId.toString()} custom error: ${customError['Custom']}`;\n    }\n    return {\n        failedInstructionIndex,\n        error: parsedError,\n        failedProgram: failedInstruction.programId.toString(),\n    };\n}\nexports.parseInstructionErrorResponse = parseInstructionErrorResponse;\n//# sourceMappingURL=error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.PermissionedCrank = exports.ReferralFees = exports.OpenOrdersPda = exports.MarketProxyBuilder = exports.MarketProxy = exports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.MARKET_STATE_LAYOUT_V2 = exports.MARKET_STATE_LAYOUT_V3 = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nObject.defineProperty(exports, \"MARKET_STATE_LAYOUT_V3\", { enumerable: true, get: function () { return market_1.MARKET_STATE_LAYOUT_V3; } });\nObject.defineProperty(exports, \"MARKET_STATE_LAYOUT_V2\", { enumerable: true, get: function () { return market_1.MARKET_STATE_LAYOUT_V2; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n__exportStar(require(\"./error\"), exports);\nvar market_proxy_1 = require(\"./market-proxy\");\nObject.defineProperty(exports, \"MarketProxy\", { enumerable: true, get: function () { return market_proxy_1.MarketProxy; } });\nObject.defineProperty(exports, \"MarketProxyBuilder\", { enumerable: true, get: function () { return market_proxy_1.MarketProxyBuilder; } });\nvar middleware_1 = require(\"./market-proxy/middleware\");\nObject.defineProperty(exports, \"OpenOrdersPda\", { enumerable: true, get: function () { return middleware_1.OpenOrdersPda; } });\nObject.defineProperty(exports, \"ReferralFees\", { enumerable: true, get: function () { return middleware_1.ReferralFees; } });\nObject.defineProperty(exports, \"PermissionedCrank\", { enumerable: true, get: function () { return middleware_1.PermissionedCrank; } });\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return middleware_1.Logger; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(14, buffer_layout_1.struct([]), 'closeOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(15, buffer_layout_1.struct([]), 'initOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(16, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'prune');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(17, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEventsPermissioned');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, authority = undefined, pruneAuthority = undefined, crankAuthority = undefined, }) {\n        let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n                // Use a dummy address if using the new dex upgrade to save tx space.\n                {\n                    pubkey: authority ? quoteMint : web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ]\n                .concat(authority\n                ? { pubkey: authority, isSigner: false, isWritable: false }\n                : [])\n                .concat(authority && pruneAuthority\n                ? { pubkey: pruneAuthority, isSigner: false, isWritable: false }\n                : [])\n                .concat(authority && pruneAuthority && crankAuthority\n                ? { pubkey: crankAuthority, isSigner: false, isWritable: false }\n                : []),\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, coinFee, pcFee, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: coinFee, isSigner: false, isWriteable: true },\n                { pubkey: pcFee, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static consumeEventsPermissioned({ market, eventQueue, crankAuthority, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: crankAuthority, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEventsPermissioned: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2(order) {\n        const { market, bids, asks, eventQueue, openOrders, owner, side, orderId, programId, } = order;\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n    static closeOpenOrders({ market, openOrders, owner, solWallet, programId }) {\n        const keys = [\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: solWallet, isSigner: false, isWritable: true },\n            { pubkey: market, isSigner: false, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                closeOpenOrders: {},\n            }),\n        });\n    }\n    static initOpenOrders({ market, openOrders, owner, programId, marketAuthority, }) {\n        const keys = [\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: market, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ].concat(marketAuthority\n            ? { pubkey: marketAuthority, isSigner: false, isWritable: false }\n            : []);\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                initOpenOrders: {},\n            }),\n        });\n    }\n    static prune({ market, bids, asks, eventQueue, pruneAuthority, openOrders, openOrdersOwner, programId, limit, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            // Keep signer false so that one can use a PDA.\n            { pubkey: pruneAuthority, isSigner: false, isWritable: false },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: openOrdersOwner, isSigner: false, isWritable: false },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                prune: { limit },\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.selfTradeBehaviorLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nfunction selfTradeBehaviorLayout(property) {\n    return new EnumLayout({ decrementTake: 0, cancelProvide: 1, abortTransaction: 2 }, 4, property);\n}\nexports.selfTradeBehaviorLayout = selfTradeBehaviorLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarketProxyBuilder = exports.MarketProxyInstruction = exports.MarketProxy = void 0;\nconst anchor_1 = require(\"@project-serum/anchor\");\nconst market_1 = require(\"../market\");\nconst instructions_1 = require(\"../instructions\");\n// MarketProxy provides an API for constructing transactions to an on-chain\n// DEX proxy, which relays all instructions to the orderbook. Minimally, this\n// requires two modifications for DEX instructions.\n//\n// 1. Transasctions are sent to the proxy program--not the DEX.\n// 2. The DEX program ID must be inserted as the first account in instructions\n//    using the proxy relay, so that the proxy can use the account for CPI.\n//    The program is responsible for removing this account before relaying to\n//    the dex.\n//\n// Additionally, a middleware abstraction is provided so that one can configure\n// both the client and the smart contract with the ability to send and processs\n// arbitrary accounts and instruction data *in addition* to what the Serum DEX\n// expects.\n//\n// Similar to the layers of an onion, each middleware wraps a transaction\n// request with additional accounts and instruction data before sending it to\n// the program. Upon receiving the request, the program--with its own set of\n// middleware-- unwraps and processes each layer. The process ends with all\n// layers being unwrapped and the proxy relaying the transaction to the DEX.\n//\n// As a result, the order of the middleware matters and the client should\n// process middleware in the *reverse* order of the proxy smart contract.\nclass MarketProxy {\n    // Ctor.\n    constructor(market, instruction) {\n        this._market = market;\n        this._instruction = instruction;\n    }\n    // DEX market being proxied.\n    get market() {\n        return this._market;\n    }\n    // Instruction namespace.\n    get instruction() {\n        return this._instruction;\n    }\n    // Serum DEX program ID.\n    get dexProgramId() {\n        return this._market.programId;\n    }\n    // Proxy program ID.\n    get proxyProgramId() {\n        return this._instruction.proxyProgramId;\n    }\n}\nexports.MarketProxy = MarketProxy;\n// Instruction builder for the market proxy.\nclass MarketProxyInstruction {\n    constructor(proxyProgramId, dexProgramId, market, middlewares) {\n        this._proxyProgramId = proxyProgramId;\n        this._dexProgramId = dexProgramId;\n        this._market = market;\n        this._middlewares = middlewares;\n    }\n    // Program ID of the permissioning proxy program.\n    get proxyProgramId() {\n        return this._proxyProgramId;\n    }\n    newOrderV3(params) {\n        const tradeIx = this._market.makeNewOrderV3Instruction({\n            ...params,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.newOrderV3(tradeIx));\n        return this.proxy(tradeIx);\n    }\n    initOpenOrders(owner, market, openOrders, marketAuthority) {\n        const ix = instructions_1.DexInstructions.initOpenOrders({\n            market,\n            openOrders,\n            owner,\n            programId: this._proxyProgramId,\n            marketAuthority,\n        });\n        this._middlewares.forEach((mw) => mw.initOpenOrders(ix));\n        return this.proxy(ix);\n    }\n    cancelOrder(owner, order) {\n        const ix = instructions_1.DexInstructions.cancelOrderV2({\n            market: this._market.address,\n            owner,\n            openOrders: order.openOrdersAddress,\n            bids: this._market.decoded.bids,\n            asks: this._market.decoded.asks,\n            eventQueue: this._market.decoded.eventQueue,\n            side: order.side,\n            orderId: order.orderId,\n            openOrdersSlot: order.openOrdersSlot,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.cancelOrderV2(ix));\n        return this.proxy(ix);\n    }\n    cancelOrderByClientId(owner, openOrders, clientId) {\n        const ix = instructions_1.DexInstructions.cancelOrderByClientIdV2({\n            market: this._market.address,\n            openOrders,\n            owner,\n            bids: this._market.decoded.bids,\n            asks: this._market.decoded.asks,\n            eventQueue: this._market.decoded.eventQueue,\n            clientId,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.cancelOrderByClientIdV2(ix));\n        return this.proxy(ix);\n    }\n    settleFunds(openOrders, owner, baseWallet, quoteWallet, referrerQuoteWallet) {\n        const ix = instructions_1.DexInstructions.settleFunds({\n            market: this._market.address,\n            openOrders,\n            owner,\n            baseVault: this._market.decoded.baseVault,\n            quoteVault: this._market.decoded.quoteVault,\n            baseWallet,\n            quoteWallet,\n            vaultSigner: anchor_1.utils.publicKey.createProgramAddressSync([\n                this._market.address.toBuffer(),\n                this._market.decoded.vaultSignerNonce.toArrayLike(Buffer, 'le', 8),\n            ], this._dexProgramId),\n            programId: this._proxyProgramId,\n            referrerQuoteWallet,\n        });\n        this._middlewares.forEach((mw) => mw.settleFunds(ix));\n        return this.proxy(ix);\n    }\n    closeOpenOrders(openOrders, owner, solWallet) {\n        const ix = instructions_1.DexInstructions.closeOpenOrders({\n            market: this._market.address,\n            openOrders,\n            owner,\n            solWallet,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.closeOpenOrders(ix));\n        return this.proxy(ix);\n    }\n    prune(openOrders, openOrdersOwner, limit) {\n        if (!limit) {\n            limit = 65535;\n        }\n        const ix = instructions_1.DexInstructions.prune({\n            market: this._market.address,\n            bids: this._market.decoded.bids,\n            asks: this._market.decoded.asks,\n            eventQueue: this._market.decoded.eventQueue,\n            pruneAuthority: this._market.decoded.pruneAuthority,\n            openOrders,\n            openOrdersOwner,\n            programId: this._proxyProgramId,\n            limit,\n        });\n        this._middlewares.forEach((mw) => mw.prune(ix));\n        return this.proxy(ix);\n    }\n    consumeEvents(openOrdersAccounts, limit) {\n        const ix = instructions_1.DexInstructions.consumeEvents({\n            market: this._market.address,\n            eventQueue: this._market.decoded.eventQueue,\n            coinFee: this._market.decoded.eventQueue,\n            pcFee: this._market.decoded.eventQueue,\n            openOrdersAccounts,\n            limit,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.consumeEvents(ix));\n        return this.proxy(ix);\n    }\n    consumeEventsPermissioned(openOrdersAccounts, limit) {\n        const ix = instructions_1.DexInstructions.consumeEventsPermissioned({\n            market: this._market.address,\n            eventQueue: this._market.decoded.eventQueue,\n            crankAuthority: this._market.decoded.consumeEventsAuthority,\n            openOrdersAccounts,\n            limit,\n            programId: this._proxyProgramId,\n        });\n        this._middlewares.forEach((mw) => mw.consumeEventsPermissioned(ix));\n        return this.proxy(ix);\n    }\n    // Adds the serum dex account to the instruction so that proxies can\n    // relay (CPI requires the executable account).\n    proxy(ix) {\n        ix.keys = [\n            { pubkey: this._dexProgramId, isWritable: false, isSigner: false },\n            ...ix.keys,\n        ];\n        return ix;\n    }\n}\nexports.MarketProxyInstruction = MarketProxyInstruction;\nclass MarketProxyBuilder {\n    constructor() {\n        this._middlewares = [];\n    }\n    middleware(mw) {\n        this._middlewares.push(mw);\n        return this;\n    }\n    async load({ connection, market, options = {}, dexProgramId, proxyProgramId, }) {\n        const marketClient = await market_1.Market.load(connection, market, options, dexProgramId, market_1.MARKET_STATE_LAYOUT_V3);\n        const instruction = new MarketProxyInstruction(proxyProgramId, dexProgramId, marketClient, this._middlewares);\n        return new MarketProxy(marketClient, instruction);\n    }\n}\nexports.MarketProxyBuilder = MarketProxyBuilder;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.PermissionedCrank = exports.ReferralFees = exports.OpenOrdersPda = void 0;\nconst anchor_1 = require(\"@project-serum/anchor\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass OpenOrdersPda {\n    constructor({ proxyProgramId, dexProgramId, }) {\n        this._proxyProgramId = proxyProgramId;\n        this._dexProgramId = dexProgramId;\n    }\n    // PDA authorized to create open orders accounts.\n    static async marketAuthority(market, dexProgramId, proxyProgramId) {\n        // b\"open-orders-init\"\n        const openOrdersStr = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n            45,\n            105,\n            110,\n            105,\n            116,\n        ]);\n        const [addr] = await web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer()], proxyProgramId);\n        return addr;\n    }\n    static async openOrdersAddress(market, owner, dexProgramId, proxyProgramId) {\n        // b\"open-orders\".\n        const openOrdersStr = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n        ]);\n        const [addr] = await web3_js_1.PublicKey.findProgramAddress([\n            openOrdersStr,\n            dexProgramId.toBuffer(),\n            market.toBuffer(),\n            owner.toBuffer(),\n        ], proxyProgramId);\n        return addr;\n    }\n    initOpenOrders(ix) {\n        const market = ix.keys[2].pubkey;\n        const owner = ix.keys[1].pubkey;\n        // b\"open-orders\"\n        const openOrdersSeed = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n        ]);\n        // b\"open-orders-init\"\n        const openOrdersInitSeed = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n            45,\n            105,\n            110,\n            105,\n            116,\n        ]);\n        const [openOrders, bump] = anchor_1.utils.publicKey.findProgramAddressSync([\n            openOrdersSeed,\n            this._dexProgramId.toBuffer(),\n            market.toBuffer(),\n            owner.toBuffer(),\n        ], this._proxyProgramId);\n        const [marketAuthority, bumpInit] = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersInitSeed, this._dexProgramId.toBuffer(), market.toBuffer()], this._proxyProgramId);\n        // Override the open orders account and market authority.\n        ix.keys[0].pubkey = openOrders;\n        ix.keys[4].pubkey = marketAuthority;\n        // Writable because it must pay for the PDA initialization.\n        ix.keys[1].isWritable = true;\n        // Prepend to the account list extra accounts needed for PDA initialization.\n        ix.keys = [\n            { pubkey: this._dexProgramId, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SystemProgram.programId, isSigner: false, isWritable: false },\n            ...ix.keys,\n        ];\n        // Prepend the ix discriminator, bump, and bumpInit to the instruction data,\n        // which saves the program compute by avoiding recalculating them in the\n        // program.\n        ix.data = Buffer.concat([Buffer.from([0, bump, bumpInit]), ix.data]);\n    }\n    newOrderV3(ix) {\n        ix.data = Buffer.concat([Buffer.from([1]), ix.data]);\n    }\n    cancelOrderV2(ix) {\n        ix.data = Buffer.concat([Buffer.from([2]), ix.data]);\n    }\n    cancelOrderByClientIdV2(ix) {\n        ix.data = Buffer.concat([Buffer.from([3]), ix.data]);\n    }\n    settleFunds(ix) {\n        ix.data = Buffer.concat([Buffer.from([4]), ix.data]);\n    }\n    closeOpenOrders(ix) {\n        ix.data = Buffer.concat([Buffer.from([5]), ix.data]);\n    }\n    prune(ix) {\n        ix.data = Buffer.concat([Buffer.from([6]), ix.data]);\n    }\n    consumeEvents(ix) {\n        ix.data = Buffer.concat([Buffer.from([7]), ix.data]);\n    }\n    consumeEventsPermissioned(ix) {\n        ix.data = Buffer.concat([Buffer.from([8]), ix.data]);\n    }\n}\nexports.OpenOrdersPda = OpenOrdersPda;\nclass ReferralFees {\n    // eslint-disable-next-line\n    initOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    newOrderV3(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderV2(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderByClientIdV2(_ix) { }\n    // eslint-disable-next-line\n    settleFunds(_ix) { }\n    // eslint-disable-next-line\n    closeOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    prune(_ix) { }\n    // eslint-disable-next-line\n    consumeEvents(_ix) { }\n    // eslint-disable-next-line\n    consumeEventsPermissioned(_ix) { }\n}\nexports.ReferralFees = ReferralFees;\nclass PermissionedCrank {\n    // eslint-disable-next-line\n    initOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    newOrderV3(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderV2(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderByClientIdV2(_ix) { }\n    // eslint-disable-next-line\n    settleFunds(_ix) { }\n    // eslint-disable-next-line\n    closeOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    prune(_ix) { }\n    // eslint-disable-next-line\n    consumeEvents(_ix) { }\n    // eslint-disable-next-line\n    consumeEventsPermissioned(ix) {\n        ix.keys[ix.keys.length - 1].isSigner = false;\n    }\n}\nexports.PermissionedCrank = PermissionedCrank;\nclass Logger {\n    initOpenOrders(ix) {\n        console.log('Proxying initOpenOrders', this.ixToDisplay(ix));\n    }\n    newOrderV3(ix) {\n        console.log('Proxying newOrderV3', this.ixToDisplay(ix));\n    }\n    cancelOrderV2(ix) {\n        console.log('Proxying cancelOrderV2', this.ixToDisplay(ix));\n    }\n    cancelOrderByClientIdV2(ix) {\n        console.log('Proxying cancelOrderByClientIdV2', this.ixToDisplay(ix));\n    }\n    settleFunds(ix) {\n        console.log('Proxying settleFunds', this.ixToDisplay(ix));\n    }\n    closeOpenOrders(ix) {\n        console.log('Proxying closeOpenOrders', this.ixToDisplay(ix));\n    }\n    prune(ix) {\n        console.log('Proxying prune', this.ixToDisplay(ix));\n    }\n    consumeEvents(ix) {\n        console.log('Proxying consumeEvents', this.ixToDisplay(ix));\n    }\n    consumeEventsPermissioned(ix) {\n        console.log('Proxying consumeEventsPermissioned', this.ixToDisplay(ix));\n    }\n    ixToDisplay(ix) {\n        const keys = ix.keys.map((i) => {\n            return { ...i, pubkey: i.pubkey.toString() };\n        });\n        const programId = ix.programId.toString();\n        const data = new Uint8Array(ix.data);\n        return { keys, programId, data };\n    }\n}\nexports.Logger = Logger;\n//# sourceMappingURL=middleware.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports.MARKET_STATE_LAYOUT_V3 = exports.MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports.MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nexports.MARKET_STATE_LAYOUT_V3 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    layout_1.publicKeyLayout('authority'),\n    layout_1.publicKeyLayout('pruneAuthority'),\n    layout_1.publicKeyLayout('consumeEventsAuthority'),\n    buffer_layout_1.blob(992),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId, layoutOverride) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n        this._layoutOverride = layoutOverride;\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports.MARKET_STATE_LAYOUT_V2;\n    }\n    static async findAccountsByMints(connection, baseMintAddress, quoteMintAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('baseMint'),\n                    bytes: baseMintAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: Market.getLayout(programId).offsetOf('quoteMint'),\n                    bytes: quoteMintAddress.toBase58(),\n                },\n            },\n        ];\n        return getFilteredProgramAccounts(connection, programId, filters);\n    }\n    static async load(connection, address, options = {}, programId, layoutOverride) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = (layoutOverride !== null && layoutOverride !== void 0 ? layoutOverride : this.getLayout(programId)).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId, layoutOverride);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    get decoded() {\n        return this._decoded;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey, }) {\n        const { transaction, signers } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            openOrdersAccount,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    get usesRequestQueue() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) <= 2;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 30000) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = undefined, selfTradeBehavior = 'decrementTake', }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        let useFeeDiscountPubkey;\n        if (feeDiscountPubkey) {\n            useFeeDiscountPubkey = feeDiscountPubkey;\n        }\n        else if (feeDiscountPubkey === undefined &&\n            this.supportsSrmFeeDiscounts) {\n            useFeeDiscountPubkey = (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey;\n        }\n        else {\n            useFeeDiscountPubkey = null;\n        }\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            let account;\n            if (openOrdersAccount) {\n                account = openOrdersAccount;\n            }\n            else {\n                account = new web3_js_1.Account();\n            }\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, account.publicKey, this._programId));\n            openOrdersAddress = account.publicKey;\n            signers.push(account);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAccount) {\n            openOrdersAddress = openOrdersAccount.publicKey;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey: useFeeDiscountPubkey,\n            selfTradeBehavior,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, params) {\n        var _a;\n        const { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = null, } = params;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.newOrder({\n                market: this.address,\n                requestQueue: this._decoded.requestQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxQuantity: this.baseSizeNumberToLots(size),\n                orderType,\n                clientId,\n                programId: this._programId,\n                feeDiscountPubkey: this.supportsSrmFeeDiscounts\n                    ? feeDiscountPubkey\n                    : null,\n            });\n        }\n        else {\n            return this.makeNewOrderV3Instruction(params);\n        }\n    }\n    makeNewOrderV3Instruction(params) {\n        var _a;\n        const { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = null, selfTradeBehavior = 'decrementTake', programId, } = params;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        return instructions_1.DexInstructions.newOrderV3({\n            market: this.address,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            openOrders: openOrdersAccount\n                ? openOrdersAccount.publicKey\n                : openOrdersAddressKey,\n            owner: ownerAddress,\n            payer,\n            side,\n            limitPrice: this.priceNumberToLots(price),\n            maxBaseQuantity: this.baseSizeNumberToLots(size),\n            maxQuoteQuantity: new bn_js_1.default(this._decoded.quoteLotSize.toNumber()).mul(this.baseSizeNumberToLots(size).mul(this.priceNumberToLots(price))),\n            orderType,\n            clientId,\n            programId: programId !== null && programId !== void 0 ? programId : this._programId,\n            selfTradeBehavior,\n            feeDiscountPubkey: this.supportsSrmFeeDiscounts\n                ? feeDiscountPubkey\n                : null,\n        });\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        if (this.usesRequestQueue) {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n                market: this.address,\n                owner,\n                openOrders,\n                requestQueue: this._decoded.requestQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        else {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientIdV2({\n                market: this.address,\n                openOrders,\n                owner,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.cancelOrder({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                requestQueue: this._decoded.requestQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.cancelOrderV2({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n    }\n    makeConsumeEventsInstruction(openOrdersAccounts, limit) {\n        return instructions_1.DexInstructions.consumeEvents({\n            market: this.address,\n            eventQueue: this._decoded.eventQueue,\n            coinFee: this._decoded.eventQueue,\n            pcFee: this._decoded.eventQueue,\n            openOrdersAccounts,\n            limit,\n            programId: this._programId,\n        });\n    }\n    makeConsumeEventsPermissionedInstruction(openOrdersAccounts, limit) {\n        return instructions_1.DexInstructions.consumeEventsPermissioned({\n            market: this.address,\n            eventQueue: this._decoded.eventQueue,\n            crankAuthority: this._decoded.consumeEventsAuthority,\n            openOrdersAccounts,\n            limit,\n            programId: this._programId,\n        });\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = exports.decodeEventsSince = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueueItem(headerLayout, nodeLayout, buffer, nodeIndex) {\n    return nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span);\n}\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(decodeQueueItem(headerLayout, nodeLayout, buffer, nodeIndex));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(decodeQueueItem(headerLayout, nodeLayout, buffer, nodeIndex));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeEventsSince(buffer, lastSeqNum) {\n    const header = EVENT_QUEUE_HEADER.decode(buffer);\n    const allocLen = Math.floor((buffer.length - EVENT_QUEUE_HEADER.span) / EVENT.span);\n    // calculate number of missed events\n    // account for u32 & ringbuffer overflows\n    const modulo32Uint = 0x100000000;\n    let missedEvents = (header.seqNum - lastSeqNum + modulo32Uint) % modulo32Uint;\n    if (missedEvents > allocLen) {\n        missedEvents = allocLen - 1;\n    }\n    const startSeq = (header.seqNum - missedEvents + modulo32Uint) % modulo32Uint;\n    // define boundary indexes in ring buffer [start;end)\n    const endIndex = (header.head + header.count) % allocLen;\n    const startIndex = (endIndex - missedEvents + allocLen) % allocLen;\n    const results = [];\n    for (let i = 0; i < missedEvents; ++i) {\n        const nodeIndex = (startIndex + i) % allocLen;\n        const event = decodeQueueItem(EVENT_QUEUE_HEADER, EVENT, buffer, nodeIndex);\n        event.seqNum = (startSeq + i) % modulo32Uint;\n        results.push(event);\n    }\n    return results;\n}\nexports.decodeEventsSince = decodeEventsSince;\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = exports.PROGRAM_LAYOUT_VERSIONS = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nexports.PROGRAM_LAYOUT_VERSIONS = {\n    '4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn': 1,\n    BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg: 1,\n    EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o: 2,\n    '9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin': 3,\n};\nfunction getLayoutVersion(programId) {\n    return exports.PROGRAM_LAYOUT_VERSIONS[programId.toString()] || 3;\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","import type {\n  Commitment,\n  ConfirmOptions,\n  Connection,\n  KeyedAccountInfo,\n  PublicKey,\n  RpcResponseAndContext,\n  Signer,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport type { Broadcaster, ReadonlyProvider } from \".\";\nimport {\n  MultipleConnectionBroadcaster,\n  PendingTransaction,\n  SignerWallet,\n} from \".\";\nimport { SingleConnectionBroadcaster } from \"./broadcaster\";\nimport type {\n  Provider,\n  SendTxRequest,\n  TransactionSigner,\n  Wallet,\n} from \"./interfaces\";\nimport { TransactionEnvelope } from \"./transaction/TransactionEnvelope\";\n\nexport const DEFAULT_PROVIDER_OPTIONS: ConfirmOptions = {\n  preflightCommitment: \"processed\",\n  commitment: \"processed\",\n};\n\n/**\n * Provider that can only read.\n */\nexport class SolanaReadonlyProvider implements ReadonlyProvider {\n  /**\n   * @param connection The cluster connection where the program is deployed.\n   * @param sendConnection The connection where transactions are sent to.\n   * @param wallet     The wallet used to pay for and sign all transactions.\n   * @param opts       Transaction confirmation options to use by default.\n   */\n  constructor(\n    readonly connection: Connection,\n    readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS\n  ) {}\n\n  /**\n   * Gets\n   * @param accountId\n   * @returns\n   */\n  async getAccountInfo(accountId: PublicKey): Promise<KeyedAccountInfo | null> {\n    const accountInfo = await this.connection.getAccountInfo(\n      accountId,\n      this.opts.commitment\n    );\n    if (!accountInfo) {\n      return null;\n    }\n    return {\n      accountId,\n      accountInfo,\n    };\n  }\n}\n\n/**\n * Signs Solana transactions.\n */\nexport class SolanaTransactionSigner implements TransactionSigner {\n  constructor(\n    readonly wallet: Wallet,\n    readonly broadcaster: Broadcaster,\n    readonly preflightCommitment: Commitment = \"processed\"\n  ) {}\n\n  get publicKey(): PublicKey {\n    return this.wallet.publicKey;\n  }\n\n  /**\n   * Sends the given transaction, paid for and signed by the provider's wallet.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provdier wallet that\n   *                will sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async sign(\n    tx: Transaction,\n    signers: readonly (Signer | undefined)[] = [],\n    opts: ConfirmOptions = {\n      preflightCommitment: this.preflightCommitment,\n    }\n  ): Promise<Transaction> {\n    tx.feePayer = this.wallet.publicKey;\n    tx.recentBlockhash = await this.broadcaster.getRecentBlockhash(\n      opts.preflightCommitment\n    );\n\n    await this.wallet.signTransaction(tx);\n    signers\n      .filter((s): s is Signer => s !== undefined)\n      .forEach((kp) => {\n        tx.partialSign(kp);\n      });\n\n    return tx;\n  }\n\n  /**\n   * Similar to `send`, but for an array of transactions and signers.\n   */\n  async signAll(\n    reqs: readonly SendTxRequest[],\n    opts: ConfirmOptions = {\n      preflightCommitment: this.preflightCommitment,\n    }\n  ): Promise<Transaction[]> {\n    const blockhash = await this.broadcaster.getRecentBlockhash(\n      opts.preflightCommitment\n    );\n\n    const txs = reqs.map((r) => {\n      const tx = r.tx;\n      let signers = r.signers;\n\n      if (signers === undefined) {\n        signers = [];\n      }\n\n      tx.feePayer = this.wallet.publicKey;\n      tx.recentBlockhash = blockhash;\n\n      signers\n        .filter((s): s is Signer => s !== undefined)\n        .forEach((kp) => {\n          tx.partialSign(kp);\n        });\n\n      return tx;\n    });\n\n    const signedTxs = await this.wallet.signAllTransactions(txs);\n    return signedTxs;\n  }\n}\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n *\n * This implementation was taken from Anchor.\n */\nexport class SolanaProvider extends SolanaReadonlyProvider implements Provider {\n  readonly signer: TransactionSigner;\n\n  /**\n   * @param connection The cluster connection where the program is deployed.\n   * @param sendConnection The connection where transactions are sent to.\n   * @param wallet     The wallet used to pay for and sign all transactions.\n   * @param opts       Transaction confirmation options to use by default.\n   */\n  constructor(\n    override readonly connection: Connection,\n    readonly broadcaster: Broadcaster,\n    readonly wallet: Wallet,\n    override readonly opts: ConfirmOptions = DEFAULT_PROVIDER_OPTIONS\n  ) {\n    super(connection, opts);\n    this.signer = new SolanaTransactionSigner(\n      wallet,\n      broadcaster,\n      opts.preflightCommitment\n    );\n  }\n\n  /**\n   * Creates a new SolanaProvider.\n   * @deprecated use {@link SolanaProvider.init}\n   */\n  static load({\n    connection,\n    sendConnection = connection,\n    wallet,\n    opts,\n  }: {\n    /**\n     * Connection used for general reads\n     */\n    connection: Connection;\n    /**\n     * Connection used for sending transactions\n     */\n    sendConnection?: Connection;\n    /**\n     * Wallet used for signing transactions\n     */\n    wallet: Wallet;\n    /**\n     * Confirmation options\n     */\n    opts?: ConfirmOptions;\n  }): SolanaProvider {\n    return new SolanaProvider(\n      connection,\n      new SingleConnectionBroadcaster(sendConnection, opts),\n      wallet,\n      opts\n    );\n  }\n\n  /**\n   * Initializes a new SolanaProvider.\n   */\n  static init({\n    connection,\n    broadcastConnections = [connection],\n    wallet,\n    opts = DEFAULT_PROVIDER_OPTIONS,\n  }: {\n    /**\n     * Connection used for general reads\n     */\n    readonly connection: Connection;\n    /**\n     * Connections used for broadcasting transactions. Defaults to the read connection.\n     */\n    readonly broadcastConnections?: readonly Connection[];\n    /**\n     * Wallet used for signing transactions\n     */\n    readonly wallet: Wallet;\n    /**\n     * Confirmation options\n     */\n    readonly opts?: ConfirmOptions;\n  }): SolanaProvider {\n    return new SolanaProvider(\n      connection,\n      new MultipleConnectionBroadcaster(broadcastConnections, opts),\n      wallet,\n      opts\n    );\n  }\n\n  /**\n   * Sends the given transaction, paid for and signed by the provider's wallet.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provdier wallet that\n   *                will sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async send(\n    tx: Transaction,\n    signers: (Signer | undefined)[] = [],\n    opts: ConfirmOptions = this.opts\n  ): Promise<PendingTransaction> {\n    const theTx = await this.signer.sign(tx, signers, opts);\n    const pending = await this.broadcaster.broadcast(theTx, opts);\n    await pending.wait();\n    return pending;\n  }\n\n  /**\n   * Similar to `send`, but for an array of transactions and signers.\n   */\n  async sendAll(\n    reqs: readonly SendTxRequest[],\n    opts: ConfirmOptions = this.opts\n  ): Promise<PendingTransaction[]> {\n    const txs = await this.signer.signAll(reqs, opts);\n    return await Promise.all(\n      txs.map(async (tx) => {\n        const pending = await this.broadcaster.broadcast(tx, opts);\n        await pending.wait();\n        return pending;\n      })\n    );\n  }\n\n  /**\n   * Simulates the given transaction, returning emitted logs from execution.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The set of signers in addition to the provider wallet that\n   *                will sign the transaction. If specified, the provider will\n   *                sign the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async simulate(\n    tx: Transaction,\n    signers: (Signer | undefined)[] | undefined,\n    opts: ConfirmOptions = this.opts\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let simTX = tx;\n    if (signers !== undefined) {\n      simTX = await this.signer.sign(tx, signers, opts);\n    }\n    return await this.broadcaster.simulate(simTX, {\n      verifySigners: signers !== undefined,\n      commitment: opts.commitment,\n    });\n  }\n}\n\n/**\n * Provider with utility functions.\n */\nexport interface AugmentedProvider extends Provider {\n  /**\n   * Creates a new transaction using this Provider.\n   * @param instructions\n   * @param signers\n   * @returns\n   */\n  newTX: (\n    instructions: (TransactionInstruction | null | undefined | boolean)[],\n    signers?: Signer[]\n  ) => TransactionEnvelope;\n\n  /**\n   * Requests an airdrop of tokens.\n   * @param lamports Number of lamports.\n   * @returns\n   */\n  requestAirdrop: (lamports: number) => Promise<PendingTransaction>;\n\n  /**\n   * Returns this provider with a different signer.\n   * @param signer\n   * @returns\n   */\n  withSigner: (signer: Signer) => AugmentedProvider;\n}\n\n/**\n * Wrapper for a Provider containing utility functions.\n */\nexport class SolanaAugmentedProvider implements AugmentedProvider {\n  constructor(readonly provider: Provider) {}\n\n  get connection(): Connection {\n    return this.provider.connection;\n  }\n\n  get signer(): TransactionSigner {\n    return this.provider.signer;\n  }\n\n  get broadcaster(): Broadcaster {\n    return this.provider.broadcaster;\n  }\n\n  get opts(): ConfirmOptions {\n    return this.provider.opts;\n  }\n\n  get wallet(): Wallet {\n    return this.provider.wallet;\n  }\n\n  send(\n    tx: Transaction,\n    signers?: (Signer | undefined)[] | undefined,\n    opts?: ConfirmOptions | undefined\n  ): Promise<PendingTransaction> {\n    return this.provider.send(tx, signers, opts);\n  }\n\n  sendAll(\n    reqs: readonly SendTxRequest[],\n    opts?: ConfirmOptions | undefined\n  ): Promise<PendingTransaction[]> {\n    return this.provider.sendAll(reqs, opts);\n  }\n\n  simulate(\n    tx: Transaction,\n    signers?: (Signer | undefined)[] | undefined,\n    opts?: ConfirmOptions | undefined\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    return this.provider.simulate(tx, signers, opts);\n  }\n\n  getAccountInfo(accountId: PublicKey): Promise<KeyedAccountInfo | null> {\n    return this.provider.getAccountInfo(accountId);\n  }\n\n  /**\n   * Creates a new transaction using this Provider.\n   * @param instructions\n   * @param signers\n   * @returns\n   */\n  newTX(\n    instructions: (TransactionInstruction | null | undefined | boolean)[],\n    signers: Signer[] = []\n  ): TransactionEnvelope {\n    return TransactionEnvelope.create(this, instructions, signers);\n  }\n\n  /**\n   * Requests an airdrop of tokens.\n   * @param amount\n   * @returns\n   */\n  async requestAirdrop(\n    lamports: number,\n    to: PublicKey = this.wallet.publicKey\n  ): Promise<PendingTransaction> {\n    return new PendingTransaction(\n      this.connection,\n      await this.connection.requestAirdrop(to, lamports)\n    );\n  }\n\n  /**\n   * Returns this provider with a different signer.\n   * @param signer\n   * @returns\n   */\n  withSigner(signer: Signer): SolanaAugmentedProvider {\n    return new SolanaAugmentedProvider(\n      new SolanaProvider(\n        this.connection,\n        this.broadcaster,\n        new SignerWallet(signer),\n        this.opts\n      )\n    );\n  }\n}\n","export class IdlError extends Error {\n}\n// An error from a user defined program.\nexport class ProgramError extends Error {\n    constructor(code, msg, ...params) {\n        super(...params);\n        this.code = code;\n        this.msg = msg;\n    }\n    static parse(err, idlErrors) {\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let components = err.toString().split(\"custom program error: \");\n        if (components.length !== 2) {\n            return null;\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(components[1]);\n        }\n        catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 120,\n    IdlInstructionInvalidProgram: 121,\n    // Constraints.\n    ConstraintMut: 140,\n    ConstraintHasOne: 141,\n    ConstraintSigner: 142,\n    ConstraintRaw: 143,\n    ConstraintOwner: 144,\n    ConstraintRentExempt: 145,\n    ConstraintSeeds: 146,\n    ConstraintExecutable: 147,\n    ConstraintState: 148,\n    ConstraintAssociated: 149,\n    ConstraintAssociatedInit: 150,\n    ConstraintClose: 151,\n    ConstraintAddress: 152,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 160,\n    AccountDiscriminatorNotFound: 161,\n    AccountDiscriminatorMismatch: 162,\n    AccountDidNotDeserialize: 163,\n    AccountDidNotSerialize: 164,\n    AccountNotEnoughKeys: 165,\n    AccountNotMutable: 166,\n    AccountNotProgramOwned: 167,\n    // State.\n    StateInvalidAddress: 180,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 299,\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\",\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\",\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\",\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\",\n    ],\n    // Constraints.\n    [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n    [LangErrorCode.ConstraintHasOne, \"A has_one constraint was violated\"],\n    [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n    [LangErrorCode.ConstraintRaw, \"A raw constraint as violated\"],\n    [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n    [LangErrorCode.ConstraintRentExempt, \"A rent exempt constraint was violated\"],\n    [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n    [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n    [LangErrorCode.ConstraintState, \"A state constraint was violated\"],\n    [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n    [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\",\n    ],\n    [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n    [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\",\n    ],\n    [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n    [\n        LangErrorCode.AccountNotProgramOwned,\n        \"The given account is not owned by the executing program\",\n    ],\n    // State.\n    [\n        LangErrorCode.StateInvalidAddress,\n        \"The given state account does not have the correct address\",\n    ],\n    // Misc.\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\",\n    ],\n]);\n//# sourceMappingURL=error.js.map","/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n","import { IdlCoder } from \"./idl\";\n/**\n * Encodes and decodes user defined types.\n */\nexport class TypesCoder {\n    constructor(idl) {\n        if (idl.types === undefined) {\n            this.layouts = new Map();\n            return;\n        }\n        const layouts = idl.types.map((acc) => {\n            return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n        });\n        // @ts-ignore\n        this.layouts = new Map(layouts);\n    }\n    encode(accountName, account) {\n        const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.layouts.get(accountName);\n        const len = layout.encode(account, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(accountName, ix) {\n        const layout = this.layouts.get(accountName);\n        return layout.decode(ix);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PublicKey } from \"@solana/web3.js\";\nimport * as borsh from \"@project-serum/borsh\";\n// Deterministic IDL address as a function of the program id.\nexport async function idlAddress(programId) {\n    const base = (await PublicKey.findProgramAddress([], programId))[0];\n    return await PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nexport function seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = borsh.struct([\n    borsh.publicKey(\"authority\"),\n    borsh.vecU8(\"data\"),\n]);\nexport function decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\nexport function encodeIdlAccount(acc) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = IDL_ACCOUNT_LAYOUT.encode(acc, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=idl.js.map","import { TransactionInstruction } from \"@solana/web3.js\";\nimport { IdlError } from \"../../error\";\nimport { toInstruction, validateAccounts, translateAddress, } from \"../common\";\nimport { splitArgsAndCtx } from \"../context\";\nexport default class InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args) => {\n            const [ixArgs, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            validateAccounts(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (ctx.__private && ctx.__private.logAccounts) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, toInstruction(idlIx, ...ixArgs)),\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs) => {\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts) {\n        return accounts\n            .map((acc) => {\n            // Nested accounts.\n            // @ts-ignore\n            const nestedAccounts = acc.accounts;\n            if (nestedAccounts !== undefined) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, nestedAccounts).flat();\n            }\n            else {\n                const account = acc;\n                return {\n                    pubkey: translateAddress(ctx[acc.name]),\n                    isWritable: account.isMut,\n                    isSigner: account.isSigner,\n                };\n            }\n        })\n            .flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n    // todo\n}\n//# sourceMappingURL=instruction.js.map","import { splitArgsAndCtx } from \"../context\";\nimport { ProgramError } from \"../../error\";\nexport default class RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args) => {\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            try {\n                const txSig = await provider.send(tx, ctx.signers, ctx.options);\n                return txSig;\n            }\n            catch (err) {\n                console.log(\"Translating error\", err);\n                let translatedErr = ProgramError.parse(err, idlErrors);\n                if (translatedErr === null) {\n                    throw err;\n                }\n                throw translatedErr;\n            }\n        };\n        return rpc;\n    }\n}\n//# sourceMappingURL=rpc.js.map","import { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\nexport default class TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new Transaction();\n            if (ctx.instructions !== undefined) {\n                tx.add(...ctx.instructions);\n            }\n            tx.add(ixFn(...args));\n            return tx;\n        };\n        return txFn;\n    }\n}\n//# sourceMappingURL=transaction.js.map","import EventEmitter from \"eventemitter3\";\nimport camelCase from \"camelcase\";\nimport { SystemProgram, SYSVAR_RENT_PUBKEY, } from \"@solana/web3.js\";\nimport Coder, { stateDiscriminator } from \"../../coder\";\nimport { getProvider } from \"../../\";\nimport { validateAccounts, parseIdlErrors } from \"../common\";\nimport { findProgramAddressSync, createWithSeedSync } from \"../../utils/pubkey\";\nimport InstructionNamespaceFactory from \"./instruction\";\nimport RpcNamespaceFactory from \"./rpc\";\nimport TransactionNamespaceFactory from \"./transaction\";\nexport default class StateFactory {\n    static build(idl, coder, programId, provider) {\n        if (idl.state === undefined) {\n            return undefined;\n        }\n        return new StateClient(idl, programId, provider, coder);\n    }\n}\n/**\n * A client for the program state. Similar to the base [[Program]] client,\n * one can use this to send transactions and read accounts for the state\n * abstraction.\n */\nexport class StateClient {\n    constructor(idl, programId, provider, coder) {\n        this._idl = idl;\n        this._programId = programId;\n        this._address = programStateAddress(programId);\n        this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        this._coder = coder !== null && coder !== void 0 ? coder : new Coder(idl);\n        this._sub = null;\n        // Build namespaces.\n        const [instruction, transaction, rpc] = (() => {\n            let instruction = {};\n            let transaction = {};\n            let rpc = {};\n            idl.state.methods.forEach((m) => {\n                // Build instruction method.\n                const ixItem = InstructionNamespaceFactory.build(m, (ixName, ix) => coder.instruction.encodeState(ixName, ix), programId);\n                ixItem[\"accounts\"] = (accounts) => {\n                    const keys = stateInstructionKeys(programId, provider, m, accounts);\n                    return keys.concat(InstructionNamespaceFactory.accountsArray(accounts, m.accounts));\n                };\n                // Build transaction method.\n                const txItem = TransactionNamespaceFactory.build(m, ixItem);\n                // Build RPC method.\n                const rpcItem = RpcNamespaceFactory.build(m, txItem, parseIdlErrors(idl), provider);\n                // Attach them all to their respective namespaces.\n                const name = camelCase(m.name);\n                instruction[name] = ixItem;\n                transaction[name] = txItem;\n                rpc[name] = rpcItem;\n            });\n            return [instruction, transaction, rpc];\n        })();\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.rpc = rpc;\n    }\n    /**\n     * Returns the program ID owning the state.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Returns the deserialized state account.\n     */\n    async fetch() {\n        const addr = this.address();\n        const accountInfo = await this.provider.connection.getAccountInfo(addr);\n        if (accountInfo === null) {\n            throw new Error(`Account does not exist ${addr.toString()}`);\n        }\n        // Assert the account discriminator is correct.\n        const expectedDiscriminator = await stateDiscriminator(this._idl.state.struct.name);\n        if (expectedDiscriminator.compare(accountInfo.data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.coder.state.decode(accountInfo.data);\n    }\n    /**\n     * Returns the state address.\n     */\n    address() {\n        return this._address;\n    }\n    /**\n     * Returns an `EventEmitter` with a `\"change\"` event that's fired whenever\n     * the state account cahnges.\n     */\n    subscribe(commitment) {\n        if (this._sub !== null) {\n            return this._sub.ee;\n        }\n        const ee = new EventEmitter();\n        const listener = this.provider.connection.onAccountChange(this.address(), (acc) => {\n            const account = this.coder.state.decode(acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        this._sub = {\n            ee,\n            listener,\n        };\n        return ee;\n    }\n    /**\n     * Unsubscribes to state changes.\n     */\n    unsubscribe() {\n        if (this._sub !== null) {\n            this.provider.connection\n                .removeAccountChangeListener(this._sub.listener)\n                .then(async () => {\n                this._sub = null;\n            })\n                .catch(console.error);\n        }\n    }\n}\n// Calculates the deterministic address of the program's \"state\" account.\nfunction programStateAddress(programId) {\n    let [registrySigner] = findProgramAddressSync([], programId);\n    return createWithSeedSync(registrySigner, \"unversioned\", programId);\n}\n// Returns the common keys that are prepended to all instructions targeting\n// the \"state\" of a program.\nfunction stateInstructionKeys(programId, provider, m, accounts) {\n    if (m.name === \"new\") {\n        // Ctor `new` method.\n        const [programSigner] = findProgramAddressSync([], programId);\n        return [\n            {\n                pubkey: provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: programSigner, isWritable: false, isSigner: false },\n            {\n                pubkey: SystemProgram.programId,\n                isWritable: false,\n                isSigner: false,\n            },\n            { pubkey: programId, isWritable: false, isSigner: false },\n            {\n                pubkey: SYSVAR_RENT_PUBKEY,\n                isWritable: false,\n                isSigner: false,\n            },\n        ];\n    }\n    else {\n        validateAccounts(m.accounts, accounts);\n        return [\n            {\n                pubkey: programStateAddress(programId),\n                isWritable: true,\n                isSigner: false,\n            },\n        ];\n    }\n}\n//# sourceMappingURL=state.js.map","import camelCase from \"camelcase\";\nimport EventEmitter from \"eventemitter3\";\nimport * as bs58 from \"bs58\";\nimport { SystemProgram, } from \"@solana/web3.js\";\nimport Coder, { ACCOUNT_DISCRIMINATOR_SIZE, accountDiscriminator, accountSize, } from \"../../coder\";\nimport { translateAddress } from \"../common\";\nimport { getProvider } from \"../../\";\nimport * as pubkeyUtil from \"../../utils/pubkey\";\nexport default class AccountFactory {\n    static build(idl, coder, programId, provider) {\n        const accountFns = {};\n        idl.accounts.forEach((idlAccount) => {\n            const name = camelCase(idlAccount.name);\n            accountFns[name] = new AccountClient(idl, idlAccount, programId, provider, coder);\n        });\n        return accountFns;\n    }\n}\nexport class AccountClient {\n    constructor(idl, idlAccount, programId, provider, coder) {\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        this._coder = coder !== null && coder !== void 0 ? coder : new Coder(idl);\n        this._size = ACCOUNT_DISCRIMINATOR_SIZE + accountSize(idl, idlAccount);\n    }\n    /**\n     * Returns the number of bytes in this account.\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetch(address) {\n        const accountInfo = await this._provider.connection.getAccountInfo(translateAddress(address));\n        if (accountInfo === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        // Assert the account discriminator is correct.\n        const discriminator = await accountDiscriminator(this._idlAccount.name);\n        if (discriminator.compare(accountInfo.data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this._coder.accounts.decode(this._idlAccount.name, accountInfo.data);\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     */\n    async all(filter) {\n        let bytes = await accountDiscriminator(this._idlAccount.name);\n        if (filter !== undefined) {\n            bytes = Buffer.concat([bytes, filter]);\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [\n                {\n                    memcmp: {\n                        offset: 0,\n                        bytes: bs58.encode(bytes),\n                    },\n                },\n            ],\n        });\n        return resp.map(({ pubkey, account }) => {\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data),\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */\n    subscribe(address, commitment) {\n        if (subscriptions.get(address.toString())) {\n            return subscriptions.get(address.toString()).ee;\n        }\n        const ee = new EventEmitter();\n        address = translateAddress(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc) => {\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener,\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */\n    unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            this._provider.connection\n                .removeAccountChangeListener(sub.listener)\n                .then(() => {\n                subscriptions.delete(address.toString());\n            })\n                .catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */\n    async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        return SystemProgram.createAccount({\n            fromPubkey: this._provider.wallet.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId,\n        });\n    }\n    /**\n     * Function returning the associated account. Args are keys to associate.\n     * Order matters.\n     */\n    async associated(...args) {\n        const addr = await this.associatedAddress(...args);\n        return await this.fetch(addr);\n    }\n    /**\n     * Function returning the associated address. Args are keys to associate.\n     * Order matters.\n     */\n    async associatedAddress(...args) {\n        return await pubkeyUtil.associated(this._programId, ...args);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map();\n//# sourceMappingURL=account.js.map","export function encode(data) {\n    return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nexport function decode(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return Buffer.from([]);\n    }\n    return Buffer.from(key.map((byte) => parseInt(byte, 16)));\n}\n//# sourceMappingURL=hex.js.map","export function decode(array) {\n    const decoder = typeof TextDecoder === \"undefined\"\n        ? new (require(\"util\").TextDecoder)(\"utf-8\") // Node.\n        : new TextDecoder(\"utf-8\"); // Browser.\n    return decoder.decode(array);\n}\nexport function encode(input) {\n    const encoder = typeof TextEncoder === \"undefined\"\n        ? new (require(\"util\").TextEncoder)(\"utf-8\") // Node.\n        : new TextEncoder(); // Browser.\n    return encoder.encode(input);\n}\n//# sourceMappingURL=utf8.js.map","import * as bs58 from \"bs58\";\nexport function encode(data) {\n    return bs58.encode(data);\n}\nexport function decode(data) {\n    return bs58.decode(data);\n}\n//# sourceMappingURL=bs58.js.map","import * as base64 from \"base64-js\";\nexport function encode(data) {\n    return base64.fromByteArray(data);\n}\nexport function decode(data) {\n    return Buffer.from(base64.toByteArray(data));\n}\n//# sourceMappingURL=base64.js.map","import camelCase from \"camelcase\";\nimport StateFactory from \"./state\";\nimport InstructionFactory from \"./instruction\";\nimport TransactionFactory from \"./transaction\";\nimport RpcFactory from \"./rpc\";\nimport AccountFactory from \"./account\";\nimport SimulateFactory from \"./simulate\";\nimport { parseIdlErrors } from \"../common\";\n// Re-exports.\nexport { StateClient } from \"./state\";\nexport { AccountClient } from \"./account\";\nexport default class NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */\n    static build(idl, coder, programId, provider) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const idlErrors = parseIdlErrors(idl);\n        const state = StateFactory.build(idl, coder, programId, provider);\n        idl.instructions.forEach((idlIx) => {\n            const ixItem = InstructionFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n            const txItem = TransactionFactory.build(idlIx, ixItem);\n            const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const name = camelCase(idlIx.name);\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n        });\n        const account = idl.accounts\n            ? AccountFactory.build(idl, coder, programId, provider)\n            : {};\n        return [rpc, instruction, transaction, account, simulate, state];\n    }\n}\n//# sourceMappingURL=index.js.map","import { splitArgsAndCtx } from \"../context\";\nimport { EventParser } from \"../event\";\nimport { ProgramError } from \"../../error\";\nexport default class SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args) => {\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            let resp = undefined;\n            try {\n                resp = await provider.simulate(tx, ctx.signers, ctx.options);\n            }\n            catch (err) {\n                console.log(\"Translating error\", err);\n                let translatedErr = ProgramError.parse(err, idlErrors);\n                if (translatedErr === null) {\n                    throw err;\n                }\n                throw translatedErr;\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            if (resp.value.err) {\n                throw new Error(`Simulate error: ${resp.value.err.toString()}`);\n            }\n            const logs = resp.value.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new EventParser(coder, programId);\n                parser.parseLogs(logs, (event) => {\n                    events.push(event);\n                });\n            }\n            return { events, raw: logs };\n        };\n        return simulate;\n    }\n}\n//# sourceMappingURL=simulate.js.map","import camelCase from \"camelcase\";\nimport * as toml from \"toml\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Program } from \"./program\";\nimport { isBrowser } from \"./utils/common\";\nlet _populatedWorkspace = false;\n/**\n * The `workspace` namespace provides a convenience API to automatically\n * search for and deserialize [[Program]] objects defined by compiled IDLs\n * in an Anchor workspace.\n *\n * This API is for Node only.\n */\nconst workspace = new Proxy({}, {\n    get(workspaceCache, programName) {\n        if (isBrowser) {\n            console.log(\"Workspaces aren't available in the browser\");\n            return undefined;\n        }\n        const fs = require(\"fs\");\n        const process = require(\"process\");\n        if (!_populatedWorkspace) {\n            const path = require(\"path\");\n            let projectRoot = process.cwd();\n            while (!fs.existsSync(path.join(projectRoot, \"Anchor.toml\"))) {\n                const parentDir = path.dirname(projectRoot);\n                if (parentDir === projectRoot) {\n                    projectRoot = undefined;\n                }\n                projectRoot = parentDir;\n            }\n            if (projectRoot === undefined) {\n                throw new Error(\"Could not find workspace root.\");\n            }\n            const idlFolder = `${projectRoot}/target/idl`;\n            if (!fs.existsSync(idlFolder)) {\n                throw new Error(`${idlFolder} doesn't exist. Did you use \"anchor build\"?`);\n            }\n            const idlMap = new Map();\n            fs.readdirSync(idlFolder).forEach(file => {\n                const filePath = `${idlFolder}/${file}`;\n                const idlStr = fs.readFileSync(filePath);\n                const idl = JSON.parse(idlStr);\n                idlMap.set(idl.name, idl);\n                const name = camelCase(idl.name, { pascalCase: true });\n                if (idl.metadata && idl.metadata.address) {\n                    workspaceCache[name] = new Program(idl, new PublicKey(idl.metadata.address));\n                }\n            });\n            // Override the workspace programs if the user put them in the config.\n            const anchorToml = toml.parse(fs.readFileSync(path.join(projectRoot, \"Anchor.toml\"), \"utf-8\"));\n            const clusterId = anchorToml.provider.cluster;\n            if (anchorToml.clusters && anchorToml.clusters[clusterId]) {\n                attachWorkspaceOverride(workspaceCache, anchorToml.clusters[clusterId], idlMap);\n            }\n            _populatedWorkspace = true;\n        }\n        return workspaceCache[programName];\n    },\n});\nfunction attachWorkspaceOverride(workspaceCache, overrideConfig, idlMap) {\n    Object.keys(overrideConfig).forEach((programName) => {\n        const wsProgramName = camelCase(programName, { pascalCase: true });\n        const entry = overrideConfig[programName];\n        const overrideAddress = new PublicKey(typeof entry === \"string\" ? entry : entry.address);\n        let idl = idlMap.get(programName);\n        if (typeof entry !== \"string\" && entry.idl) {\n            idl = JSON.parse(require(\"fs\").readFileSync(entry.idl, \"utf-8\"));\n        }\n        workspaceCache[wsProgramName] = new Program(idl, overrideAddress);\n    });\n}\nexport default workspace;\n//# sourceMappingURL=workspace.js.map","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true) {\r\n            throw TypeError(INVALID + 'number');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (!sd--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","// Copyright 2018 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the “License”);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// <https://apache.org/licenses/LICENSE-2.0>.\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an “AS IS” BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass JSBI extends Array {\n    constructor(length, sign) {\n        super(length);\n        this.sign = sign;\n        // Explicitly set the prototype as per\n        // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, JSBI.prototype);\n        if (length > JSBI.__kMaxLength) {\n            throw new RangeError('Maximum BigInt size exceeded');\n        }\n    }\n    static BigInt(arg) {\n        if (typeof arg === 'number') {\n            if (arg === 0)\n                return JSBI.__zero();\n            if (JSBI.__isOneDigitInt(arg)) {\n                if (arg < 0) {\n                    return JSBI.__oneDigit(-arg, true);\n                }\n                return JSBI.__oneDigit(arg, false);\n            }\n            if (!Number.isFinite(arg) || Math.floor(arg) !== arg) {\n                throw new RangeError('The number ' + arg + ' cannot be converted to ' +\n                    'BigInt because it is not an integer');\n            }\n            return JSBI.__fromDouble(arg);\n        }\n        else if (typeof arg === 'string') {\n            const result = JSBI.__fromString(arg);\n            if (result === null) {\n                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');\n            }\n            return result;\n        }\n        else if (typeof arg === 'boolean') {\n            if (arg === true) {\n                return JSBI.__oneDigit(1, false);\n            }\n            return JSBI.__zero();\n        }\n        else if (typeof arg === 'object') {\n            if (arg.constructor === JSBI)\n                return arg;\n            const primitive = JSBI.__toPrimitive(arg);\n            return JSBI.BigInt(primitive);\n        }\n        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');\n    }\n    toDebugString() {\n        const result = ['BigInt['];\n        for (const digit of this) {\n            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');\n        }\n        result.push(']');\n        return result.join('');\n    }\n    toString(radix = 10) {\n        if (radix < 2 || radix > 36) {\n            throw new RangeError('toString() radix argument must be between 2 and 36');\n        }\n        if (this.length === 0)\n            return '0';\n        if ((radix & (radix - 1)) === 0) {\n            return JSBI.__toStringBasePowerOfTwo(this, radix);\n        }\n        return JSBI.__toStringGeneric(this, radix, false);\n    }\n    valueOf() {\n        throw new Error('Convert JSBI instances to native numbers using `toNumber`.');\n    }\n    // Equivalent of \"Number(my_bigint)\" in the native implementation.\n    // TODO: add more tests\n    static toNumber(x) {\n        const xLength = x.length;\n        if (xLength === 0)\n            return 0;\n        if (xLength === 1) {\n            const value = x.__unsignedDigit(0);\n            return x.sign ? -value : value;\n        }\n        const xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        if (xBitLength > 1024)\n            return x.sign ? -Infinity : Infinity;\n        let exponent = xBitLength - 1;\n        let currentDigit = xMsd;\n        let digitIndex = xLength - 1;\n        const shift = msdLeadingZeros + 3;\n        let mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;\n        mantissaHigh >>>= 12;\n        const mantissaHighBitsUnset = shift - 12;\n        let mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));\n        let mantissaLowBitsUnset = 20 + shift;\n        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            mantissaHigh |= (currentDigit >>> (30 - mantissaHighBitsUnset));\n            mantissaLow = currentDigit << mantissaHighBitsUnset + 2;\n            mantissaLowBitsUnset = mantissaHighBitsUnset + 2;\n        }\n        while (mantissaLowBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            if (mantissaLowBitsUnset >= 30) {\n                mantissaLow |= (currentDigit << (mantissaLowBitsUnset - 30));\n            }\n            else {\n                mantissaLow |= (currentDigit >>> (30 - mantissaLowBitsUnset));\n            }\n            mantissaLowBitsUnset -= 30;\n        }\n        const rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);\n        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {\n            mantissaLow = (mantissaLow + 1) >>> 0;\n            if (mantissaLow === 0) {\n                // Incrementing mantissaLow overflowed.\n                mantissaHigh++;\n                if ((mantissaHigh >>> 20) !== 0) {\n                    // Incrementing mantissaHigh overflowed.\n                    mantissaHigh = 0;\n                    exponent++;\n                    if (exponent > 1023) {\n                        // Incrementing the exponent overflowed.\n                        return x.sign ? -Infinity : Infinity;\n                    }\n                }\n            }\n        }\n        const signBit = x.sign ? (1 << 31) : 0;\n        exponent = (exponent + 0x3FF) << 20;\n        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;\n        JSBI.__kBitConversionInts[0] = mantissaLow;\n        return JSBI.__kBitConversionDouble[0];\n    }\n    // Operations.\n    static unaryMinus(x) {\n        if (x.length === 0)\n            return x;\n        const result = x.__copy();\n        result.sign = !x.sign;\n        return result;\n    }\n    static bitwiseNot(x) {\n        if (x.sign) {\n            // ~(-x) == ~(~(x-1)) == x-1\n            return JSBI.__absoluteSubOne(x).__trim();\n        }\n        // ~x == -x-1 == -(x+1)\n        return JSBI.__absoluteAddOne(x, true);\n    }\n    static exponentiate(x, y) {\n        if (y.sign) {\n            throw new RangeError('Exponent must be positive');\n        }\n        if (y.length === 0) {\n            return JSBI.__oneDigit(1, false);\n        }\n        if (x.length === 0)\n            return x;\n        if (x.length === 1 && x.__digit(0) === 1) {\n            // (-1) ** even_number == 1.\n            if (x.sign && (y.__digit(0) & 1) === 0) {\n                return JSBI.unaryMinus(x);\n            }\n            // (-1) ** odd_number == -1, 1 ** anything == 1.\n            return x;\n        }\n        // For all bases >= 2, very large exponents would lead to unrepresentable\n        // results.\n        if (y.length > 1)\n            throw new RangeError('BigInt too big');\n        let expValue = y.__unsignedDigit(0);\n        if (expValue === 1)\n            return x;\n        if (expValue >= JSBI.__kMaxLengthBits) {\n            throw new RangeError('BigInt too big');\n        }\n        if (x.length === 1 && x.__digit(0) === 2) {\n            // Fast path for 2^n.\n            const neededDigits = 1 + ((expValue / 30) | 0);\n            const sign = x.sign && ((expValue & 1) !== 0);\n            const result = new JSBI(neededDigits, sign);\n            result.__initializeDigits();\n            // All bits are zero. Now set the n-th bit.\n            const msd = 1 << (expValue % 30);\n            result.__setDigit(neededDigits - 1, msd);\n            return result;\n        }\n        let result = null;\n        let runningSquare = x;\n        // This implicitly sets the result's sign correctly.\n        if ((expValue & 1) !== 0)\n            result = x;\n        expValue >>= 1;\n        for (; expValue !== 0; expValue >>= 1) {\n            runningSquare = JSBI.multiply(runningSquare, runningSquare);\n            if ((expValue & 1) !== 0) {\n                if (result === null) {\n                    result = runningSquare;\n                }\n                else {\n                    result = JSBI.multiply(result, runningSquare);\n                }\n            }\n        }\n        // TODO see if there's a way for tsc to infer this will always happen?\n        return result;\n    }\n    static multiply(x, y) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return y;\n        let resultLength = x.length + y.length;\n        if (x.__clzmsd() + y.__clzmsd() >= 30) {\n            resultLength--;\n        }\n        const result = new JSBI(resultLength, x.sign !== y.sign);\n        result.__initializeDigits();\n        for (let i = 0; i < x.length; i++) {\n            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);\n        }\n        return result.__trim();\n    }\n    static divide(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return JSBI.__zero();\n        const resultSign = x.sign !== y.sign;\n        const divisor = y.__unsignedDigit(0);\n        let quotient;\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1) {\n                return resultSign === x.sign ? x : JSBI.unaryMinus(x);\n            }\n            quotient = JSBI.__absoluteDivSmall(x, divisor, null);\n        }\n        else {\n            quotient = JSBI.__absoluteDivLarge(x, y, true, false);\n        }\n        quotient.sign = resultSign;\n        return quotient.__trim();\n    }\n    static remainder(x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return x;\n        const divisor = y.__unsignedDigit(0);\n        if (y.length === 1 && divisor <= 0x7FFF) {\n            if (divisor === 1)\n                return JSBI.__zero();\n            const remainderDigit = JSBI.__absoluteModSmall(x, divisor);\n            if (remainderDigit === 0)\n                return JSBI.__zero();\n            return JSBI.__oneDigit(remainderDigit, x.sign);\n        }\n        const remainder = JSBI.__absoluteDivLarge(x, y, false, true);\n        remainder.sign = x.sign;\n        return remainder.__trim();\n    }\n    static add(x, y) {\n        const sign = x.sign;\n        if (sign === y.sign) {\n            // x + y == x + y\n            // -x + -y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x + -y == x - y == -(y - x)\n        // -x + y == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static subtract(x, y) {\n        const sign = x.sign;\n        if (sign !== y.sign) {\n            // x - (-y) == x + y\n            // (-x) - y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    }\n    static leftShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__rightShiftByAbsolute(x, y);\n        return JSBI.__leftShiftByAbsolute(x, y);\n    }\n    static signedRightShift(x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__leftShiftByAbsolute(x, y);\n        return JSBI.__rightShiftByAbsolute(x, y);\n    }\n    static unsignedRightShift() {\n        throw new TypeError('BigInts have no unsigned right shift; use >> instead');\n    }\n    static lessThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) < 0;\n    }\n    static lessThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) <= 0;\n    }\n    static greaterThan(x, y) {\n        return JSBI.__compareToBigInt(x, y) > 0;\n    }\n    static greaterThanOrEqual(x, y) {\n        return JSBI.__compareToBigInt(x, y) >= 0;\n    }\n    static equal(x, y) {\n        if (x.sign !== y.sign)\n            return false;\n        if (x.length !== y.length)\n            return false;\n        for (let i = 0; i < x.length; i++) {\n            if (x.__digit(i) !== y.__digit(i))\n                return false;\n        }\n        return true;\n    }\n    static notEqual(x, y) {\n        return !JSBI.equal(x, y);\n    }\n    static bitwiseAnd(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteAnd(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            const resultLength = Math.max(x.length, y.length) + 1;\n            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))\n            // == -(((x-1) | (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteOr(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x & (-y) == x & ~(y-1) == x &~ (y-1)\n        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();\n    }\n    static bitwiseXor(x, y) {\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteXor(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)\n            const resultLength = Math.max(x.length, y.length);\n            const result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            return JSBI.__absoluteXor(result, y1, result).__trim();\n        }\n        const resultLength = Math.max(x.length, y.length) + 1;\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteXor(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static bitwiseOr(x, y) {\n        const resultLength = Math.max(x.length, y.length);\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteOr(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))\n            // == -(((x-1) & (y-1)) + 1)\n            let result = JSBI.__absoluteSubOne(x, resultLength);\n            const y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteAnd(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            [x, y] = [y, x];\n        }\n        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)\n        let result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteAndNot(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    }\n    static asIntN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} has less than {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const topDigit = x.__unsignedDigit(neededLength - 1);\n        const compareDigit = 1 << ((n - 1) % 30);\n        if (x.length === neededLength && topDigit < compareDigit)\n            return x;\n        // Otherwise truncate and simulate two's complement.\n        const hasBit = (topDigit & compareDigit) === compareDigit;\n        if (!hasBit)\n            return JSBI.__truncateToNBits(n, x);\n        if (!x.sign)\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);\n        if ((topDigit & (compareDigit - 1)) === 0) {\n            for (let i = neededLength - 2; i >= 0; i--) {\n                if (x.__digit(i) !== 0) {\n                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n                }\n            }\n            if (x.length === neededLength && topDigit === compareDigit)\n                return x;\n            return JSBI.__truncateToNBits(n, x);\n        }\n        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n    }\n    static asUintN(n, x) {\n        if (x.length === 0)\n            return x;\n        n = Math.floor(n);\n        if (n < 0) {\n            throw new RangeError('Invalid value: not (convertible to) a safe integer');\n        }\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} is negative, simulate two's complement representation.\n        if (x.sign) {\n            if (n > JSBI.__kMaxLengthBits) {\n                throw new RangeError('BigInt too big');\n            }\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n        }\n        // If {x} is positive and has up to {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        const neededLength = ((n + 29) / 30) | 0;\n        if (x.length < neededLength)\n            return x;\n        const bitsInTopDigit = n % 30;\n        if (x.length == neededLength) {\n            if (bitsInTopDigit === 0)\n                return x;\n            const topDigit = x.__digit(neededLength - 1);\n            if ((topDigit >>> bitsInTopDigit) === 0)\n                return x;\n        }\n        // Otherwise, truncate.\n        return JSBI.__truncateToNBits(n, x);\n    }\n    // Operators.\n    static ADD(x, y) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string') {\n            if (typeof y !== 'string')\n                y = y.toString();\n            return x + y;\n        }\n        if (typeof y === 'string') {\n            return x.toString() + y;\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {\n            return JSBI.add(x, y);\n        }\n        if (typeof x === 'number' && typeof y === 'number') {\n            return x + y;\n        }\n        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');\n    }\n    static LT(x, y) {\n        return JSBI.__compare(x, y, 0);\n    }\n    static LE(x, y) {\n        return JSBI.__compare(x, y, 1);\n    }\n    static GT(x, y) {\n        return JSBI.__compare(x, y, 2);\n    }\n    static GE(x, y) {\n        return JSBI.__compare(x, y, 3);\n    }\n    static EQ(x, y) {\n        while (true) {\n            if (JSBI.__isBigInt(x)) {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.equal(x, y);\n                return JSBI.EQ(y, x);\n            }\n            else if (typeof x === 'number') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'string') {\n                if (JSBI.__isBigInt(y)) {\n                    x = JSBI.__fromString(x);\n                    if (x === null)\n                        return false;\n                    return JSBI.equal(x, y);\n                }\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'boolean') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, +x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'symbol') {\n                if (JSBI.__isBigInt(y))\n                    return false;\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'object') {\n                if (typeof y === 'object' && y.constructor !== JSBI)\n                    return x == y;\n                x = JSBI.__toPrimitive(x);\n            }\n            else {\n                return x == y;\n            }\n        }\n    }\n    static NE(x, y) {\n        return !JSBI.EQ(x, y);\n    }\n    // Helpers.\n    static __zero() {\n        return new JSBI(0, false);\n    }\n    static __oneDigit(value, sign) {\n        const result = new JSBI(1, sign);\n        result.__setDigit(0, value);\n        return result;\n    }\n    __copy() {\n        const result = new JSBI(this.length, this.sign);\n        for (let i = 0; i < this.length; i++) {\n            result[i] = this[i];\n        }\n        return result;\n    }\n    __trim() {\n        let newLength = this.length;\n        let last = this[newLength - 1];\n        while (last === 0) {\n            newLength--;\n            last = this[newLength - 1];\n            this.pop();\n        }\n        if (newLength === 0)\n            this.sign = false;\n        return this;\n    }\n    __initializeDigits() {\n        for (let i = 0; i < this.length; i++) {\n            this[i] = 0;\n        }\n    }\n    static __decideRounding(x, mantissaBitsUnset, digitIndex, currentDigit) {\n        if (mantissaBitsUnset > 0)\n            return -1;\n        let topUnconsumedBit;\n        if (mantissaBitsUnset < 0) {\n            topUnconsumedBit = -mantissaBitsUnset - 1;\n        }\n        else {\n            // {currentDigit} fit the mantissa exactly; look at the next digit.\n            if (digitIndex === 0)\n                return -1;\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            topUnconsumedBit = 29;\n        }\n        // If the most significant remaining bit is 0, round down.\n        let mask = 1 << topUnconsumedBit;\n        if ((currentDigit & mask) === 0)\n            return -1;\n        // If any other remaining bit is set, round up.\n        mask -= 1;\n        if ((currentDigit & mask) !== 0)\n            return 1;\n        while (digitIndex > 0) {\n            digitIndex--;\n            if (x.__digit(digitIndex) !== 0)\n                return 1;\n        }\n        return 0;\n    }\n    static __fromDouble(value) {\n        const sign = value < 0;\n        JSBI.__kBitConversionDouble[0] = value;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        const exponent = rawExponent - 0x3FF;\n        const digits = ((exponent / 30) | 0) + 1;\n        const result = new JSBI(digits, sign);\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        // 0-indexed position of most significant bit in most significant digit.\n        const msdTopBit = exponent % 30;\n        // Number of unused bits in the mantissa. We'll keep them shifted to the\n        // left (i.e. most significant part).\n        let remainingMantissaBits = 0;\n        // Next digit under construction.\n        let digit;\n        // First, build the MSD by shifting the mantissa appropriately.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            digit = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            digit = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        result.__setDigit(digits - 1, digit);\n        // Then fill in the rest of the digits.\n        for (let digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                digit = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                digit = 0;\n            }\n            result.__setDigit(digitIndex, digit);\n        }\n        return result.__trim();\n    }\n    static __isWhitespace(c) {\n        if (c <= 0x0D && c >= 0x09)\n            return true;\n        if (c <= 0x9F)\n            return c === 0x20;\n        if (c <= 0x01FFFF) {\n            return c === 0xA0 || c === 0x1680;\n        }\n        if (c <= 0x02FFFF) {\n            c &= 0x01FFFF;\n            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||\n                c === 0x5F || c === 0x1000;\n        }\n        return c === 0xFEFF;\n    }\n    static __fromString(string, radix = 0) {\n        let sign = 0;\n        let leadingZero = false;\n        const length = string.length;\n        let cursor = 0;\n        if (cursor === length)\n            return JSBI.__zero();\n        let current = string.charCodeAt(cursor);\n        // Skip whitespace.\n        while (JSBI.__isWhitespace(current)) {\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Detect radix.\n        if (current === 0x2B) { // '+'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = 1;\n        }\n        else if (current === 0x2D) { // '-'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = -1;\n        }\n        if (radix === 0) {\n            radix = 10;\n            if (current === 0x30) { // '0'\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    radix = 16;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'\n                    radix = 8;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'\n                    radix = 2;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        else if (radix === 16) {\n            if (current === 0x30) { // '0'\n                // Allow \"0x\" prefix.\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        if (sign !== 0 && radix !== 10)\n            return null;\n        // Skip leading zeros.\n        while (current === 0x30) {\n            leadingZero = true;\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Allocate result.\n        const chars = length - cursor;\n        let bitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        let roundup = JSBI.__kBitsPerCharTableMultiplier - 1;\n        if (chars > (1 << 30) / bitsPerChar)\n            return null;\n        const bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;\n        const resultLength = ((bitsMin + 29) / 30) | 0;\n        const result = new JSBI(resultLength, false);\n        // Parse.\n        const limDigit = radix < 10 ? radix : 10;\n        const limAlpha = radix > 10 ? radix - 10 : 0;\n        if ((radix & (radix - 1)) === 0) {\n            // Power-of-two radix.\n            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;\n            const parts = [];\n            const partsBits = [];\n            let done = false;\n            do {\n                let part = 0;\n                let bits = 0;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    bits += bitsPerChar;\n                    part = (part << bitsPerChar) | d;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                    if (bits + bitsPerChar > 30)\n                        break;\n                }\n                parts.push(part);\n                partsBits.push(bits);\n            } while (!done);\n            JSBI.__fillFromParts(result, parts, partsBits);\n        }\n        else {\n            result.__initializeDigits();\n            let done = false;\n            let charsSoFar = 0;\n            do {\n                let part = 0;\n                let multiplier = 1;\n                while (true) {\n                    let d;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    const m = multiplier * radix;\n                    if (m > 0x3FFFFFFF)\n                        break;\n                    multiplier = m;\n                    part = part * radix + d;\n                    charsSoFar++;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                }\n                roundup = JSBI.__kBitsPerCharTableMultiplier * 30 - 1;\n                const digitsSoFar = (((bitsPerChar * charsSoFar + roundup) >>>\n                    JSBI.__kBitsPerCharTableShift) / 30) | 0;\n                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);\n            } while (!done);\n        }\n        if (cursor !== length) {\n            if (!JSBI.__isWhitespace(current))\n                return null;\n            for (cursor++; cursor < length; cursor++) {\n                current = string.charCodeAt(cursor);\n                if (!JSBI.__isWhitespace(current))\n                    return null;\n            }\n        }\n        // Get result.\n        result.sign = (sign === -1);\n        return result.__trim();\n    }\n    static __fillFromParts(result, parts, partsBits) {\n        let digitIndex = 0;\n        let digit = 0;\n        let bitsInDigit = 0;\n        for (let i = parts.length - 1; i >= 0; i--) {\n            const part = parts[i];\n            const partBits = partsBits[i];\n            digit |= (part << bitsInDigit);\n            bitsInDigit += partBits;\n            if (bitsInDigit === 30) {\n                result.__setDigit(digitIndex++, digit);\n                bitsInDigit = 0;\n                digit = 0;\n            }\n            else if (bitsInDigit > 30) {\n                result.__setDigit(digitIndex++, digit & 0x3FFFFFFF);\n                bitsInDigit -= 30;\n                digit = part >>> (partBits - bitsInDigit);\n            }\n        }\n        if (digit !== 0) {\n            if (digitIndex >= result.length)\n                throw new Error('implementation bug');\n            result.__setDigit(digitIndex++, digit);\n        }\n        for (; digitIndex < result.length; digitIndex++) {\n            result.__setDigit(digitIndex, 0);\n        }\n    }\n    static __toStringBasePowerOfTwo(x, radix) {\n        const length = x.length;\n        let bits = radix - 1;\n        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);\n        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);\n        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);\n        const bitsPerChar = bits;\n        const charMask = radix - 1;\n        const msd = x.__digit(length - 1);\n        const msdLeadingZeros = JSBI.__clz30(msd);\n        const bitLength = length * 30 - msdLeadingZeros;\n        let charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;\n        if (x.sign)\n            charsRequired++;\n        if (charsRequired > (1 << 28))\n            throw new Error('string too long');\n        const result = new Array(charsRequired);\n        let pos = charsRequired - 1;\n        let digit = 0;\n        let availableBits = 0;\n        for (let i = 0; i < length - 1; i++) {\n            const newDigit = x.__digit(i);\n            const current = (digit | (newDigit << availableBits)) & charMask;\n            result[pos--] = JSBI.__kConversionChars[current];\n            const consumedBits = bitsPerChar - availableBits;\n            digit = newDigit >>> consumedBits;\n            availableBits = 30 - consumedBits;\n            while (availableBits >= bitsPerChar) {\n                result[pos--] = JSBI.__kConversionChars[digit & charMask];\n                digit >>>= bitsPerChar;\n                availableBits -= bitsPerChar;\n            }\n        }\n        const current = (digit | (msd << availableBits)) & charMask;\n        result[pos--] = JSBI.__kConversionChars[current];\n        digit = msd >>> (bitsPerChar - availableBits);\n        while (digit !== 0) {\n            result[pos--] = JSBI.__kConversionChars[digit & charMask];\n            digit >>>= bitsPerChar;\n        }\n        if (x.sign)\n            result[pos--] = '-';\n        if (pos !== -1)\n            throw new Error('implementation bug');\n        return result.join('');\n    }\n    static __toStringGeneric(x, radix, isRecursiveCall) {\n        const length = x.length;\n        if (length === 0)\n            return '';\n        if (length === 1) {\n            let result = x.__unsignedDigit(0).toString(radix);\n            if (isRecursiveCall === false && x.sign) {\n                result = '-' + result;\n            }\n            return result;\n        }\n        const bitLength = length * 30 - JSBI.__clz30(x.__digit(length - 1));\n        const maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        const minBitsPerChar = maxBitsPerChar - 1;\n        let charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;\n        charsRequired += minBitsPerChar - 1;\n        charsRequired = (charsRequired / minBitsPerChar) | 0;\n        const secondHalfChars = (charsRequired + 1) >> 1;\n        // Divide-and-conquer: split by a power of {radix} that's approximately\n        // the square root of {x}, then recurse.\n        const conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));\n        let quotient;\n        let secondHalf;\n        const divisor = conqueror.__unsignedDigit(0);\n        if (conqueror.length === 1 && divisor <= 0x7FFF) {\n            quotient = new JSBI(x.length, false);\n            quotient.__initializeDigits();\n            let remainder = 0;\n            for (let i = x.length * 2 - 1; i >= 0; i--) {\n                const input = (remainder << 15) | x.__halfDigit(i);\n                quotient.__setHalfDigit(i, (input / divisor) | 0);\n                remainder = (input % divisor) | 0;\n            }\n            secondHalf = remainder.toString(radix);\n        }\n        else {\n            const divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);\n            quotient = divisionResult.quotient;\n            const remainder = divisionResult.remainder.__trim();\n            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);\n        }\n        quotient.__trim();\n        let firstHalf = JSBI.__toStringGeneric(quotient, radix, true);\n        while (secondHalf.length < secondHalfChars) {\n            secondHalf = '0' + secondHalf;\n        }\n        if (isRecursiveCall === false && x.sign) {\n            firstHalf = '-' + firstHalf;\n        }\n        return firstHalf + secondHalf;\n    }\n    static __unequalSign(leftNegative) {\n        return leftNegative ? -1 : 1;\n    }\n    static __absoluteGreater(bothNegative) {\n        return bothNegative ? -1 : 1;\n    }\n    static __absoluteLess(bothNegative) {\n        return bothNegative ? 1 : -1;\n    }\n    static __compareToBigInt(x, y) {\n        const xSign = x.sign;\n        if (xSign !== y.sign)\n            return JSBI.__unequalSign(xSign);\n        const result = JSBI.__absoluteCompare(x, y);\n        if (result > 0)\n            return JSBI.__absoluteGreater(xSign);\n        if (result < 0)\n            return JSBI.__absoluteLess(xSign);\n        return 0;\n    }\n    static __compareToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            const xSign = x.sign;\n            const ySign = (y < 0);\n            if (xSign !== ySign)\n                return JSBI.__unequalSign(xSign);\n            if (x.length === 0) {\n                if (ySign)\n                    throw new Error('implementation bug');\n                return y === 0 ? 0 : -1;\n            }\n            // Any multi-digit BigInt is bigger than an int32.\n            if (x.length > 1)\n                return JSBI.__absoluteGreater(xSign);\n            const yAbs = Math.abs(y);\n            const xDigit = x.__unsignedDigit(0);\n            if (xDigit > yAbs)\n                return JSBI.__absoluteGreater(xSign);\n            if (xDigit < yAbs)\n                return JSBI.__absoluteLess(xSign);\n            return 0;\n        }\n        return JSBI.__compareToDouble(x, y);\n    }\n    static __compareToDouble(x, y) {\n        if (y !== y)\n            return y; // NaN.\n        if (y === Infinity)\n            return -1;\n        if (y === -Infinity)\n            return 1;\n        const xSign = x.sign;\n        const ySign = (y < 0);\n        if (xSign !== ySign)\n            return JSBI.__unequalSign(xSign);\n        if (y === 0) {\n            throw new Error('implementation bug: should be handled elsewhere');\n        }\n        if (x.length === 0)\n            return -1;\n        JSBI.__kBitConversionDouble[0] = y;\n        const rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        if (rawExponent === 0x7FF) {\n            throw new Error('implementation bug: handled elsewhere');\n        }\n        const exponent = rawExponent - 0x3FF;\n        if (exponent < 0) {\n            // The absolute value of y is less than 1. Only 0n has an absolute\n            // value smaller than that, but we've already covered that case.\n            return JSBI.__absoluteGreater(xSign);\n        }\n        const xLength = x.length;\n        let xMsd = x.__digit(xLength - 1);\n        const msdLeadingZeros = JSBI.__clz30(xMsd);\n        const xBitLength = xLength * 30 - msdLeadingZeros;\n        const yBitLength = exponent + 1;\n        if (xBitLength < yBitLength)\n            return JSBI.__absoluteLess(xSign);\n        if (xBitLength > yBitLength)\n            return JSBI.__absoluteGreater(xSign);\n        // Same sign, same bit length. Shift mantissa to align with x and compare\n        // bit for bit.\n        const kHiddenBit = 0x00100000;\n        let mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        let mantissaLow = JSBI.__kBitConversionInts[0];\n        const kMantissaHighTopBit = 20;\n        const msdTopBit = 29 - msdLeadingZeros;\n        if (msdTopBit !== (((xBitLength - 1) % 30) | 0)) {\n            throw new Error('implementation bug');\n        }\n        let compareMantissa; // Shifted chunk of mantissa.\n        let remainingMantissaBits = 0;\n        // First, compare most significant digit against beginning of mantissa.\n        if (msdTopBit < kMantissaHighTopBit) {\n            const shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            compareMantissa = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            compareMantissa = mantissaHigh;\n            mantissaHigh = mantissaLow;\n            mantissaLow = 0;\n        }\n        else {\n            const shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            compareMantissa =\n                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n            mantissaLow = 0;\n        }\n        xMsd = xMsd >>> 0;\n        compareMantissa = compareMantissa >>> 0;\n        if (xMsd > compareMantissa)\n            return JSBI.__absoluteGreater(xSign);\n        if (xMsd < compareMantissa)\n            return JSBI.__absoluteLess(xSign);\n        // Then, compare additional digits against remaining mantissa bits.\n        for (let digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 30;\n                compareMantissa = mantissaHigh >>> 2;\n                mantissaHigh = (mantissaHigh << 30) | (mantissaLow >>> 2);\n                mantissaLow = (mantissaLow << 30);\n            }\n            else {\n                compareMantissa = 0;\n            }\n            const digit = x.__unsignedDigit(digitIndex);\n            if (digit > compareMantissa)\n                return JSBI.__absoluteGreater(xSign);\n            if (digit < compareMantissa)\n                return JSBI.__absoluteLess(xSign);\n        }\n        // Integer parts are equal; check whether {y} has a fractional part.\n        if (mantissaHigh !== 0 || mantissaLow !== 0) {\n            if (remainingMantissaBits === 0)\n                throw new Error('implementation bug');\n            return JSBI.__absoluteLess(xSign);\n        }\n        return 0;\n    }\n    static __equalToNumber(x, y) {\n        if (JSBI.__isOneDigitInt(y)) {\n            if (y === 0)\n                return x.length === 0;\n            // Any multi-digit BigInt is bigger than an int32.\n            return (x.length === 1) && (x.sign === (y < 0)) &&\n                (x.__unsignedDigit(0) === Math.abs(y));\n        }\n        return JSBI.__compareToDouble(x, y) === 0;\n    }\n    // Comparison operations, chosen such that \"op ^ 2\" reverses direction:\n    // 0 - lessThan\n    // 1 - lessThanOrEqual\n    // 2 - greaterThan\n    // 3 - greaterThanOrEqual\n    static __comparisonResultToBool(result, op) {\n        switch (op) {\n            case 0: return result < 0;\n            case 1: return result <= 0;\n            case 2: return result > 0;\n            case 3: return result >= 0;\n        }\n    }\n    static __compare(x, y, op) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string' && typeof y === 'string') {\n            switch (op) {\n                case 0: return x < y;\n                case 1: return x <= y;\n                case 2: return x > y;\n                case 3: return x >= y;\n            }\n        }\n        if (JSBI.__isBigInt(x) && typeof y === 'string') {\n            y = JSBI.__fromString(y);\n            if (y === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        if (typeof x === 'string' && JSBI.__isBigInt(y)) {\n            x = JSBI.__fromString(x);\n            if (x === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x)) {\n            if (JSBI.__isBigInt(y)) {\n                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n            }\n            if (typeof y !== 'number')\n                throw new Error('implementation bug');\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);\n        }\n        if (typeof x !== 'number')\n            throw new Error('implementation bug');\n        if (JSBI.__isBigInt(y)) {\n            // Note that \"op ^ 2\" reverses the op's direction.\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));\n        }\n        if (typeof y !== 'number')\n            throw new Error('implementation bug');\n        switch (op) {\n            case 0: return x < y;\n            case 1: return x <= y;\n            case 2: return x > y;\n            case 3: return x >= y;\n        }\n    }\n    __clzmsd() {\n        return JSBI.__clz30(this.__digit(this.length - 1));\n    }\n    static __absoluteAdd(x, y, resultSign) {\n        if (x.length < y.length)\n            return JSBI.__absoluteAdd(y, x, resultSign);\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        let resultLength = x.length;\n        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {\n            resultLength++;\n        }\n        const result = new JSBI(resultLength, resultSign);\n        let carry = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) + y.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (i < result.length) {\n            result.__setDigit(i, carry);\n        }\n        return result.__trim();\n    }\n    static __absoluteSub(x, y, resultSign) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        const result = new JSBI(x.length, resultSign);\n        let borrow = 0;\n        let i = 0;\n        for (; i < y.length; i++) {\n            const r = x.__digit(i) - y.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < x.length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        return result.__trim();\n    }\n    static __absoluteAddOne(x, sign, result = null) {\n        const inputLength = x.length;\n        if (result === null) {\n            result = new JSBI(inputLength, sign);\n        }\n        else {\n            result.sign = sign;\n        }\n        let carry = 1;\n        for (let i = 0; i < inputLength; i++) {\n            const r = x.__digit(i) + carry;\n            carry = r >>> 30;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (carry !== 0) {\n            result.__setDigitGrow(inputLength, 1);\n        }\n        return result;\n    }\n    static __absoluteSubOne(x, resultLength) {\n        const length = x.length;\n        resultLength = resultLength || length;\n        const result = new JSBI(resultLength, false);\n        let borrow = 1;\n        for (let i = 0; i < length; i++) {\n            const r = x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (borrow !== 0)\n            throw new Error('implementation bug');\n        for (let i = length; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAnd(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = numPairs;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & y.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteAndNot(x, y, result = null) {\n        const xLength = x.length;\n        const yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteOr(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) | y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteXor(x, y, result = null) {\n        let xLength = x.length;\n        let yLength = y.length;\n        let numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            const tmp = x;\n            const tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        let resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        let i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    }\n    static __absoluteCompare(x, y) {\n        const diff = x.length - y.length;\n        if (diff !== 0)\n            return diff;\n        let i = x.length - 1;\n        while (i >= 0 && x.__digit(i) === y.__digit(i))\n            i--;\n        if (i < 0)\n            return 0;\n        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;\n    }\n    static __multiplyAccumulate(multiplicand, multiplier, accumulator, accumulatorIndex) {\n        if (multiplier === 0)\n            return;\n        const m2Low = multiplier & 0x7FFF;\n        const m2High = multiplier >>> 15;\n        let carry = 0;\n        let high = 0;\n        for (let i = 0; i < multiplicand.length; i++, accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            const m1 = multiplicand.__digit(i);\n            const m1Low = m1 & 0x7FFF;\n            const m1High = m1 >>> 15;\n            const rLow = JSBI.__imul(m1Low, m2Low);\n            const rMid1 = JSBI.__imul(m1Low, m2High);\n            const rMid2 = JSBI.__imul(m1High, m2Low);\n            const rHigh = JSBI.__imul(m1High, m2High);\n            acc += high + rLow + carry;\n            carry = acc >>> 30;\n            acc &= 0x3FFFFFFF;\n            acc += ((rMid1 & 0x7FFF) << 15) + ((rMid2 & 0x7FFF) << 15);\n            carry += acc >>> 30;\n            high = rHigh + (rMid1 >>> 15) + (rMid2 >>> 15);\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n        for (; carry !== 0 || high !== 0; accumulatorIndex++) {\n            let acc = accumulator.__digit(accumulatorIndex);\n            acc += carry + high;\n            high = 0;\n            carry = acc >>> 30;\n            accumulator.__setDigit(accumulatorIndex, acc & 0x3FFFFFFF);\n        }\n    }\n    static __internalMultiplyAdd(source, factor, summand, n, result) {\n        let carry = summand;\n        let high = 0;\n        for (let i = 0; i < n; i++) {\n            const digit = source.__digit(i);\n            const rx = JSBI.__imul(digit & 0x7FFF, factor);\n            const ry = JSBI.__imul(digit >>> 15, factor);\n            const r = rx + ((ry & 0x7FFF) << 15) + high + carry;\n            carry = r >>> 30;\n            high = ry >>> 15;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        if (result.length > n) {\n            result.__setDigit(n++, carry + high);\n            while (n < result.length) {\n                result.__setDigit(n++, 0);\n            }\n        }\n        else {\n            if (carry + high !== 0)\n                throw new Error('implementation bug');\n        }\n    }\n    __inplaceMultiplyAdd(multiplier, summand, length) {\n        if (length > this.length)\n            length = this.length;\n        const mLow = multiplier & 0x7FFF;\n        const mHigh = multiplier >>> 15;\n        let carry = 0;\n        let high = summand;\n        for (let i = 0; i < length; i++) {\n            const d = this.__digit(i);\n            const dLow = d & 0x7FFF;\n            const dHigh = d >>> 15;\n            const pLow = JSBI.__imul(dLow, mLow);\n            const pMid1 = JSBI.__imul(dLow, mHigh);\n            const pMid2 = JSBI.__imul(dHigh, mLow);\n            const pHigh = JSBI.__imul(dHigh, mHigh);\n            let result = high + pLow + carry;\n            carry = result >>> 30;\n            result &= 0x3FFFFFFF;\n            result += ((pMid1 & 0x7FFF) << 15) + ((pMid2 & 0x7FFF) << 15);\n            carry += result >>> 30;\n            high = pHigh + (pMid1 >>> 15) + (pMid2 >>> 15);\n            this.__setDigit(i, result & 0x3FFFFFFF);\n        }\n        if (carry !== 0 || high !== 0) {\n            throw new Error('implementation bug');\n        }\n    }\n    static __absoluteDivSmall(x, divisor, quotient = null) {\n        if (quotient === null)\n            quotient = new JSBI(x.length, false);\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i -= 2) {\n            let input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            const upperHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            input = ((remainder << 15) | x.__halfDigit(i - 1)) >>> 0;\n            const lowerHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            quotient.__setDigit(i >>> 1, (upperHalf << 15) | lowerHalf);\n        }\n        return quotient;\n    }\n    static __absoluteModSmall(x, divisor) {\n        let remainder = 0;\n        for (let i = x.length * 2 - 1; i >= 0; i--) {\n            const input = ((remainder << 15) | x.__halfDigit(i)) >>> 0;\n            remainder = (input % divisor) | 0;\n        }\n        return remainder;\n    }\n    static __absoluteDivLarge(dividend, divisor, wantQuotient, wantRemainder) {\n        const n = divisor.__halfDigitLength();\n        const n2 = divisor.length;\n        const m = dividend.__halfDigitLength() - n;\n        let q = null;\n        if (wantQuotient) {\n            q = new JSBI((m + 2) >>> 1, false);\n            q.__initializeDigits();\n        }\n        const qhatv = new JSBI((n + 2) >>> 1, false);\n        qhatv.__initializeDigits();\n        // D1.\n        const shift = JSBI.__clz15(divisor.__halfDigit(n - 1));\n        if (shift > 0) {\n            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);\n        }\n        const u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);\n        // D2.\n        const vn1 = divisor.__halfDigit(n - 1);\n        let halfDigitBuffer = 0;\n        for (let j = m; j >= 0; j--) {\n            // D3.\n            let qhat = 0x7FFF;\n            const ujn = u.__halfDigit(j + n);\n            if (ujn !== vn1) {\n                const input = ((ujn << 15) | u.__halfDigit(j + n - 1)) >>> 0;\n                qhat = (input / vn1) | 0;\n                let rhat = (input % vn1) | 0;\n                const vn2 = divisor.__halfDigit(n - 2);\n                const ujn2 = u.__halfDigit(j + n - 2);\n                while ((JSBI.__imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {\n                    qhat--;\n                    rhat += vn1;\n                    if (rhat > 0x7FFF)\n                        break;\n                }\n            }\n            // D4.\n            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);\n            let c = u.__inplaceSub(qhatv, j, n + 1);\n            if (c !== 0) {\n                c = u.__inplaceAdd(divisor, j, n);\n                u.__setHalfDigit(j + n, (u.__halfDigit(j + n) + c) & 0x7FFF);\n                qhat--;\n            }\n            if (wantQuotient) {\n                if (j & 1) {\n                    halfDigitBuffer = qhat << 15;\n                }\n                else {\n                    // TODO make this statically determinable\n                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);\n                }\n            }\n        }\n        if (wantRemainder) {\n            u.__inplaceRightShift(shift);\n            if (wantQuotient) {\n                return { quotient: q, remainder: u };\n            }\n            return u;\n        }\n        if (wantQuotient)\n            return q;\n        // TODO find a way to make this statically unreachable?\n        throw new Error('unreachable');\n    }\n    static __clz15(value) {\n        return JSBI.__clz30(value) - 15;\n    }\n    // TODO: work on full digits, like __inplaceSub?\n    __inplaceAdd(summand, startIndex, halfDigits) {\n        let carry = 0;\n        for (let i = 0; i < halfDigits; i++) {\n            const sum = this.__halfDigit(startIndex + i) +\n                summand.__halfDigit(i) +\n                carry;\n            carry = sum >>> 15;\n            this.__setHalfDigit(startIndex + i, sum & 0x7FFF);\n        }\n        return carry;\n    }\n    __inplaceSub(subtrahend, startIndex, halfDigits) {\n        const fullSteps = (halfDigits - 1) >>> 1;\n        let borrow = 0;\n        if (startIndex & 1) {\n            // this:   [..][..][..]\n            // subtr.:   [..][..]\n            startIndex >>= 1;\n            let current = this.__digit(startIndex);\n            let r0 = current & 0x7FFF;\n            let i = 0;\n            for (; i < fullSteps; i++) {\n                const sub = subtrahend.__digit(i);\n                const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - (sub >>> 15) - borrow;\n                borrow = (r0 >>> 15) & 1;\n            }\n            // Unrolling the last iteration gives a 5% performance benefit!\n            const sub = subtrahend.__digit(i);\n            const r15 = (current >>> 15) - (sub & 0x7FFF) - borrow;\n            borrow = (r15 >>> 15) & 1;\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            const subTop = sub >>> 15;\n            if (startIndex + i + 1 >= this.length) {\n                throw new RangeError('out of bounds');\n            }\n            if ((halfDigits & 1) === 0) {\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0x7FFF) - subTop - borrow;\n                borrow = (r0 >>> 15) & 1;\n                this.__setDigit(startIndex + subtrahend.length, (current & 0x3FFF8000) | (r0 & 0x7FFF));\n            }\n        }\n        else {\n            startIndex >>= 1;\n            let i = 0;\n            for (; i < subtrahend.length - 1; i++) {\n                const current = this.__digit(startIndex + i);\n                const sub = subtrahend.__digit(i);\n                const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n                borrow = (r0 >>> 15) & 1;\n                const r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n                this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n            }\n            const current = this.__digit(startIndex + i);\n            const sub = subtrahend.__digit(i);\n            const r0 = (current & 0x7FFF) - (sub & 0x7FFF) - borrow;\n            borrow = (r0 >>> 15) & 1;\n            let r15 = 0;\n            if ((halfDigits & 1) === 0) {\n                r15 = (current >>> 15) - (sub >>> 15) - borrow;\n                borrow = (r15 >>> 15) & 1;\n            }\n            this.__setDigit(startIndex + i, ((r15 & 0x7FFF) << 15) | (r0 & 0x7FFF));\n        }\n        return borrow;\n    }\n    __inplaceRightShift(shift) {\n        if (shift === 0)\n            return;\n        let carry = this.__digit(0) >>> shift;\n        const last = this.length - 1;\n        for (let i = 0; i < last; i++) {\n            const d = this.__digit(i + 1);\n            this.__setDigit(i, ((d << (30 - shift)) & 0x3FFFFFFF) | carry);\n            carry = d >>> shift;\n        }\n        this.__setDigit(last, carry);\n    }\n    static __specialLeftShift(x, shift, addDigit) {\n        const n = x.length;\n        const resultLength = n + addDigit;\n        const result = new JSBI(resultLength, false);\n        if (shift === 0) {\n            for (let i = 0; i < n; i++)\n                result.__setDigit(i, x.__digit(i));\n            if (addDigit > 0)\n                result.__setDigit(n, 0);\n            return result;\n        }\n        let carry = 0;\n        for (let i = 0; i < n; i++) {\n            const d = x.__digit(i);\n            result.__setDigit(i, ((d << shift) & 0x3FFFFFFF) | carry);\n            carry = d >>> (30 - shift);\n        }\n        if (addDigit > 0) {\n            result.__setDigit(n, carry);\n        }\n        return result;\n    }\n    static __leftShiftByAbsolute(x, y) {\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            throw new RangeError('BigInt too big');\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        const length = x.length;\n        const grow = bitsShift !== 0 &&\n            (x.__digit(length - 1) >>> (30 - bitsShift)) !== 0;\n        const resultLength = length + digitShift + (grow ? 1 : 0);\n        const result = new JSBI(resultLength, x.sign);\n        if (bitsShift === 0) {\n            let i = 0;\n            for (; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (; i < resultLength; i++) {\n                result.__setDigit(i, x.__digit(i - digitShift));\n            }\n        }\n        else {\n            let carry = 0;\n            for (let i = 0; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (let i = 0; i < length; i++) {\n                const d = x.__digit(i);\n                result.__setDigit(i + digitShift, ((d << bitsShift) & 0x3FFFFFFF) | carry);\n                carry = d >>> (30 - bitsShift);\n            }\n            if (grow) {\n                result.__setDigit(length + digitShift, carry);\n            }\n            else {\n                if (carry !== 0)\n                    throw new Error('implementation bug');\n            }\n        }\n        return result.__trim();\n    }\n    static __rightShiftByAbsolute(x, y) {\n        const length = x.length;\n        const sign = x.sign;\n        const shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        const digitShift = (shift / 30) | 0;\n        const bitsShift = shift % 30;\n        let resultLength = length - digitShift;\n        if (resultLength <= 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        // For negative numbers, round down if any bit was shifted out (so that\n        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen\n        // and whether itc an cause overflow into a new digit. If we allocate the\n        // result large enough up front, it avoids having to do grow it later.\n        let mustRoundDown = false;\n        if (sign) {\n            const mask = (1 << bitsShift) - 1;\n            if ((x.__digit(digitShift) & mask) !== 0) {\n                mustRoundDown = true;\n            }\n            else {\n                for (let i = 0; i < digitShift; i++) {\n                    if (x.__digit(i) !== 0) {\n                        mustRoundDown = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // If bitsShift is non-zero, it frees up bits, preventing overflow.\n        if (mustRoundDown && bitsShift === 0) {\n            // Overflow cannot happen if the most significant digit has unset bits.\n            const msd = x.__digit(length - 1);\n            const roundingCanOverflow = ~msd === 0;\n            if (roundingCanOverflow)\n                resultLength++;\n        }\n        let result = new JSBI(resultLength, sign);\n        if (bitsShift === 0) {\n            // Zero out any overflow digit (see \"roundingCanOverflow\" above).\n            result.__setDigit(resultLength - 1, 0);\n            for (let i = digitShift; i < length; i++) {\n                result.__setDigit(i - digitShift, x.__digit(i));\n            }\n        }\n        else {\n            let carry = x.__digit(digitShift) >>> bitsShift;\n            const last = length - digitShift - 1;\n            for (let i = 0; i < last; i++) {\n                const d = x.__digit(i + digitShift + 1);\n                result.__setDigit(i, ((d << (30 - bitsShift)) & 0x3FFFFFFF) | carry);\n                carry = d >>> bitsShift;\n            }\n            result.__setDigit(last, carry);\n        }\n        if (mustRoundDown) {\n            // Since the result is negative, rounding down means adding one to its\n            // absolute value. This cannot overflow.\n            result = JSBI.__absoluteAddOne(result, true, result);\n        }\n        return result.__trim();\n    }\n    static __rightShiftByMaximum(sign) {\n        if (sign) {\n            return JSBI.__oneDigit(1, true);\n        }\n        return JSBI.__zero();\n    }\n    static __toShiftAmount(x) {\n        if (x.length > 1)\n            return -1;\n        const value = x.__unsignedDigit(0);\n        if (value > JSBI.__kMaxLengthBits)\n            return -1;\n        return value;\n    }\n    static __toPrimitive(obj, hint = 'default') {\n        if (typeof obj !== 'object')\n            return obj;\n        if (obj.constructor === JSBI)\n            return obj;\n        if (typeof Symbol !== 'undefined' &&\n            typeof Symbol.toPrimitive === 'symbol') {\n            const exoticToPrim = obj[Symbol.toPrimitive];\n            if (exoticToPrim) {\n                const primitive = exoticToPrim(hint);\n                if (typeof primitive !== 'object')\n                    return primitive;\n                throw new TypeError('Cannot convert object to primitive value');\n            }\n        }\n        const valueOf = obj.valueOf;\n        if (valueOf) {\n            const primitive = valueOf.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        const toString = obj.toString;\n        if (toString) {\n            const primitive = toString.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        throw new TypeError('Cannot convert object to primitive value');\n    }\n    static __toNumeric(value) {\n        if (JSBI.__isBigInt(value))\n            return value;\n        return +value;\n    }\n    static __isBigInt(value) {\n        return typeof value === 'object' && value !== null &&\n            value.constructor === JSBI;\n    }\n    static __truncateToNBits(n, x) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, x.sign);\n        const last = neededDigits - 1;\n        for (let i = 0; i < last; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        let msd = x.__digit(last);\n        if ((n % 30) !== 0) {\n            const drop = 32 - (n % 30);\n            msd = (msd << drop) >>> drop;\n        }\n        result.__setDigit(last, msd);\n        return result.__trim();\n    }\n    static __truncateAndSubFromPowerOfTwo(n, x, resultSign) {\n        const neededDigits = ((n + 29) / 30) | 0;\n        const result = new JSBI(neededDigits, resultSign);\n        let i = 0;\n        const last = neededDigits - 1;\n        let borrow = 0;\n        const limit = Math.min(last, x.length);\n        for (; i < limit; i++) {\n            const r = 0 - x.__digit(i) - borrow;\n            borrow = (r >>> 30) & 1;\n            result.__setDigit(i, r & 0x3FFFFFFF);\n        }\n        for (; i < last; i++) {\n            result.__setDigit(i, (-borrow & 0x3FFFFFFF) | 0);\n        }\n        let msd = last < x.length ? x.__digit(last) : 0;\n        const msdBitsConsumed = n % 30;\n        let resultMsd;\n        if (msdBitsConsumed === 0) {\n            resultMsd = 0 - msd - borrow;\n            resultMsd &= 0x3FFFFFFF;\n        }\n        else {\n            const drop = 32 - msdBitsConsumed;\n            msd = (msd << drop) >>> drop;\n            const minuendMsd = 1 << (32 - drop);\n            resultMsd = minuendMsd - msd - borrow;\n            resultMsd &= (minuendMsd - 1);\n        }\n        result.__setDigit(last, resultMsd);\n        return result.__trim();\n    }\n    // Digit helpers.\n    __digit(i) {\n        return this[i];\n    }\n    __unsignedDigit(i) {\n        return this[i] >>> 0;\n    }\n    __setDigit(i, digit) {\n        this[i] = digit | 0;\n    }\n    __setDigitGrow(i, digit) {\n        this[i] = digit | 0;\n    }\n    __halfDigitLength() {\n        const len = this.length;\n        if (this.__unsignedDigit(len - 1) <= 0x7FFF)\n            return len * 2 - 1;\n        return len * 2;\n    }\n    __halfDigit(i) {\n        return (this[i >>> 1] >>> ((i & 1) * 15)) & 0x7FFF;\n    }\n    __setHalfDigit(i, value) {\n        const digitIndex = i >>> 1;\n        const previous = this.__digit(digitIndex);\n        const updated = (i & 1) ? (previous & 0x7FFF) | (value << 15)\n            : (previous & 0x3FFF8000) | (value & 0x7FFF);\n        this.__setDigit(digitIndex, updated);\n    }\n    static __digitPow(base, exponent) {\n        let result = 1;\n        while (exponent > 0) {\n            if (exponent & 1)\n                result *= base;\n            exponent >>>= 1;\n            base *= base;\n        }\n        return result;\n    }\n    static __isOneDigitInt(x) {\n        return (x & 0x3FFFFFFF) === x;\n    }\n}\nJSBI.__kMaxLength = 1 << 25;\nJSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;\n// Lookup table for the maximum number of bits required per character of a\n// base-N string representation of a number. To increase accuracy, the array\n// value is the actual value multiplied by 32. To generate this table:\n//\n// for (let i = 0; i <= 36; i++) {\n//   console.log(Math.ceil(Math.log2(i) * 32) + ',');\n// }\nJSBI.__kMaxBitsPerChar = [\n    0, 0, 32, 51, 64, 75, 83, 90, 96,\n    102, 107, 111, 115, 119, 122, 126, 128,\n    131, 134, 136, 139, 141, 143, 145, 147,\n    149, 151, 153, 154, 156, 158, 159, 160,\n    162, 163, 165, 166, // 33..36\n];\nJSBI.__kBitsPerCharTableShift = 5;\nJSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;\nJSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nJSBI.__kBitConversionBuffer = new ArrayBuffer(8);\nJSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);\nJSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);\n// For IE11 compatibility.\n// Note that the custom replacements are tailored for JSBI's needs, and as\n// such are not reusable as general-purpose polyfills.\nJSBI.__clz30 = Math.clz32 ? function (x) {\n    return Math.clz32(x) - 2;\n} : function (x) {\n    if (x === 0)\n        return 30;\n    return 29 - (Math.log(x >>> 0) / Math.LN2 | 0) | 0;\n};\nJSBI.__imul = Math.imul || function (a, b) {\n    return (a * b) | 0;\n};\nexport default JSBI;\n//# sourceMappingURL=jsbi.js.map","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = mapValues;\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar errcode = require('err-code');\nvar retry = require('retry');\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction isRetryError(err) {\n    return err && err.code === 'EPROMISERETRY' && hasOwn.call(err, 'retried');\n}\n\nfunction promiseRetry(fn, options) {\n    var temp;\n    var operation;\n\n    if (typeof fn === 'object' && typeof options === 'function') {\n        // Swap options and fn when using alternate signature (options, fn)\n        temp = options;\n        options = fn;\n        fn = temp;\n    }\n\n    operation = retry.operation(options);\n\n    return new Promise(function (resolve, reject) {\n        operation.attempt(function (number) {\n            Promise.resolve()\n            .then(function () {\n                return fn(function (err) {\n                    if (isRetryError(err)) {\n                        err = err.retried;\n                    }\n\n                    throw errcode(new Error('Retrying'), 'EPROMISERETRY', { retried: err });\n                }, number);\n            })\n            .then(resolve, function (err) {\n                if (isRetryError(err)) {\n                    err = err.retried;\n\n                    if (operation.retry(err || new Error())) {\n                        return;\n                    }\n                }\n\n                reject(err);\n            });\n        });\n    });\n}\n\nmodule.exports = promiseRetry;\n","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && options.forever,\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) module.exports = toFormat;\r\n","var parser = require('./lib/parser');\nvar compiler = require('./lib/compiler');\n\nmodule.exports = {\n  parse: function(input) {\n    var nodes = parser.parse(input.toString());\n    return compiler.compile(nodes);\n  }\n};\n","\"use strict\";\nfunction compile(nodes) {\n  var assignedPaths = [];\n  var valueAssignments = [];\n  var currentPath = \"\";\n  var data = Object.create(null);\n  var context = data;\n  var arrayMode = false;\n\n  return reduce(nodes);\n\n  function reduce(nodes) {\n    var node;\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      switch (node.type) {\n      case \"Assign\":\n        assign(node);\n        break;\n      case \"ObjectPath\":\n        setPath(node);\n        break;\n      case \"ArrayPath\":\n        addTableArray(node);\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  function genError(err, line, col) {\n    var ex = new Error(err);\n    ex.line = line;\n    ex.column = col;\n    throw ex;\n  }\n\n  function assign(node) {\n    var key = node.key;\n    var value = node.value;\n    var line = node.line;\n    var column = node.column;\n\n    var fullPath;\n    if (currentPath) {\n      fullPath = currentPath + \".\" + key;\n    } else {\n      fullPath = key;\n    }\n    if (typeof context[key] !== \"undefined\") {\n      genError(\"Cannot redefine existing key '\" + fullPath + \"'.\", line, column);\n    }\n\n    context[key] = reduceValueNode(value);\n\n    if (!pathAssigned(fullPath)) {\n      assignedPaths.push(fullPath);\n      valueAssignments.push(fullPath);\n    }\n  }\n\n\n  function pathAssigned(path) {\n    return assignedPaths.indexOf(path) !== -1;\n  }\n\n  function reduceValueNode(node) {\n    if (node.type === \"Array\") {\n      return reduceArrayWithTypeChecking(node.value);\n    } else if (node.type === \"InlineTable\") {\n      return reduceInlineTableNode(node.value);\n    } else {\n      return node.value;\n    }\n  }\n\n  function reduceInlineTableNode(values) {\n    var obj = Object.create(null);\n    for (var i = 0; i < values.length; i++) {\n      var val = values[i];\n      if (val.value.type === \"InlineTable\") {\n        obj[val.key] = reduceInlineTableNode(val.value.value);\n      } else if (val.type === \"InlineTableValue\") {\n        obj[val.key] = reduceValueNode(val.value);\n      }\n    }\n\n    return obj;\n  }\n\n  function setPath(node) {\n    var path = node.value;\n    var quotedPath = path.map(quoteDottedString).join(\".\");\n    var line = node.line;\n    var column = node.column;\n\n    if (pathAssigned(quotedPath)) {\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\n    }\n    assignedPaths.push(quotedPath);\n    context = deepRef(data, path, Object.create(null), line, column);\n    currentPath = path;\n  }\n\n  function addTableArray(node) {\n    var path = node.value;\n    var quotedPath = path.map(quoteDottedString).join(\".\");\n    var line = node.line;\n    var column = node.column;\n\n    if (!pathAssigned(quotedPath)) {\n      assignedPaths.push(quotedPath);\n    }\n    assignedPaths = assignedPaths.filter(function(p) {\n      return p.indexOf(quotedPath) !== 0;\n    });\n    assignedPaths.push(quotedPath);\n    context = deepRef(data, path, [], line, column);\n    currentPath = quotedPath;\n\n    if (context instanceof Array) {\n      var newObj = Object.create(null);\n      context.push(newObj);\n      context = newObj;\n    } else {\n      genError(\"Cannot redefine existing key '\" + path + \"'.\", line, column);\n    }\n  }\n\n  // Given a path 'a.b.c', create (as necessary) `start.a`,\n  // `start.a.b`, and `start.a.b.c`, assigning `value` to `start.a.b.c`.\n  // If `a` or `b` are arrays and have items in them, the last item in the\n  // array is used as the context for the next sub-path.\n  function deepRef(start, keys, value, line, column) {\n    var traversed = [];\n    var traversedPath = \"\";\n    var path = keys.join(\".\");\n    var ctx = start;\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      traversed.push(key);\n      traversedPath = traversed.join(\".\");\n      if (typeof ctx[key] === \"undefined\") {\n        if (i === keys.length - 1) {\n          ctx[key] = value;\n        } else {\n          ctx[key] = Object.create(null);\n        }\n      } else if (i !== keys.length - 1 && valueAssignments.indexOf(traversedPath) > -1) {\n        // already a non-object value at key, can't be used as part of a new path\n        genError(\"Cannot redefine existing key '\" + traversedPath + \"'.\", line, column);\n      }\n\n      ctx = ctx[key];\n      if (ctx instanceof Array && ctx.length && i < keys.length - 1) {\n        ctx = ctx[ctx.length - 1];\n      }\n    }\n\n    return ctx;\n  }\n\n  function reduceArrayWithTypeChecking(array) {\n    // Ensure that all items in the array are of the same type\n    var firstType = null;\n    for (var i = 0; i < array.length; i++) {\n      var node = array[i];\n      if (firstType === null) {\n        firstType = node.type;\n      } else {\n        if (node.type !== firstType) {\n          genError(\"Cannot add value of type \" + node.type + \" to array of type \" +\n            firstType + \".\", node.line, node.column);\n        }\n      }\n    }\n\n    // Recursively reduce array of nodes into array of the nodes' values\n    return array.map(reduceValueNode);\n  }\n\n  function quoteDottedString(str) {\n    if (str.indexOf(\".\") > -1) {\n      return \"\\\"\" + str + \"\\\"\";\n    } else {\n      return str;\n    }\n  }\n}\n\nmodule.exports = {\n  compile: compile\n};\n","module.exports = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function() { return nodes },\n        peg$c2 = peg$FAILED,\n        peg$c3 = \"#\",\n        peg$c4 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c5 = void 0,\n        peg$c6 = { type: \"any\", description: \"any character\" },\n        peg$c7 = \"[\",\n        peg$c8 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c9 = \"]\",\n        peg$c10 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c11 = function(name) { addNode(node('ObjectPath', name, line, column)) },\n        peg$c12 = function(name) { addNode(node('ArrayPath', name, line, column)) },\n        peg$c13 = function(parts, name) { return parts.concat(name) },\n        peg$c14 = function(name) { return [name] },\n        peg$c15 = function(name) { return name },\n        peg$c16 = \".\",\n        peg$c17 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c18 = \"=\",\n        peg$c19 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c20 = function(key, value) { addNode(node('Assign', value, line, column, key)) },\n        peg$c21 = function(chars) { return chars.join('') },\n        peg$c22 = function(node) { return node.value },\n        peg$c23 = \"\\\"\\\"\\\"\",\n        peg$c24 = { type: \"literal\", value: \"\\\"\\\"\\\"\", description: \"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\" },\n        peg$c25 = null,\n        peg$c26 = function(chars) { return node('String', chars.join(''), line, column) },\n        peg$c27 = \"\\\"\",\n        peg$c28 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c29 = \"'''\",\n        peg$c30 = { type: \"literal\", value: \"'''\", description: \"\\\"'''\\\"\" },\n        peg$c31 = \"'\",\n        peg$c32 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c33 = function(char) { return char },\n        peg$c34 = function(char) { return char},\n        peg$c35 = \"\\\\\",\n        peg$c36 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c37 = function() { return '' },\n        peg$c38 = \"e\",\n        peg$c39 = { type: \"literal\", value: \"e\", description: \"\\\"e\\\"\" },\n        peg$c40 = \"E\",\n        peg$c41 = { type: \"literal\", value: \"E\", description: \"\\\"E\\\"\" },\n        peg$c42 = function(left, right) { return node('Float', parseFloat(left + 'e' + right), line, column) },\n        peg$c43 = function(text) { return node('Float', parseFloat(text), line, column) },\n        peg$c44 = \"+\",\n        peg$c45 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c46 = function(digits) { return digits.join('') },\n        peg$c47 = \"-\",\n        peg$c48 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c49 = function(digits) { return '-' + digits.join('') },\n        peg$c50 = function(text) { return node('Integer', parseInt(text, 10), line, column) },\n        peg$c51 = \"true\",\n        peg$c52 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c53 = function() { return node('Boolean', true, line, column) },\n        peg$c54 = \"false\",\n        peg$c55 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c56 = function() { return node('Boolean', false, line, column) },\n        peg$c57 = function() { return node('Array', [], line, column) },\n        peg$c58 = function(value) { return node('Array', value ? [value] : [], line, column) },\n        peg$c59 = function(values) { return node('Array', values, line, column) },\n        peg$c60 = function(values, value) { return node('Array', values.concat(value), line, column) },\n        peg$c61 = function(value) { return value },\n        peg$c62 = \",\",\n        peg$c63 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c64 = \"{\",\n        peg$c65 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c66 = \"}\",\n        peg$c67 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c68 = function(values) { return node('InlineTable', values, line, column) },\n        peg$c69 = function(key, value) { return node('InlineTableValue', value, line, column, key) },\n        peg$c70 = function(digits) { return \".\" + digits },\n        peg$c71 = function(date) { return  date.join('') },\n        peg$c72 = \":\",\n        peg$c73 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c74 = function(time) { return time.join('') },\n        peg$c75 = \"T\",\n        peg$c76 = { type: \"literal\", value: \"T\", description: \"\\\"T\\\"\" },\n        peg$c77 = \"Z\",\n        peg$c78 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\n        peg$c79 = function(date, time) { return node('Date', new Date(date + \"T\" + time + \"Z\"), line, column) },\n        peg$c80 = function(date, time) { return node('Date', new Date(date + \"T\" + time), line, column) },\n        peg$c81 = /^[ \\t]/,\n        peg$c82 = { type: \"class\", value: \"[ \\\\t]\", description: \"[ \\\\t]\" },\n        peg$c83 = \"\\n\",\n        peg$c84 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\n        peg$c85 = \"\\r\",\n        peg$c86 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\n        peg$c87 = /^[0-9a-f]/i,\n        peg$c88 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c89 = /^[0-9]/,\n        peg$c90 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c91 = \"_\",\n        peg$c92 = { type: \"literal\", value: \"_\", description: \"\\\"_\\\"\" },\n        peg$c93 = function() { return \"\" },\n        peg$c94 = /^[A-Za-z0-9_\\-]/,\n        peg$c95 = { type: \"class\", value: \"[A-Za-z0-9_\\\\-]\", description: \"[A-Za-z0-9_\\\\-]\" },\n        peg$c96 = function(d) { return d.join('') },\n        peg$c97 = \"\\\\\\\"\",\n        peg$c98 = { type: \"literal\", value: \"\\\\\\\"\", description: \"\\\"\\\\\\\\\\\\\\\"\\\"\" },\n        peg$c99 = function() { return '\"'  },\n        peg$c100 = \"\\\\\\\\\",\n        peg$c101 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c102 = function() { return '\\\\' },\n        peg$c103 = \"\\\\b\",\n        peg$c104 = { type: \"literal\", value: \"\\\\b\", description: \"\\\"\\\\\\\\b\\\"\" },\n        peg$c105 = function() { return '\\b' },\n        peg$c106 = \"\\\\t\",\n        peg$c107 = { type: \"literal\", value: \"\\\\t\", description: \"\\\"\\\\\\\\t\\\"\" },\n        peg$c108 = function() { return '\\t' },\n        peg$c109 = \"\\\\n\",\n        peg$c110 = { type: \"literal\", value: \"\\\\n\", description: \"\\\"\\\\\\\\n\\\"\" },\n        peg$c111 = function() { return '\\n' },\n        peg$c112 = \"\\\\f\",\n        peg$c113 = { type: \"literal\", value: \"\\\\f\", description: \"\\\"\\\\\\\\f\\\"\" },\n        peg$c114 = function() { return '\\f' },\n        peg$c115 = \"\\\\r\",\n        peg$c116 = { type: \"literal\", value: \"\\\\r\", description: \"\\\"\\\\\\\\r\\\"\" },\n        peg$c117 = function() { return '\\r' },\n        peg$c118 = \"\\\\U\",\n        peg$c119 = { type: \"literal\", value: \"\\\\U\", description: \"\\\"\\\\\\\\U\\\"\" },\n        peg$c120 = function(digits) { return convertCodePoint(digits.join('')) },\n        peg$c121 = \"\\\\u\",\n        peg$c122 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$cache = {},\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 0,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseline();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseline();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1();\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseline() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 49 + 1,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexpression();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parsecomment();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsecomment();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseNL();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseNL();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseEOF();\n              }\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parseS();\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseNL();\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseNL();\n            }\n          } else {\n            s2 = peg$c2;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseEOF();\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNL();\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseexpression() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 2,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsecomment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepath();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetablearray();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseassignment();\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsecomment() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 49 + 3,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c3;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseNL();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseEOF();\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = peg$c5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$c2;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parseNL();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseEOF();\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 49 + 4,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetable_key();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c9;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c11(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetablearray() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 49 + 5,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetable_key();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s6 = peg$c9;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c12(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetable_key() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 6,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsedot_ended_table_key_part();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsedot_ended_table_key_part();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetable_key_part();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c13(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsetable_key_part();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c14(s1);\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetable_key_part() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 7,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsequoted_key();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c15(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedot_ended_table_key_part() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 49 + 8,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsequoted_key();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s4 = peg$c16;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseS();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseS();\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c15(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseassignment() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 49 + 9,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsekey();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c18;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsevalue();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c20(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsequoted_key();\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseS();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s3 = peg$c18;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseS();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsevalue();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c20(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsekey() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 10,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseASCII_BASIC();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseASCII_BASIC();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c21(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsequoted_key() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 11,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsedouble_quoted_single_line_string();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c22(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsesingle_quoted_single_line_string();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c22(s1);\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 12,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsestring();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedatetime();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsefloat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseinteger();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseboolean();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsearray();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseinline_table();\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 13,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parsedouble_quoted_multiline_string();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedouble_quoted_single_line_string();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsesingle_quoted_multiline_string();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsesingle_quoted_single_line_string();\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedouble_quoted_multiline_string() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 14,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c23) {\n        s1 = peg$c23;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNL();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c25;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsemultiline_string_char();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsemultiline_string_char();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c23) {\n              s4 = peg$c23;\n              peg$currPos += 3;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c26(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedouble_quoted_single_line_string() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 49 + 15,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsestring_char();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsestring_char();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c27;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c26(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesingle_quoted_multiline_string() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 16,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c29) {\n        s1 = peg$c29;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNL();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c25;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsemultiline_literal_char();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsemultiline_literal_char();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c29) {\n              s4 = peg$c29;\n              peg$currPos += 3;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c26(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesingle_quoted_single_line_string() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 49 + 17,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c31;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseliteral_char();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseliteral_char();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c31;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c26(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 18,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseESCAPED();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s2 = peg$c27;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n          s1 = peg$c5;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c33(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseliteral_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 19,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s2 = peg$c31;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c5;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c33(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_string_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 20,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseESCAPED();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsemultiline_string_delim();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 3) === peg$c23) {\n            s2 = peg$c23;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          peg$silentFails--;\n          if (s2 === peg$FAILED) {\n            s1 = peg$c5;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n          if (s1 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s2 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c34(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_string_delim() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 21,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c35;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNL();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseNLS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseNLS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsemultiline_literal_char() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 22,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c29) {\n        s2 = peg$c29;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c5;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c33(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefloat() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 49 + 23,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat_text();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseinteger_text();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 101) {\n          s2 = peg$c38;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 69) {\n            s2 = peg$c40;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseinteger_text();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c42(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefloat_text();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c43(s1);\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefloat_text() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 49 + 24,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c44;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c25;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseDIGITS();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c16;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGITS();\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c46(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parseDIGITS();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseDIGITS();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c49(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinteger() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 25,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseinteger_text();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c50(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinteger_text() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 26,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c44;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c25;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseDIGIT_OR_UNDER();\n          }\n        } else {\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c16;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = peg$c5;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c46(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseDIGIT_OR_UNDER();\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseDIGIT_OR_UNDER();\n            }\n          } else {\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c5;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c49(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseboolean() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 27,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c51) {\n        s1 = peg$c51;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c53();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c54) {\n          s1 = peg$c54;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c55); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c56();\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 28,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsearray_sep();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsearray_sep();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c9;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c57();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c7;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsearray_value();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c25;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s3 = peg$c9;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c58(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s1 = peg$c7;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsearray_value_list();\n            if (s3 !== peg$FAILED) {\n              while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsearray_value_list();\n              }\n            } else {\n              s2 = peg$c2;\n            }\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s3 = peg$c9;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c59(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 91) {\n              s1 = peg$c7;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = [];\n              s3 = peg$parsearray_value_list();\n              if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                  s2.push(s3);\n                  s3 = peg$parsearray_value_list();\n                }\n              } else {\n                s2 = peg$c2;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsearray_value();\n                if (s3 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s4 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s4 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c60(s2, s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_value() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 29,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsearray_sep();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsearray_sep();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsearray_sep();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsearray_sep();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c61(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_value_list() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 49 + 30,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsearray_sep();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsearray_sep();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsearray_sep();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsearray_sep();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c62;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c63); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parsearray_sep();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsearray_sep();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c61(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsearray_sep() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 31,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseS();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNL();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsecomment();\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinline_table() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 49 + 32,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c64;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseinline_table_assignment();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseinline_table_assignment();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c66;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c68(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseinline_table_assignment() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 49 + 33,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsekey();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s4 = peg$c18;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsevalue();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s8 = peg$c62;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c69(s2, s6);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsekey();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseS();\n            }\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s4 = peg$c18;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseS();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseS();\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsevalue();\n                  if (s6 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c69(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesecfragment() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 34,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c16;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDIGITS();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c70(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedate() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      var key    = peg$currPos * 49 + 35,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseDIGIT_OR_UNDER();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s6 = peg$c47;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseDIGIT_OR_UNDER();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 45) {\n                      s9 = peg$c47;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseDIGIT_OR_UNDER();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseDIGIT_OR_UNDER();\n                        if (s11 !== peg$FAILED) {\n                          s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11];\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c71(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetime() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 49 + 36,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c72;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDIGIT_OR_UNDER();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c72;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c73); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseDIGIT_OR_UNDER();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesecfragment();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c25;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10];\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c74(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetime_with_offset() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;\n\n      var key    = peg$currPos * 49 + 37,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDIGIT_OR_UNDER();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c72;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseDIGIT_OR_UNDER();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDIGIT_OR_UNDER();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c72;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c73); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseDIGIT_OR_UNDER();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseDIGIT_OR_UNDER();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsesecfragment();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c25;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 45) {\n                          s11 = peg$c47;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                        }\n                        if (s11 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 43) {\n                            s11 = peg$c44;\n                            peg$currPos++;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                          }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseDIGIT_OR_UNDER();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseDIGIT_OR_UNDER();\n                            if (s13 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 58) {\n                                s14 = peg$c72;\n                                peg$currPos++;\n                              } else {\n                                s14 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parseDIGIT_OR_UNDER();\n                                if (s15 !== peg$FAILED) {\n                                  s16 = peg$parseDIGIT_OR_UNDER();\n                                  if (s16 !== peg$FAILED) {\n                                    s2 = [s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16];\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$c2;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$c2;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$c2;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$c2;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$c2;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c2;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c74(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsedatetime() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 49 + 38,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsedate();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 84) {\n          s2 = peg$c75;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetime();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 90) {\n              s4 = peg$c77;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c78); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c79(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsedate();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 84) {\n            s2 = peg$c75;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c76); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsetime_with_offset();\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c80(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseS() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 39,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c81.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseNL() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 40,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c83;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s1 = peg$c85;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s2 = peg$c83;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseNLS() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 41,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$parseNL();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseS();\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseEOF() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 42,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      peg$silentFails--;\n      if (s1 === peg$FAILED) {\n        s0 = peg$c5;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseHEX() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 43,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c87.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseDIGIT_OR_UNDER() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 44,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s1 = peg$c91;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c92); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c93();\n        }\n        s0 = s1;\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseASCII_BASIC() {\n      var s0;\n\n      var key    = peg$currPos * 49 + 45,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      if (peg$c94.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseDIGITS() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 49 + 46,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseDIGIT_OR_UNDER();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseDIGIT_OR_UNDER();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c96(s1);\n      }\n      s0 = s1;\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseESCAPED() {\n      var s0, s1;\n\n      var key    = peg$currPos * 49 + 47,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c99();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c100) {\n          s1 = peg$c100;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c101); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c102();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c103) {\n            s1 = peg$c103;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c104); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c105();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c106) {\n              s1 = peg$c106;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c107); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c108();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c109) {\n                s1 = peg$c109;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c110); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c111();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c112) {\n                  s1 = peg$c112;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c113); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c114();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 2) === peg$c115) {\n                    s1 = peg$c115;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c117();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseESCAPED_UNICODE();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseESCAPED_UNICODE() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      var key    = peg$currPos * 49 + 48,\n          cached = peg$cache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c118) {\n        s1 = peg$c118;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c119); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseHEX();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseHEX();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseHEX();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseHEX();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseHEX();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseHEX();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseHEX();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseHEX();\n                      if (s10 !== peg$FAILED) {\n                        s3 = [s3, s4, s5, s6, s7, s8, s9, s10];\n                        s2 = s3;\n                      } else {\n                        peg$currPos = s2;\n                        s2 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c120(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c121) {\n          s1 = peg$c121;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c122); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parseHEX();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseHEX();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseHEX();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseHEX();\n                if (s6 !== peg$FAILED) {\n                  s3 = [s3, s4, s5, s6];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c120(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      }\n\n      peg$cache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\n      var nodes = [];\n\n      function genError(err, line, col) {\n        var ex = new Error(err);\n        ex.line = line;\n        ex.column = col;\n        throw ex;\n      }\n\n      function addNode(node) {\n        nodes.push(node);\n      }\n\n      function node(type, value, line, column, key) {\n        var obj = { type: type, value: value, line: line(), column: column() };\n        if (key) obj.key = key;\n        return obj;\n      }\n\n      function convertCodePoint(str, line, col) {\n        var num = parseInt(\"0x\" + str);\n\n        if (\n          !isFinite(num) ||\n          Math.floor(num) != num ||\n          num < 0 ||\n          num > 0x10FFFF ||\n          (num > 0xD7FF && num < 0xE000)\n        ) {\n          genError(\"Invalid Unicode escape code: \" + str, line, col);\n        } else {\n          return fromCodePoint(num);\n        }\n      }\n\n      function fromCodePoint() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n          return '';\n        }\n        var result = '';\n        while (++index < length) {\n          var codePoint = Number(arguments[index]);\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint);\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000;\n            highSurrogate = (codePoint >> 10) + 0xD800;\n            lowSurrogate = (codePoint % 0x400) + 0xDC00;\n            codeUnits.push(highSurrogate, lowSurrogate);\n          }\n          if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n            result += String.fromCharCode.apply(null, codeUnits);\n            codeUnits.length = 0;\n          }\n        }\n        return result;\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n"],"names":["isSigner","isWritable","ms","Map","PublicKey","Error","PublicKeyLayout","property","data","length","span","mintInfo","decode","mintAuthority","mintAuthorityOption","supply","isInitialized","freezeAuthority","freezeAuthorityOption","decimals","e","this","numerator","ENV","RAW_SOL_MINT","constructor","info","_mintAccount","network","chainIdToNetwork","chainId","mintAccount","address","isRawSOL","equals","name","symbol","icon","logoURI","other","tokensEqual","toString","toJSON","hasTag","tag","tags","includes","fromMint","mint","opts","slice","ChainId","Localnet","load","connection","mintAccountInfo","getAccountInfo","a","b","undefined","rawSol","wrappedSol","makeTokenForAllNetworks","token","MainnetBeta","devnet","Devnet","testnet","Testnet","localnet","NETWORK_TO_CHAIN_ID","CHAIN_ID_TO_NETWORK","Object","entries","reduce","acc","env","recommendedFeesRaw","config","swapProgramID","keys","TransactionInstruction","programId","AdminInstruction","decodeSwap","stableSwapData","adminAccount","adminFeeAccountA","adminFeeAccountB","tokenAccountA","tokenAccountB","poolTokenMint","tokenPool","mintA","mintB","initialAmpFactor","from","targetAmpFactor","startRampTimestamp","startRampTs","stopRampTimestamp","stopRampTs","fees","raw","adminTrade","adminTradeFeeNumerator","adminTradeFeeDenominator","adminWithdraw","adminWithdrawFeeNumerator","adminWithdrawFeeDenominator","trade","tradeFeeNumerator","tradeFeeDenominator","withdraw","withdrawFeeNumerator","withdrawFeeDenominator","isPaused","nonce","futureAdminDeadline","futureAdminAccount","tokenA","adminFeeAccount","reserve","tokenB","StableSwapInstruction","state","getMinimumBalanceForRentExemption","swapAccount","programID","accountInfo","owner","toBase58","authority","loadWithData","exchange","swapAccountData","tokenProgramID","swap","args","adminDestination","poolDestination","userAuthority","userSource","poolSource","userDestination","amountIn","minimumAmountOut","dataLayout","alloc","encode","instruction","SWAP","toBuffer","pubkey","SYSVAR_CLOCK_PUBKEY","deposit","sourceA","sourceB","poolTokenAccount","tokenAmountA","tokenAmountB","minimumPoolTokenAmount","DEPOSIT","poolMint","sourceAccount","userAccountA","userAccountB","poolTokenAmount","minimumTokenA","minimumTokenB","WITHDRAW","withdrawOne","quoteTokenAccount","adminDestinationAccount","baseTokenAccount","destinationAccount","minimumTokenAmount","withdrawOneDataLayout","WITHDRAW_ONE","provider","getProvider","_provider","wallet","static","preflightCommitment","commitment","url","async","tx","signers","feePayer","publicKey","recentBlockhash","getRecentBlockhash","blockhash","signTransaction","filter","s","forEach","kp","partialSign","rawTx","serialize","sendAndConfirmRawTransaction","reqs","txs","map","r","signedTxs","signAllTransactions","sigs","k","push","transaction","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","_serialize","encoding","res","_rpcRequest","error","message","result","local","IdlError","super","ProgramError","code","msg","params","err","idlErrors","errorCode","components","split","parseInt","parseErr","errorMsg","get","LangErrorMessage","IdlCoder","field","types","fieldName","camelCase","type","borsh","fieldLayout","vec","option","defined","filtered","t","JSON","stringify","typeDefLayout","arrayTy","array","arrayLen","innerLayout","typeDef","kind","fieldLayouts","fields","variants","variant","f","hasOwnProperty","replicate","__assign","assign","i","n","arguments","p","prototype","call","apply","lowerCase","str","toLowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","replace","input","re","value","RegExp","options","accountSize","idl","idlAccount","variantSizes","typeSize","Math","max","ty","arraySize","sighash","nameSpace","ixName","preimage","_a","splitRegexp","_b","stripRegexp","_c","transform","_d","delimiter","start","end","charAt","join","dotCase","Buffer","sha256","InstructionCoder","ixLayout","parseIxLayout","sighashLayouts","instructions","ix","sh","set","bs58","layout","methods","_encode","encodeState","buffer","methodName","len","ixLayouts","m","arg","Array","accounts","concat","decoder","format","accountMetas","InstructionFormatter","idlIx","console","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","meta","idx","idlType","d","formatIdlDataDefined","struct","enumType","namedFields","fieldData","v","variantName","pascalCase","prefix","account","accName","toUpperCase","newPrefix","flat","AccountsCoder","accountLayouts","layouts","accountName","accountData","discriminator","accountDiscriminator","camelcase","EventCoder","events","event","eventTypeDef","discriminators","base64","log","logArr","disc","eventName","_AVAILABLE_FEATURES","Set","_FEATURES","isSet","key","has","StateCoder","stateDiscriminator","accData","ns","features.isSet","Coder","parseIdlErrors","errors","toInstruction","ixArg","validateAccounts","ixAccounts","translateAddress","getMultipleAccounts","publicKeys","getMultipleAccountsCore","batches","ceil","_","index","Promise","all","batch","commitmentOverride","assert","executable","lamports","Transaction","add","send","createWithSeedSync","fromPublicKey","seed","hash","sha256Sync","createProgramAddressSync","seeds","TypeError","Uint8Array","publicKeyBytes","BN","toArray","findProgramAddressSync","arr","byteOffset","byteLength","associated","assoc","byte","padStart","indexOf","substr","match","TextDecoder","TextEncoder","TOKEN_PROGRAM_ID","ASSOCIATED_PROGRAM_ID","IDL_ACCOUNT_LAYOUT","splitArgsAndCtx","inputLen","pop","InstructionNamespaceFactory","encodeFn","ixArgs","ctx","remainingAccounts","accs","accountsArray","rpcAccs","isMut","RpcFactory","txFn","translatedErr","parse","TransactionFactory","ixFn","preInstructions","postInstructions","StateClient","coder","_idl","_programId","_address","programStateAddress","_sub","rpc","ixItem","build","programSigner","SystemProgram","txItem","TransactionNamespaceFactory","rpcItem","RpcNamespaceFactory","addr","compare","subscribe","ee","EventEmitter","listener","onAccountChange","emit","unsubscribe","removeAccountChangeListener","then","catch","registrySigner","AccountClient","_idlAccount","_coder","_size","size","fetchNullable","addresses","rpcUtil.getMultipleAccounts","filters","getProgramAccounts","memcmp","offset","bytes","isArray","sub","subscriptions","delete","warn","signer","sizeOverride","fromPubkey","newAccountPubkey","space","associatedAddress","fetch","pubkeyUtil.associated","LOG_START_INDEX","EventManager","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","addEventListener","callback","_onLogsSubscriptionId","onLogs","logs","parseLogs","allListeners","listenerCb","slot","listeners","l","removeOnLogsListener","logScanner","LogScanner","execution","ExecutionContext","next","newProgram","didPop","handleLog","stack","program","handleProgramLog","handleSystemLog","startsWith","logStr","logStart","exec","Program","_events","simulate","InstructionFactory","simulateItem","resp","accountFns","fetchIdl","idlAddr","base","inflatedIdl","inflate","utf8.decode","removeEventListener","ZERO","JSBI","ONE","TWO","abs","number","sumArray","numbers","toDecimal","shift","Curve","numberOfCurrencies","amplificationFactor","tokenAmounts","targetPrices","minusOne","xp","dx","x","y","computeY","inputIndex","outputIndex","dy","computeBaseY","nn","sum","product","c","denominator","inputFactor","outputFactor","factor","amount","xx","ann","yPrev","computeD","dPrev","dP","Stable","traderFee","curve","outputAmountWithoutFees","getOutputAmount","getFees","expectedOutputAmount","priceImpact","getPriceImpact","minOutputAmount","getMinimumOutputAmount","noSlippageOutputAmount","getOutputAmountWithNoSlippage","slippageTolerance","TokenSwapStable","ownerFee","amp","getExpectedOutputAmount","getExpectedOutputAmountWithNoSlippage","tradingFee","inputTradeAmountLessFees","getInputAmountLessFees","TokenSwapConstantProduct","feesOnInput","newInputTradeAmount","getAmountLessFees","inputTradeAmount","expectedOutputAmountWithNoSlippage","poolInputAmount","poolOutputAmount","newPoolOutputAmount","dividend","divisor","quotient","remainder","ceilingDivision","getInvariant","Fraction","IDL","version","WRAPPED_SOL_MINT","MAINNET_SERUM_DEX_PROGRAM","DEVNET_SERUM_DEX_PROGRAM","MARKETS_URL","TOKEN_LIST_URL","RAYDIUM_AMM_V4_PROGRAM_ID","ALDRIN_SWAP_PROGRAM_ID","ALDRIN_SWAP_V2_PROGRAM_ID","SABER_ADD_DECIMALS_PROGRAM_ID","CROPPER_PROGRAM_ID","SENCHA_PROGRAM_ID","ZERO_FRACTION","blob","getSpan","src","U64Layout","toNumber","bn","uint64","CropperTokenSwapLayout","u8","CropperStateLayout","CROPPER_STATE_ADDRESS","accountInfoToCropperPoolState","decoded","ammId","serumProgramId","tokenProgramId","tokenAAccount","tokenBAccount","serumMarket","Side","Bid","bid","Ask","ask","JUPITER_PROGRAM_ID","JUPITER_PROGRAM","TOKEN_LEDGER","stableSwapNPoolIntoMercurialExchange","swapProgram","swapState","stableSwapNPool","tokenProgram","poolAuthority","userTransferAuthority","destinationTokenAccount","raydiumAmmToRaydiumSwap","ammAuthority","raydiumAmm","ammOpenOrders","poolCoinTokenAccount","poolPcTokenAccount","serumBids","serumAsks","serumEventQueue","serumCoinVaultAccount","serumPcVaultAccount","serumVaultSigner","userSourceTokenAccount","userDestinationTokenAccount","userSourceOwner","user","marketIntoSerumSwap","vaultSigner","market","openOrders","requestQueue","eventQueue","bids","asks","coinVault","pcVault","orderPayerTokenAccount","dexProgram","rent","SYSVAR_RENT_PUBKEY","createMercurialExchangeInstruction","userSourceTokenAccountAddress","userDestinationTokenAccountAddress","minimumOutAmount","platformFee","prepareRemainingAccounts","createSerumSwapInstruction","inputMint","openOrdersAddress","pcWallet","side","coinWallet","createTokenSwapInstruction","tokenSwapState","isStep","swapSource","swapDestination","tokenSwapProgram","source","destination","poolFee","feeAccount","createSenchaSwapInstruction","poolState","sourceMint","feesSource","feesDestination","inputUserAccount","inputTokenAccount","inputFeesAccount","outputUserAccount","outputTokenAccount","outputFeesAccount","createCropperSwapInstruction","createRaydiumSwapInstruction","createAldrinSwapInstruction","userBaseTokenAccount","userQuoteTokenAccount","pool","poolSigner","baseTokenVault","quoteTokenVault","feePoolTokenAccount","walletAuthority","createAldrinV2SwapInstruction","createRiskCheckAndFeeInstruction","tokenLedger","createSetTokenLedgerInstruction","tokenAccountAddress","tokenAccount","createOpenOrdersInstruction","payer","systemProgram","saberPoolIntoSaberExchange","feesTokenAccount","sourceMintAddress","saberPool","swapAuthority","clock","createSaberExchangeInstruction","createSaberAddDecimalsDepositInstruction","addDecimals","sourceTokenAccountAddress","destinationTokenAccountAddress","addDecimalsProgram","wrapper","wrapperMint","wrapperUnderlyingTokens","userUnderlyingTokens","userWrappedTokens","createSaberAddDecimalsWithdrawInstruction","WrappedToken","multiplier","inputAmount","calculateWithdrawOutputAmount","underlying","calculateDepositOutputAmount","SaberAddDecimalsAmm","wrappedToken","label","id","getAccountsForUpdate","update","_accountInfoMap","getQuote","notEnoughLiquidity","inAmount","feeAmount","feeMint","feePct","priceImpactPct","createSwapInstructions","reserveTokenMints","getTwoPermutations","item","otherItem","mapAddressToAccountInfos","accountInfoMap","u128","AMM_INFO_LAYOUT_V4","u64","RaydiumAmm","ammAccountInfo","coinMint","pcMint","status","ammTargetOrders","serumMarketKeys","coinReserve","pcReserve","swapFeeNumerator","swapFeeDenominator","coinAmount","pcAmount","OpenOrders","ammOpenOrdersAccountInfo","decodedMarket","Market","serumMarketMarketInfo","String","tokenAccountInfo","inputReserve","outputReserve","inAmountBN","inAmountAfterFee","outAmountWithoutPriceImpact","outAmountBN","Number","SplitTradeAmm","firstAmm","secondAmm","portion1","portion2","firstAmmTwoPermutations","secondAmmTwoPermutations","firstAmmTwoPermutation","secondAmmTwoPermutation","labelWithPortions","portion","shouldSplitSetup","quoteParams","sourceMintString","bestSolution","outAmount","firstAmmFee","secondAmmFee","firstAmount","secondAmount","firstQuote","secondQuote","swapParams","isValidRoute","ammA","ammB","STABLE_MARKET_ADDRESSES","getOutAmountMeta","toMint","takerFeePct","orderBook","pcIn","coinOut","bestPrice","worstPrice","totalCost","totalCoins","availablePc","baseSizeLots","quoteSizeLots","price","order","orderCoinAmount","orderPcAmount","lotPrice","numberLotsCanBuy","minimum","in","out","forecastBuy","fromAmount","coinIn","pcOut","availableCoin","numberLotsCanSell","forecastSell","SerumAmm","orderbooks","asksAccountInfo","bidsAccountInfo","Orderbook","outAmountMeta","minInAmount","minOutAmount","quoteMintAddress","deserializeAccount","AccountLayout","SaberAmm","stableSwap","tokenAccounts","calculator","tokenAccountInfos","asFraction","toFixed","destinationMint","Percentage","num","denom","eq","p2","denomGcd","gcd","denomLcm","div","mul","p1DenomAdjustment","p2DenomAdjustment","p1NumeratorAdjusted","p2NumeratorAdjusted","newNumerator","FEES_LAYOUT","POOL_FIELDS_COMMON","POOL_LAYOUT","POOL_V2_LAYOUT","STABLE_CURVE_LAYOUT","AldrinAmm","isV2","baseTokenMint","quoteTokenMint","feeBaseAccount","feeQuoteAccount","curveType","accountInfoToAldrinPoolState","TOKEN_SWAP_POOLS","STEP_TOKEN_SWAP_PROGRAM_ID","PROGRAM_ID_TO_LABEL","TokenSwapLayout","StepTokenSwapLayout","CurveType","SplTokenSwapAmm","swapStateAccountInfo","tokenSwapAccountInfo","tokenSwapData","poolToken","ownerTradeFeeNumerator","ownerTradeFeeDenominator","ownerWithdrawFeeNumerator","ownerWithdrawFeeDenominator","curveParameters","poolNonce","accountInfoToTokenSwapState","MercurialAmm","poolAccount","precisionMultipliers","precisionMultiplier","findIndex","feeNumerator","CropperAmm","stateOwner","feeOwner","initialSupply","returnFeeNumerator","fixedFeeNumerator","feeDenominator","stateAccountInfoToCropperState","decodePoolState","SenchaSwapLayout","SenchaAmm","bump","token0Reserves","token1Reserves","token0Mint","token1Mint","token0Fees","token1Fees","tradeFeeKbps","accountInfoToSenchaPoolState","getAllAmms","marketsCache","marketUrl","tokenSwapPools","cluster","getTokenSwapPools","extraKeys","extraMarketKeyedAccountInfos","marketKeyedAccountInfos","rest","marketCacheToAccountInfo","amms","keyedAccountInfo","amm","SerumMarket","mercurialPool","StableSwapNPool","StableSwap","ammFactory","addDecimalsJson","addDecimalJson","underlyingDecimals","func","j","pairs","splitTradeAmm","getTokenRouteSegments","tokenRouteSegments","reserveTokenMintPermutations","firstReserveMint","segments","outMint","marketMetas","addSegment","secondReserveMint","isPlatformFeeSupported","marketInfos","firstMarket","secondMarket","marketInfo","getRouteInfoUniqueId","routeInfo","getCacheMint","outputMint","getEmptyInstruction","cleanupInstructions","findOrCreateAssociatedAccountByMint","mintAddress","toAccount","Token","routeAtaInstructions","getUserIntermediateTokenAccountAddress","getUserDestinationTokenAccountAddress","userDestinationTokenAccountResult","wait","time","resolve","setTimeout","getOrCreateOpenOrdersAddress","marketAddress","marketToOpenOrdersAddress","retries","openOrdersAccountInfo","newOpenOrdersAddress","calculateTransactionDepositAndFee","feeCalculator","openOrdersDeposits","ooi","ataDepositLength","intermediate","ataDeposit","signatureFee","oo","NO_PLATFORM_FEE","feeBps","feeAccounts","getPlatformFeeAccounts","deserializedtokenAccount","TransactionBuilder","addInstruction","recentBlockHash","txFields","curr","execute","isKeyPair","sendTransaction","Owner","_owner","isPublicKey","TransactionError","txid","diffTokenBalance","postBalance","postTokenBalance","preBalance","preTokenBalance","extractTokenBalanceChangeFromTransaction","transactionResult","getTokenBalanceChangesFromTransactionResponse","sourceAddress","destinationAddress","transactionResponse","sourceTokenBalanceChange","extractWrappedSOLChangeFromTransaction","destinationTokenBalanceChange","extractSOLChangeFromTransaction","getConfirmTransaction","promiseRetry","txResult","retry","minTimeout","chunks","fetchRoutes","accountsToFetchMap","routes","accountsToFetch","chunkSize","pks","chunk","chunkedGetMultipleAccountInfos","accountInfos","routeBatchFetcher","Jupiter","platformFeeAndAccounts","routeCacheDuration","wrapUnwrapSOL","serumOpenOrdersPromise","instructionCache","routeCache","route","cacheMint","ataInstructions","openOrdersInstructions","sourceInstruction","toPubkey","createAndCloseWSOLAccount","preparedInstructions","outAmountWithSlippage","legs","userTokenAccountAddresses","platformFeeSupported","mi","legInputAmount","legOutAmountWithSlippage","legPlatformFee","sourceTokenAccount","openOrdersAddresses","routeToInstructions","splitSetupRequired","isSplitSetupRequired","setupTransactionBuilder","transactionBuilder","cleanupTransactionBuilder","setupTransaction","cleanupTransaction","first","second","third","transactions","swapTransaction","cleanupTransactionObject","confirmationWaiterFactory","totalTxs","setupTxid","setupTransactionObject","skipPreflight","setupError","swapTransactionObject","inputAddress","outputAddress","outputAmount","cleanupTxId","hasOpenOrders","jupiter","shouldFetchRoutes","getDepositAndFees","unwrapSOL","jointMintsCacheKey","walletPublicKey","userPublicKey","openOrdersInstructionsPromise","promise","walletCache","getDepositAndFeeFromInstructions","platformFeeBps","now","Date","inputMintAndOutputMint","firstSegment","simpleRoutes","simpleRoute","secondSegment","intersectionMarketMetas","marketMeta","intersectionMarketMeta","intermediateMint","computeRoutes","fetchTimestamp","getTime","routesInfos","getDepositAndFeeForRoute","routesInfo","intermediateAmount","tokenMints","quote","pct","outAmountAfterFees","slippage","lpFee","getDepositAndFee","priceFactor","computeRouteInfos","cached","setUserPublicKey","getRouteMap","routeMap","tokenMint","validOutputMints","secondLevelOutputs","secondLevelOutputMint","firstLevelMarketMeta","secondLevelMarketMeta","computeRouteMap","findSerumOpenOrdersForOwner","newMarketToOpenOrdersAddress","allOpenOrders","createCreateTokenLedgerInstruction","exports","Layout","makeDestinationObject","ExternalLayout","isCount","GreedyCount","_this","IntBE","module","Errors","INITIALIZE_ERROR","ROUTES_ERROR","JupiterContext","createContext","children","useState","setJupiter","setError","useEffect","useMemo","allTokenMints","React","Provider","delay","setDebouncedValue","setRoutes","debounceTime","context","useContext","loading","setLoading","refreshCount","setRefreshCount","lastRefreshCount","useRef","debouncedAmount","debouncedValue","handler","clearTimeout","lastRefreshTimestamp","lastQueryTimestamp","current","sort","lastUpdatedTime","useCallback","refresh","DexError","feeTier","INSTRUCTION_LAYOUT","layout_1","BNLayout","buffer_layout_1","Blob","newOrderV3","consumeEventsPermissioned","u32","zeros","BufferLayout","publicKeyLayout","LAYOUT","addVariant","rv","isInteger","_typeof","obj","Symbol","iterator","isDeepEqual","isDeepStrictEqual","_require$codes","require","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","inspect","_require$types","isPromise","isRegExp","objectAssign","objectIs","is","lazyLoadComparison","comparison","warned","ok","NO_EXCEPTION_SENTINEL","innerFail","innerOk","fn","argLen","generatedMessage","actual","expected","operator","stackStartFn","_len","_key","fail","internalMessage","argsLen","process","emitWarning","bind","errArgs","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","instance","Constructor","_classCallCheck","test","compareExceptionKey","expectedException","isPrototypeOf","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","details","fnType","expectsNoError","strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","tmp1","pos","_defineProperty","defineProperty","enumerable","configurable","writable","_defineProperties","target","props","descriptor","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","o","setPrototypeOf","__proto__","getPrototypeOf","endsWith","search","this_len","substring","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","inspectValue","val","compact","customInspect","depth","maxArrayLength","Infinity","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","count","floor","maxCount","repeat","maxLines","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","limit","stackTraceLimit","getColorDepth","_res","knownOperators","captureStackTrace","protoProps","staticProps","subClass","superClass","_inherits","custom","recurseTimes","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","determiner","reason","inspected","RangeError","_slicedToArray","_arrayWithHoles","_arr","_n","_e","_s","_i","done","_iterableToArrayLimit","_nonIterableRest","regexFlagsSupported","flags","arrayFromSet","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","isNaN","uncurryThis","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","charCodeAt","pow","getOwnNonIndexProperties","min","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","valueOf","Boolean","BigInt","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","objEquiv","setHasEqualElement","memo","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","curB","mapHasEqualEntry","key1","item1","key2","aValues","bValues","_val","setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","mapEquiv","keysA","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","sd","rm","more","xc","RM","unshift","doExponential","isNonzero","cmp","isneg","yc","dp","DP","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","xlty","plus","xe","ye","reverse","mod","ygtx","times","one","prec","sqrt","half","toExponential","NE","PE","toPrecision","_Big_","nl","roundDown","roundHalfUp","roundHalfEven","roundUp","define","fromArray","values","nameWithProperty","lo","bindConstructorLayout","layout_","boundConstructor_","elementSpan","rem","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","readIntBE","writeIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","elo","Structure","decodePrefixes","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","dlo","clo","contentOffset","VariantLayout","vb","isBuffer","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","write","CString","srcb","copy","UTF8","maxSpan","Constant","greedy","u16","u24","u40","u48","nu64","u16be","u24be","u32be","u40be","u48be","nu64be","s8","s16","s24","s32","s40","s48","ns64","s16be","s24be","s32be","s40be","s48be","ns64be","f32","f32be","f64","f64be","seq","unionLayoutDiscriminator","cstr","utf8","trim","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","global","__self__","F","DOMException","support","viewClasses","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","items","Headers","headers","append","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","buf","view","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","text","readAsText","readBlobAsText","chars","fromCharCode","readArrayBufferAsText","formData","json","oldValue","thisArg","Request","credentials","method","mode","signal","upcased","normalizeMethod","referrer","form","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","statusText","clone","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","polyfill","ponyfill","globalScope","MAX_DIGITS","Decimal","precision","rounding","toExpNeg","toExpPos","LN10","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","mathpow","isDecimal","BASE","MAX_SAFE_INTEGER","MAX_E","carry","xd","yd","Ctor","pr","checkInt32","digitsToString","ws","indexOfLastWord","w","getZeroString","absoluteValue","comparedTo","xdL","ydL","decimalPlaces","dividedBy","divide","dividedToIntegerBy","idiv","exponent","getBase10Exponent","greaterThan","greaterThanOrEqualTo","isint","isNegative","isPositive","ispos","isZero","lessThan","lessThanOrEqualTo","logarithm","wpr","ln","subtract","modulo","naturalExponential","exp","naturalLogarithm","negated","neg","z","squareRoot","rL","toDecimalPlaces","todp","toInteger","toint","toPower","sign","yIsInt","yn","truncate","toSignificantDigits","tosd","multiplyInteger","temp","aL","bL","prod","prodL","qd","remL","rem0","xi","xL","yd0","yL","yz","getLn10","zs","c0","x2","parseDecimal","rd","doRound","xdi","xLTy","isExp","ps","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","hasSymbols","toStr","origDefineProperty","supportsDescriptors","arePropertyDescriptorsSupported","object","predicate","defineProperties","predicates","firstSource","to","nextSource","keysArray","nextIndex","nextKey","desc","callBind","implementation","getPolyfill","shim","NaN","ERROR","WINDOW","window","root","JS_SHA256_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA256_NO_NODE_JS","versions","node","COMMON_JS","JS_SHA256_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","is224","Sha256","createMethod","nodeWrap","crypto","eval","algorithm","nodeMethod","createHash","digest","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","block","hBytes","finalized","hashed","oKeyPad","iKeyPad","inner","notString","lastByteIndex","finalize","s0","s1","maj","t1","ab","da","cd","bc","g","h","hex","dataView","setUint32","innerHash","sha224","hmac","imul","clz32","__kMaxLength","digit","radix","newLength","last","mLow","mHigh","high","summand","dLow","dHigh","pLow","pMid1","pMid2","pHigh","__setDigit","startIndex","halfDigits","__setHalfDigit","borrow","r0","subtrahend","_r","r15","_current2","_sub3","_r4","_r5","_current","_sub2","_r2","_r3","digitIndex","previous","updated","primitive","xLength","xMsd","msdLeadingZeros","xBitLength","currentDigit","mantissaHigh","mantissaHighBitsUnset","mantissaLow","mantissaLowBitsUnset","signBit","expValue","__kMaxLengthBits","neededDigits","_result","msd","runningSquare","resultLength","resultSign","remainderDigit","y1","_resultLength","_result2","_result3","neededLength","topDigit","compareDigit","bitsInTopDigit","topUnconsumedBit","mask","digits","kMantissaHighTopBit","msdTopBit","remainingMantissaBits","_shift","cursor","bitsPerChar","roundup","limDigit","limAlpha","partsBits","part","_done","charsSoFar","_part","digitsSoFar","bitsInDigit","partBits","charMask","charsRequired","availableBits","newDigit","_current3","consumedBits","bitLength","minBitsPerChar","secondHalfChars","conqueror","secondHalf","divisionResult","_remainder","firstHalf","leftNegative","bothNegative","xSign","ySign","yAbs","xDigit","rawExponent","yBitLength","compareMantissa","_shift2","op","_r6","_r7","yLength","numPairs","tmp","tmpLength","u","diff","m2Low","m2High","multiplicand","accumulatorIndex","accumulator","m1","m1Low","m1High","rLow","rMid1","rMid2","rHigh","_acc","rx","ry","upperHalf","lowerHalf","n2","wantQuotient","qhatv","vn1","halfDigitBuffer","qhat","ujn","rhat","vn2","ujn2","wantRemainder","addDigit","_i3","digitShift","bitsShift","grow","_i4","_i5","mustRoundDown","_i6","_i7","hint","toPrimitive","exoticToPrim","_primitive","_primitive2","drop","msdBitsConsumed","resultMsd","minuendMsd","__kBitsPerCharTableShift","HASH_UNDEFINED","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","nodeType","freeModule","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","isHostObject","mapToArray","setToArray","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","uid","IE_PROTO","funcToString","reIsNative","splice","nativeKeys","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","Hash","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArguments","iteratee","baseTimes","skipIndexes","isIndex","assocIndexOf","getMapData","cache","LARGE_ARRAY_SIZE","fromRight","baseFor","keysFunc","iterable","baseGet","path","isKey","castPath","toKey","baseHasIn","baseIsEqual","customizer","bitmask","isObject","isObjectLike","equalFunc","objIsArr","othIsArr","objTag","othTag","getTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isMasked","isFunction","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","defaultValue","hasFunc","isLength","hasPath","hasIn","UNORDERED_COMPARE_FLAG","baseMatchesProperty","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","baseKeys","proto","isPrototype","stringToPath","arrLength","seen","arrValue","othIndex","isKeyable","getValue","isSymbol","ctorString","memoize","baseToString","resolver","memoized","Cache","isArrayLike","isArrayLikeObject","baseUnary","baseForOwn","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","endianness","hostname","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","posix","cwd","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","_format","ret","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","chdir","umask","errcode","hasOwn","isRetryError","operation","attempt","retried","RetryOperation","timeouts","forever","unref","maxRetryTime","maxTimeout","randomize","createTimeout","random","wrap","original","mainError","_originalTimeouts","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","reset","stop","currentTime","timer","timeoutOps","cb","try","attempts","counts","mainErrorCount","invariant","condition","toFormat","fmt","g1","g2","nd","intd","intp","fracp","dsep","gsep","gsize","sgsize","fgsep","fgsize","tfmt","cfmt","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","parser","compiler","nodes","compile","assignedPaths","valueAssignments","currentPath","setPath","addTableArray","genError","col","ex","column","fullPath","reduceValueNode","pathAssigned","firstType","reduceArrayWithTypeChecking","reduceInlineTableNode","quotedPath","quoteDottedString","deepRef","newObj","traversed","traversedPath","SyntaxError","found","child","parent","peg$subclass","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c1","peg$c2","peg$c3","peg$c4","description","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","addNode","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","char","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","left","right","parseFloat","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","date","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","convertCodePoint","peg$c121","peg$c122","peg$currPos","peg$reportedPos","peg$cachedPos","peg$cachedPosDetails","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$cache","startRule","peg$computePosDetails","startPos","endPos","ch","advance","peg$fail","peg$buildException","posDetails","cleanupExpected","expectedDescs","stringEscape","buildMessage","s2","nextPos","peg$parseline","s3","s4","s5","s6","peg$parseS","peg$parseexpression","peg$parsecomment","peg$parseNL","peg$parseEOF","peg$parsepath","peg$parsetablearray","peg$parseassignment","peg$parsetable_key","s7","peg$parsedot_ended_table_key_part","peg$parsetable_key_part","peg$parsekey","peg$parsequoted_key","peg$parsevalue","peg$parseASCII_BASIC","peg$parsedouble_quoted_single_line_string","peg$parsesingle_quoted_single_line_string","peg$parsestring","peg$parsedatetime","peg$parsefloat","peg$parseinteger","peg$parseboolean","peg$parsearray","peg$parseinline_table","peg$parsedouble_quoted_multiline_string","peg$parsesingle_quoted_multiline_string","peg$parsemultiline_string_char","peg$parsestring_char","peg$parsemultiline_literal_char","peg$parseliteral_char","peg$parseESCAPED","peg$parsemultiline_string_delim","peg$parseNLS","peg$parsefloat_text","peg$parseinteger_text","peg$parseDIGITS","peg$parseDIGIT_OR_UNDER","peg$parsearray_sep","peg$parsearray_value","peg$parsearray_value_list","peg$parseinline_table_assignment","s9","s10","peg$parsesecfragment","peg$parsedate","s11","peg$parsetime","peg$parsetime_with_offset","s12","s13","s14","s15","peg$parseHEX","peg$parseESCAPED_UNICODE","isFinite","fromCodePoint","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","codePoint","__awaiter","_arguments","generator","fulfilled","step","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","matches","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","stree","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","subarray","copy_block","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","level","strm","data_type","black_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","crcTable","Uint32Array","table","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","zero","HASH","prev","hash_shift","hash_mask","flush_pending","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","deflate","beg","old_flush","hcrc","comment","os","level_flags","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","common","sources","STR_APPLY_UIA_OK","__","_utf8len","strings","c2","m_pos","str_len","buf_len","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","opt","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","constants","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","table_index","work","incr","fill","low","used","huff","base_index","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","TYPE","BAD","zswap32","InflateState","havedict","check","total","wbits","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","inflate_1"],"sourceRoot":""}