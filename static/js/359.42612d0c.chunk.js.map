{"version":3,"file":"static/js/359.42612d0c.chunk.js","mappings":"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","sources":["os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/index.ts","os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","os/providers/mint.provider.tsx","os/providers/tokenProvider/supplementary.ts","os/providers/tokenProvider/index.ts","os/store/accounts.reducer.ts","os/store/flags.reducer.ts","os/store/index.ts","os/store/mints.reducer.ts","os/store/page.reducer.ts","os/store/pools.reducer.ts","os/store/search.reducer.ts","os/store/ui.reducer.ts","os/store/walkthrough.reducer.ts","os/store/wallet.reducer.ts","shared/dataloader/cache.ts","shared/dataloader/constant.ts","shared/dataloader/index.ts","shared/dataloader/request.ts","shared/devTools.ts","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/runtime.ts","shared/storage.ts","shared/util.ts"],"sourcesContent":["import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  sntrAddress: string\n  sntrPoolAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    sntrAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    sntrPoolAddress: '3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    sntrAddress: '',\n    sntrPoolAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    sntrAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    sntrPoolAddress: 'Aa3WZX7Xunfebp2MuAcz9CNw8TYTDL7mVrmb11rjyVm6',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  defaultAppId: string\n  extra: SenReg\n  senreg: string\n}\n\nconst DEFAULT_APP_ID = process.env.REACT_APP_ID\nconst devApp = {\n  [DEFAULT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: DEFAULT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    supportedViews: (process.env.REACT_APP_SUPPORTED_VIEWS || '')\n      .split(',')\n      .map((view) => view.trim())\n      .filter((view) => ['page', 'widget'].includes(view)) as Array<\n      'widget' | 'page'\n    >,\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n} from 'react'\n\nimport { ConfigProvider } from 'antd'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { UIState } from 'os/store/ui.reducer'\nimport { ConfigProviderProps } from 'antd/lib/config-provider'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean | ConfigProviderProps\n}) => {\n  const { ui } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ ui }), [ui])\n  const configProvider = antd\n    ? {\n        getPopupContainer: () => document.getElementById(appId) as HTMLElement,\n        ...(typeof antd === 'object' ? antd : {}),\n      }\n    : undefined\n\n  return (\n    <Context.Provider value={provider}>\n      <section\n        id={appId}\n        style={{ height: '100%', backgroundColor: 'transparent', ...style }}\n      >\n        {configProvider ? (\n          <ConfigProvider {...configProvider}>{children}</ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { PoolsState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolsState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const { pools } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const { wallet } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const { accounts } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport {\n  useRootDispatch,\n  useRootSelector,\n  RootState,\n  RootDispatch,\n} from 'os/store'\nimport { getMint as _getMint, MintsState } from 'os/store/mints.reducer'\nimport TokenProvider from './tokenProvider'\nimport { account } from '@senswap/sen-js'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintsState\n  getMint: (...agrs: Parameters<typeof _getMint>) => Promise<MintsState>\n  getDecimals: (mintAddress: string) => Promise<number>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { mints, pools } = useRootSelector((state: RootState) => state)\n  const getMint = useCallback(\n    async (...agrs: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...agrs)).unwrap(),\n    [dispatch],\n  )\n  const getDecimals = useCallback(\n    async (mintAddress: string) => {\n      if (!account.isAddress(mintAddress))\n        throw new Error('Invalid mint address')\n      // If the token is in token provider, return its decimals\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo?.decimals) return tokenInfo.decimals\n      // If the token is lp, return 9 as default\n      const index = Object.values(pools).findIndex(\n        ({ mint_lpt }) => mint_lpt === mintAddress,\n      )\n      if (index >= 0) return 9\n      // Fetch from the clustters\n      const mintData = await getMint({ address: mintAddress })\n      if (mintData[mintAddress]?.decimals) return mintData[mintAddress].decimals\n      throw new Error('Cannot find mint decimals')\n    },\n    [getMint, pools],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, getDecimals, tokenProvider }),\n    [mints, getMint, getDecimals],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","// Pseudo native sol info\n// It's for all networks\nexport const sol = (chainId: 101 | 102 | 103) => ({\n  symbol: 'SOL',\n  name: 'Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'solana',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n})\n\n// Pseudo SNTR info\n// Only for testnet and mainnet\nexport const sntr = (chainId: 102 | 103) => ({\n  symbol: 'SNTR',\n  name: 'Sentre',\n  address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'sentre',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M/logo.png',\n})\n\n// Pseudo token infos for devnet\nconst supplementary = [\n  sol(103),\n  sntr(103),\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/qfnqNqs3nCAHjnyCgLRDbBtq4p2MtHZxw8YjSyYhPoL/logo.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/3MVa4e32PaKmPxYUQ6n8vFkWtCma68Ld7e7fTktWDueQ/logo.png',\n  },\n  {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'usd-coin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png',\n  },\n]\n\nexport default supplementary\n","import { Document } from 'flexsearch'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net } from 'shared/runtime'\nimport configs from 'os/configs'\nimport supplementary, { sntr, sol } from './supplementary'\n\nconst {\n  sol: { chainId },\n} = configs\nconst DELIMITER = /[\\W_]+/g\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\nconst DOCUMENT = {\n  document: {\n    id: 'address',\n    index: [\n      { field: 'symbol', ...PRESET },\n      { field: 'name', ...PRESET },\n    ],\n  },\n}\n\nclass TokenProvider {\n  private tokenMap: Map<string, TokenInfo>\n  private engine: typeof Document | undefined\n  readonly chainId: typeof chainId\n  readonly cluster: typeof net\n  private loading: boolean\n  private queue: Array<any>\n\n  constructor() {\n    this.tokenMap = new Map<string, TokenInfo>()\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    this.loading = false\n    this.queue = []\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<[Map<string, TokenInfo>, any]> => {\n    if (this.tokenMap.size) return [this.tokenMap, this.engine]\n    return new Promise(async (resolve) => {\n      // Queue of getters to avoid race condition of multiple _init calling\n      if (this.loading) return this.queue.push(resolve)\n      // Start\n      this.loading = true\n      // Build token list\n      let tokenList = await (await new TokenListProvider().resolve())\n        .filterByChainId(this.chainId)\n        .getList()\n      if (this.cluster === 'devnet') tokenList = tokenList.concat(supplementary)\n      if (this.cluster === 'testnet')\n        tokenList = tokenList.concat([sntr(102), sol(102)])\n      else tokenList = tokenList.concat([sol(101)])\n      // Build token map\n      tokenList.forEach((token) => this.tokenMap.set(token.address, token))\n      // Build search engine\n      this.engine = new Document(DOCUMENT)\n      this.tokenMap.forEach(({ address, ...doc }) =>\n        this.engine.add(address, doc),\n      )\n      // Resolve the main getter\n      resolve([this.tokenMap, this.engine])\n      // Resolve the rest of getters\n      while (this.queue.length) this.queue.shift()([this.tokenMap, this.engine])\n      // Finish\n      this.loading = false\n    })\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    const [tokenMap] = await this._init()\n    return Array.from(tokenMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const [tokenMap] = await this._init()\n    return tokenMap.get(addr)\n  }\n\n  find = async (keyword: string, limit?: 10): Promise<TokenInfo[]> => {\n    const [tokenMap, engine] = await this._init()\n    let tokens: TokenInfo[] = []\n    keyword.split(DELIMITER).forEach((key) => {\n      const raw: Array<{ result: string[] }> = engine.search(key, limit)\n      return raw.forEach(({ result }) => {\n        return result.forEach((id: string) => {\n          if (tokens.findIndex(({ address }) => address === id) < 0) {\n            const token = tokenMap.get(id)\n            if (token) tokens.push(token)\n          }\n        })\n      })\n    })\n    return tokens\n  }\n}\n\nexport default TokenProvider\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type AccountsState = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: AccountsState = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountsState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  AccountsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  AccountsState,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\ntype FlagsState = {\n  visited: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: FlagsState = {\n  visited: true,\n}\n\n/**\n * Actions\n */\n\nexport const loadVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadVisited`, async (_, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  const visited = (await db.getItem('visited')) || false\n  return { ...prevFlags, visited }\n})\n\nexport const updateVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('visited', visited)\n  return { ...prevFlags, visited }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { RootContext } from '@senhub/context'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\nimport walkthrough from './walkthrough.reducer'\n\n/**\n * Root types\n */\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\n\n/**\n * Root hooks\n */\nexport const useRootStore = createStoreHook(RootContext)\nexport const useRootDispatch: typeof useDispatch =\n  createDispatchHook(RootContext)\nexport const useRootSelector: typeof useSelector =\n  createSelectorHook(RootContext)\n\n/**\n * Root store\n */\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n    walkthrough,\n  },\n})\n\nexport default store\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type MintsState = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: MintsState = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  MintsState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force = false }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  MintsState,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\n\nconst {\n  register: { senreg, extra },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PageState = {\n  register: SenReg\n  appIds: AppIds\n  widgetIds: AppIds\n}\n\nconst troubleshoot = (register: SenReg, appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  return appIds.filter((appId) => register[appId])\n}\nconst fetchRegister = async () => {\n  try {\n    const res = await fetch(senreg)\n    return await res.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: PageState = {\n  register: {},\n  appIds: [],\n  widgetIds: [],\n}\n\n/**\n * Actions\n */\n\n// Must fetch register at very first of the process\nexport const loadRegister = createAsyncThunk(\n  `${NAME}/loadRegister`,\n  async () => {\n    const register = await fetchRegister()\n    return { register: { ...register, ...extra } }\n  },\n)\n\n// For sandbox only\nexport const installManifest = createAsyncThunk<\n  Partial<PageState>,\n  ComponentManifest,\n  { state: any }\n>(`${NAME}/installManifest`, async (manifest, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appIds, widgetIds, register },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(manifest.appId))\n    throw new Error('Cannot run sandbox for an installed application.')\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(manifest.appId)\n  const newWidgetIds: AppIds = [...widgetIds]\n  if (manifest.supportedViews.includes('widget'))\n    newWidgetIds.push(manifest.appId)\n  const newRegister: SenReg = { ...register }\n  newRegister[manifest.appId] = manifest\n  return { appIds: newAppIds, widgetIds: newWidgetIds, register: newRegister }\n})\n\n/**\n * App Actions\n */\nexport const loadPage = createAsyncThunk<\n  Partial<PageState>,\n  void,\n  { state: any }\n>(`${NAME}/loadPage`, async (_, { getState }) => {\n  const {\n    wallet: { address },\n    page: { register },\n  } = getState()\n\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  // Fetch user's apps\n  const db = new PDB(address).createInstance('sentre')\n  const appIds = troubleshoot(\n    register,\n    (await db.getItem('appIds')) || initialState.appIds,\n  )\n  const widgetIds = troubleshoot(\n    register,\n    (await db.getItem('widgetIds')) || initialState.widgetIds,\n  )\n  return { appIds, widgetIds }\n})\n\nexport const updatePage = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address },\n    page: { register },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  appIds = troubleshoot(register, appIds)\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { register, appIds, widgetIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const newWidgetIds = register[appId]?.supportedViews?.includes('widget')\n    ? [...widgetIds, appId]\n    : [...widgetIds]\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await db.setItem('widgetIds', newWidgetIds)\n  return { appIds: newAppIds, widgetIds: newWidgetIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appIds, widgetIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const newWidgetIds = widgetIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(address)\n  const db = pdb.createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await db.setItem('widgetIds', newWidgetIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds, widgetIds: newWidgetIds }\n})\n\n/**\n * Dashboard Actions\n */\nexport const updateDashboard = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updateDashboard`, async (widgetIds, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('widgetIds', widgetIds)\n  return { widgetIds }\n})\n\nexport const addWidgets = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/addWidgets`, async (appIds, { getState }) => {\n  const {\n    wallet: { address },\n    page: { widgetIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const newWidgetIds: AppIds = [...widgetIds, ...appIds]\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('widgetIds', newWidgetIds)\n  return { widgetIds: newWidgetIds }\n})\n\nexport const removeWidget = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/removeWidget`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { widgetIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet.')\n  if (!widgetIds.includes(appId)) return {}\n  const newWidgetIds = widgetIds.filter((_appId: string) => _appId !== appId)\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('widgetIds', newWidgetIds)\n  return { widgetIds: newWidgetIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadRegister.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installManifest.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateDashboard.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        addWidgets.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        removeWidget.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: PoolsState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype SearchState = {\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: SearchState = {\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setValue = createAsyncThunk<\n  Partial<SearchState>,\n  string,\n  { state: any }\n>(`${NAME}/setValue`, async (value) => {\n  return { value }\n})\n\nexport const setLoading = createAsyncThunk<\n  Partial<SearchState>,\n  boolean,\n  { state: any }\n>(`${NAME}/setLoading`, async (loading) => {\n  return { loading }\n})\n\nexport const setDisabled = createAsyncThunk<\n  Partial<SearchState>,\n  boolean,\n  { state: any }\n>(`${NAME}/setDisabled`, async (disabled) => {\n  return { disabled }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype WalkThorughState = {\n  run: boolean\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'walkthrough'\nconst initialState: WalkThorughState = {\n  run: false,\n  step: 0,\n}\n\n/**\n * Actions\n */\n\nexport const setWalkthrough = createAsyncThunk<\n  Partial<WalkThorughState>,\n  Partial<WalkThorughState>,\n  { state: any }\n>(`${NAME}/setWalkthrough`, async (state) => {\n  return { ...state }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setWalkthrough.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\n\n/**\n * Interface & Utility\n */\n\nexport type WalletState = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindow = async (wallet: WalletInterface | undefined) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet,\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindow = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindow(undefined)\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: WalletState = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindow(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<WalletState>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindow()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value || !Number.isFinite(Number(value))) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n"],"names":["SOLVARS","spltAddress","splataAddress","devnet","node","chainId","sntrAddress","sntrPoolAddress","swapAddress","taxmanAddress","testnet","mainnet","DEFAULT_APP_ID","process","devApp","url","appId","name","author","email","supportedViews","split","map","view","trim","filter","includes","tags","tag","description","verified","development","defaultAppId","extra","senreg","staging","production","sol","net","register","env","Context","createContext","children","style","antd","ui","useRootSelector","state","provider","useMemo","configProvider","getPopupContainer","document","getElementById","undefined","Provider","value","id","height","backgroundColor","ConfigProvider","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","Component","render","forwardedRef","rest","this","props","ref","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","tokenProvider","TokenProvider","dispatch","useRootDispatch","mints","getMint","useCallback","async","agrs","_getMint","unwrap","getDecimals","account","mintAddress","Error","tokenInfo","findByAddress","decimals","Object","values","findIndex","mint_lpt","mintData","address","MintContextComsumer","withMint","useMint","symbol","extensions","coingeckoId","logoURI","sntr","configs","DELIMITER","PRESET","tokenize","context","minlength","DOCUMENT","index","field","constructor","tokenMap","engine","cluster","loading","queue","_init","size","Promise","push","resolve","tokenList","TokenListProvider","filterByChainId","getList","concat","supplementary","forEach","token","set","Document","doc","add","length","shift","all","Array","from","get","addr","find","keyword","limit","tokens","key","search","result","Map","NAME","getAccounts","createAsyncThunk","owner","splt","window","sentre","ownerPublicKey","connection","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","data","buf","toBase58","parseAccountData","getAccount","getState","getAccountData","upsetAccount","deleteAccount","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","loadVisited","_","flags","prevFlags","db","PDB","createInstance","visited","getItem","updateVisited","setItem","createStoreHook","RootContext","createDispatchHook","createSelectorHook","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","page","walkthrough","force","getMintData","upsetMint","deleteMint","troubleshoot","appIds","isArray","widgetIds","loadRegister","res","fetch","json","er","fetchRegister","installManifest","manifest","newAppIds","newWidgetIds","newRegister","loadPage","updatePage","installApp","uninstallApp","_appId","pdb","dropInstance","updateDashboard","addWidgets","removeWidget","getPools","swap","getProgramAccounts","swapProgramId","filters","dataSize","memcmp","bytes","offset","parsePoolData","getPool","getPoolData","upsetPool","setValue","setLoading","setDisabled","disabled","getInfix","width","innerWidth","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","setTheme","resize","setVisibleActionCenter","visible","setWalkthrough","run","step","initializeWindow","lamports","Lamports","SPLT","Swap","BigInt","openWallet","closeWallet","connectWallet","getAddress","getLamports","updateWallet","disconnectWallet","disconnect","destroyWindow","location","reload","SingleFlightCache","DEFAULT_CACHE_CONFIG","mapCache","setTimeout","delete","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","DataLoader","instanceKey","JSON","stringify","mapInstance","has","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","RequestQueue","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","reject","validateLimit","addRequestQueue","createTimeLogs","then","response","resolves","catch","error","rejects","finally","fetchRequestQueue","clearInterval","setInterval","now","Date","getTime","resolveQueue","rejectQueue","appName","prototype","toJSON","toString","serializableCheck","isSerializable","val","obj","proto","getPrototypeOf","isPlainObject","walletAddress","dbName","driver","ipfs","localForage","storeName","clear","flat","iterate","cid","backup","restore","IPFS","_ipfs","create","asyncWait","isCID","stream","cat","raw","chunk","Buffer","parse","path","isIPFS","storage","getNetwork","KEY","localStorage","convert","e","ms","shortenAddress","num","delimiter","substring","explorer","addressOrTxId","numeric","Number","isFinite","numbro","randomColor","seed","opacity","hash","Math","floor","random","i","charCodeAt","rgb","fetchCGK","ticket","utils"],"sourceRoot":""}