{"version":3,"file":"static/js/18.ca277404.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/migration-node/wormhole_migration.js"],"sourcesContent":["\"use strict\";\nvar imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nvar wasm;\nvar _a = require(\"util\"), TextDecoder = _a.TextDecoder, TextEncoder = _a.TextEncoder;\nvar cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachedTextEncoder = new TextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} liquidity_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nmodule.exports.add_liquidity = function (program_id, from_mint, to_mint, liquidity_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(liquidity_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.add_liquidity(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} liquidity_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nmodule.exports.remove_liquidity = function (program_id, from_mint, to_mint, liquidity_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(liquidity_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.remove_liquidity(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} output_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nmodule.exports.claim_shares = function (program_id, from_mint, to_mint, output_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(output_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.claim_shares(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} from_mint\n* @param {string} to_mint\n* @returns {any}\n*/\nmodule.exports.create_pool = function (program_id, payer, from_mint, to_mint) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.create_pool(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} input_token_account\n* @param {string} output_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nmodule.exports.migrate_tokens = function (program_id, from_mint, to_mint, input_token_account, output_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(input_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(output_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.migrate_tokens(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n};\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @returns {Uint8Array}\n*/\nmodule.exports.pool_address = function (program_id, from_mint, to_mint) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.pool_address(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nmodule.exports.authority_address = function (program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nmodule.exports.share_mint_address = function (program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.share_mint_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nmodule.exports.from_custody_address = function (program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.from_custody_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nmodule.exports.to_custody_address = function (program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.to_custody_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_pool = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_pool(ptr0, len0);\n    return takeObject(ret);\n};\nmodule.exports.__wbindgen_json_parse = function (arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\nmodule.exports.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\nvar path = require('path').join(__dirname, 'wormhole_migration_bg.wasm');\nvar bytes = require('fs').readFileSync(path);\nvar wasmModule = new WebAssembly.Module(bytes);\nvar wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n"],"names":["wasm","imports","module","exports","_a","require","TextDecoder","TextEncoder","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","mem","offset","code","charCodeAt","slice","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","takeObject","idx","ret","getObject","dropObject","add_liquidity","program_id","from_mint","to_mint","liquidity_token_account","lp_share_token_account","amount","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","low5","high5","remove_liquidity","claim_shares","output_token_account","create_pool","payer","migrate_tokens","input_token_account","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","pool_address","retptr","__wbindgen_add_to_stack_pointer","r0","r1","v3","__wbindgen_free","authority_address","v1","share_mint_address","pool","v2","from_custody_address","to_custody_address","parse_pool","data","passArray8ToWasm0","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse","__wbindgen_throw","Error","path","bytes","wasmModule","WebAssembly","Module","wasmInstance","Instance","__wasm"],"sourceRoot":""}