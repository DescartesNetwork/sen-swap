{"version":3,"file":"static/js/431.0c72bc61.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/token-node/token_bridge.js"],"sourcesContent":["\"use strict\";\nvar imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nvar wasm;\nvar _a = require(\"util\"), TextDecoder = _a.TextDecoder, TextEncoder = _a.TextEncoder;\nvar cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachedTextEncoder = new TextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} mint\n* @param {number} nonce\n* @returns {any}\n*/\nmodule.exports.attest_ix = function (program_id, bridge_id, payer, message, mint, nonce) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.attest_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, nonce);\n    return takeObject(ret);\n};\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} mint\n* @param {number} nonce\n* @param {BigInt} amount\n* @param {BigInt} fee\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nmodule.exports.transfer_native_ix = function (program_id, bridge_id, payer, message, from, mint, nonce, amount, fee, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low6 = u32CvtShim[0];\n    var high6 = u32CvtShim[1];\n    uint64CvtShim[0] = fee;\n    var low7 = u32CvtShim[0];\n    var high7 = u32CvtShim[1];\n    var ptr8 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len8 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, nonce, low6, high6, low7, high7, ptr8, len8, target_chain);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} from_owner\n* @param {number} token_chain\n* @param {Uint8Array} token_address\n* @param {number} nonce\n* @param {BigInt} amount\n* @param {BigInt} fee\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nmodule.exports.transfer_wrapped_ix = function (program_id, bridge_id, payer, message, from, from_owner, token_chain, token_address, nonce, amount, fee, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(from_owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low7 = u32CvtShim[0];\n    var high7 = u32CvtShim[1];\n    uint64CvtShim[0] = fee;\n    var low8 = u32CvtShim[0];\n    var high8 = u32CvtShim[1];\n    var ptr9 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len9 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, token_chain, ptr6, len6, nonce, low7, high7, low8, high8, ptr9, len9, target_chain);\n    return takeObject(ret);\n};\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @param {string | undefined} fee_recipient\n* @returns {any}\n*/\nmodule.exports.complete_transfer_native_ix = function (program_id, bridge_id, payer, vaa, fee_recipient) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = isLikeNone(fee_recipient) ? 0 : passStringToWasm0(fee_recipient, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @param {string | undefined} fee_recipient\n* @returns {any}\n*/\nmodule.exports.complete_transfer_wrapped_ix = function (program_id, bridge_id, payer, vaa, fee_recipient) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = isLikeNone(fee_recipient) ? 0 : passStringToWasm0(fee_recipient, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.create_wrapped_ix = function (program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.create_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.upgrade_contract_ix = function (program_id, bridge_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.register_chain_ix = function (program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.register_chain_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nmodule.exports.emitter_address = function (program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.emitter_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nmodule.exports.custody_signer = function (program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.custody_signer(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nmodule.exports.approval_authority_address = function (program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.approval_authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {Uint8Array} token_address\n* @param {number} token_chain\n* @returns {Uint8Array}\n*/\nmodule.exports.wrapped_address = function (program_id, token_address, token_chain) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.wrapped_address(retptr, ptr0, len0, ptr1, len1, token_chain);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nmodule.exports.wrapped_meta_address = function (program_id, mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.wrapped_meta_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_wrapped_meta = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_wrapped_meta(ptr0, len0);\n    return takeObject(ret);\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_endpoint_registration = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_endpoint_registration(ptr0, len0);\n    return takeObject(ret);\n};\nmodule.exports.__wbindgen_json_parse = function (arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\nvar path = require('path').join(__dirname, 'token_bridge_bg.wasm');\nvar bytes = require('fs').readFileSync(path);\nvar wasmModule = new WebAssembly.Module(bytes);\nvar wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n"],"names":["wasm","imports","module","exports","_a","require","TextDecoder","TextEncoder","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","takeObject","idx","ret","getObject","dropObject","attest_ix","program_id","bridge_id","payer","message","mint","nonce","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","passArray8ToWasm0","isLikeNone","x","transfer_native_ix","from","amount","fee","target_address","target_chain","ptr5","len5","low6","high6","low7","high7","ptr8","len8","transfer_wrapped_ix","from_owner","token_chain","token_address","ptr6","len6","low8","high8","ptr9","len9","complete_transfer_native_ix","vaa","fee_recipient","complete_transfer_wrapped_ix","create_wrapped_ix","upgrade_contract_ix","spill","register_chain_ix","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","emitter_address","retptr","__wbindgen_add_to_stack_pointer","r0","r1","v1","__wbindgen_free","custody_signer","approval_authority_address","wrapped_address","v2","wrapped_meta_address","mint_address","parse_wrapped_meta","data","parse_endpoint_registration","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse","path","bytes","wasmModule","WebAssembly","Module","wasmInstance","Instance","__wasm"],"sourceRoot":""}