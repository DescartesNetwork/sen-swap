{"version":3,"file":"static/js/849.bf4792eb.chunk.js","mappings":"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","sources":["shared/util.ts","shared/pdb/ipfs.ts","shared/pdb/index.ts","shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/model/main.controller.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","app/page/index.tsx","app/widget/index.tsx","shared/devTools.ts","app/model/index.ts","app/bootstrap.app.tsx","shared/runtime.ts","shared/storage.ts","../javascript/esm|/home/runner/work/sen-swap/sen-swap/node_modules/@babel/runtime/helpers/esm/get.js","../javascript/esm|/home/runner/work/sen-swap/sen-swap/node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"sourcesContent":["import { account } from '@senswap/sen-js'\nimport numbro from 'numbro'\nimport { net } from 'shared/runtime'\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n  senhub: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n  senhub: process.env.REACT_APP_SENHUB,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createPDB } from 'shared/pdb'\n\nimport { Row, Col, Typography, Button, Space } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { increaseCounter } from 'app/model/main.controller'\nimport { useWallet } from 'senhub/providers'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Page = () => {\n  const {\n    wallet: { address },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n  const { counter } = useSelector((state: AppState) => state.main)\n\n  const pdb = useMemo(() => createPDB(address, appId), [address])\n  const increase = useCallback(() => dispatch(increaseCounter()), [dispatch])\n  useEffect(() => {\n    if (pdb) pdb.setItem('counter', counter)\n  }, [pdb, counter])\n\n  return (\n    <Row gutter={[24, 24]} align=\"middle\">\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"newspaper-outline\" />\n          <Typography.Title level={4}>Page</Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Text>Address: {address}</Typography.Text>\n      </Col>\n      <Col>\n        <Typography.Text>Counter: {counter}</Typography.Text>\n      </Col>\n      <Col>\n        <Button onClick={increase}>Increase</Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Page\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Typography, Space, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { increaseCounter } from 'app/model/main.controller'\nimport { env } from 'shared/runtime'\nimport { useUI } from 'senhub/providers'\n\nconst Widget = () => {\n  const {\n    ui: { width, infix },\n  } = useUI()\n  const dispatch = useDispatch<AppDispatch>()\n  const { counter } = useSelector((state: AppState) => state.main)\n  const increase = useCallback(() => dispatch(increaseCounter()), [dispatch])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"apps-outline\" />\n          <Typography.Title level={4}>Widget</Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Text>\n          Env: {env} - {width}px - {infix}\n        </Typography.Text>\n      </Col>\n      <Col>\n        <Typography.Text>Counter: {counter}</Typography.Text>\n      </Col>\n      <Col>\n        <Button onClick={increase}>Increase</Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Widget\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport main from 'app/model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('myapp'),\n  reducer: {\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider } from 'senhub/providers'\n\nimport PageView from 'app/page'\nimport WidgetView from 'app/widget'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId}>\n      <WalletProvider>\n        <Provider store={model}>\n          <PageView />\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n\nexport const widgetConfig: WidgetConfig = {\n  size: 'small',\n  type: 'solid',\n}\n\nexport const Widget = () => {\n  return (\n    <UIProvider appId={appId}>\n      <Provider store={model}>\n        <WidgetView />\n      </Provider>\n    </UIProvider>\n  )\n}\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}"],"names":["asyncWait","ms","Promise","resolve","setTimeout","IPFS","_ipfs","window","ipfs","create","get","cid","isCID","Error","cat","stream","raw","chunk","Buffer","from","toString","data","JSON","parse","set","stringify","add","path","isIPFS","er","PDB","walletAddress","dbName","driver","createInstance","appId","localForage","name","storeName","dropInstance","instance","clear","all","getItem","appIds","flat","concat","iterate","value","key","fetch","backup","restore","setItem","account","this","CUSTOM_ICONS","forwardRef","ref","className","props","cln","src","NAME","increaseCounter","createAsyncThunk","_","getState","counter","main","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","shared","process","url","senhub","devnet","node","spltAddress","splataAddress","testnet","mainnet","manifest","development","staging","production","env","sol","net","configs","address","useWallet","wallet","dispatch","useDispatch","useSelector","pdb","useMemo","walletArress","undefined","createPDB","increase","useCallback","useEffect","Row","gutter","align","Col","span","Space","Typography","level","Button","onClick","useUI","ui","width","infix","BigInt","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","configureStore","middleware","getDefaultMiddleware","devTools","reducer","Page","UIProvider","WalletProvider","Provider","store","model","widgetConfig","size","type","Widget","storage","getNetwork","KEY","localStorage","convert","e","_get","target","property","receiver","Reflect","base","object","hasOwnProperty","call","desc","getOwnPropertyDescriptor"],"sourceRoot":""}