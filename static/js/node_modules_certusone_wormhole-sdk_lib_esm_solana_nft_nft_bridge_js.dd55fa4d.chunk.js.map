{"version":3,"file":"static/js/node_modules_certusone_wormhole-sdk_lib_esm_solana_nft_nft_bridge_js.dd55fa4d.chunk.js","mappings":"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","sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/nft/nft_bridge_bg.js"],"sourcesContent":["import * as wasm from './nft_bridge_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} mint\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_native_ix(program_id, bridge_id, payer, message, from, mint, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, nonce, ptr6, len6, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} from_owner\n* @param {number} token_chain\n* @param {Uint8Array} token_address\n* @param {Uint8Array} token_id\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_wrapped_ix(program_id, bridge_id, payer, message, from, from_owner, token_chain, token_address, token_id, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(from_owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ptr7 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n    var len7 = WASM_VECTOR_LEN;\n    var ptr8 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len8 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, token_chain, ptr6, len6, ptr7, len7, nonce, ptr8, len8, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_native_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_wrapped_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_wrapped_meta_ix(program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_meta_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function upgrade_contract_ix(program_id, bridge_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function register_chain_ix(program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.register_chain_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function emitter_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.emitter_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function approval_authority_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.approval_authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} token_address\n* @param {number} token_chain\n* @param {Uint8Array} token_id\n* @returns {Uint8Array}\n*/\nexport function wrapped_address(program_id, token_address, token_chain, token_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.wrapped_address(retptr, ptr0, len0, ptr1, len1, token_chain, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nexport function wrapped_meta_address(program_id, mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.wrapped_meta_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nexport function spl_meta_address(mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.spl_meta_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_wrapped_meta(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_wrapped_meta(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_endpoint_registration(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_endpoint_registration(ptr0, len0);\n    return takeObject(ret);\n}\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}\n;\n"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","passArray8ToWasm0","getObject","dropObject","takeObject","ret","transfer_native_ix","program_id","bridge_id","payer","message","from","mint","nonce","target_address","target_chain","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","ptr6","len6","transfer_wrapped_ix","from_owner","token_chain","token_address","token_id","ptr7","len7","ptr8","len8","complete_transfer_native_ix","to_authority","vaa","complete_transfer_wrapped_ix","complete_transfer_wrapped_meta_ix","upgrade_contract_ix","spill","register_chain_ix","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","emitter_address","retptr","r0","r1","v1","approval_authority_address","wrapped_address","v3","wrapped_meta_address","mint_address","v2","spl_meta_address","parse_wrapped_meta","data","parse_endpoint_registration","__wbindgen_json_parse","arg0","arg1","JSON","parse"],"sourceRoot":""}