{"version":3,"file":"static/js/977.1e2465e2.chunk.js","mappings":"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","sources":["../node_modules/@senswap/sen-js/dist/index.js","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/bn.js/lib/bn.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IDO = exports.Farming = exports.Swap = exports.SPLT = exports.Lamports = exports.utils = exports.schema = exports.keystore = exports.account = exports.RawWallet = void 0;\n__exportStar(require(\"./rawWallet\"), exports);\nvar rawWallet_1 = require(\"./rawWallet\");\nObject.defineProperty(exports, \"RawWallet\", { enumerable: true, get: function () { return rawWallet_1.default; } });\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"account\", { enumerable: true, get: function () { return account_1.default; } });\n__exportStar(require(\"./default\"), exports);\n__exportStar(require(\"./keystore\"), exports);\nvar keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"keystore\", { enumerable: true, get: function () { return keystore_1.default; } });\n__exportStar(require(\"./schema\"), exports);\nvar schema_1 = require(\"./schema\");\nObject.defineProperty(exports, \"schema\", { enumerable: true, get: function () { return schema_1.default; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return utils_1.default; } });\nvar lamports_1 = require(\"./lamports\");\nObject.defineProperty(exports, \"Lamports\", { enumerable: true, get: function () { return lamports_1.default; } });\n__exportStar(require(\"./splt\"), exports);\nvar splt_1 = require(\"./splt\");\nObject.defineProperty(exports, \"SPLT\", { enumerable: true, get: function () { return splt_1.default; } });\n__exportStar(require(\"./swap\"), exports);\nvar swap_1 = require(\"./swap\");\nObject.defineProperty(exports, \"Swap\", { enumerable: true, get: function () { return swap_1.default; } });\n__exportStar(require(\"./farming\"), exports);\nvar farming_1 = require(\"./farming\");\nObject.defineProperty(exports, \"Farming\", { enumerable: true, get: function () { return farming_1.default; } });\n__exportStar(require(\"./ido\"), exports);\nvar ido_1 = require(\"./ido\");\nObject.defineProperty(exports, \"IDO\", { enumerable: true, get: function () { return ido_1.default; } });\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (\n  property: string = 'publicKey',\n): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer: any, offset: any) => {\n    const data = _decode(buffer, offset);\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str: any, buffer: any, offset: any) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  (rsl as any).alloc = (str: any) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? 0 : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS: {\n  [type in SystemInstructionType]: InstructionType;\n} = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport type {Response} from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: SimulatedTransactionAccountInfo[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          pick({\n            executable: boolean(),\n            owner: string(),\n            lamports: number(),\n            data: array(string()),\n            rentEpoch: optional(number()),\n          }),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger with signatures only\n */\nexport type ConfirmedBlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: (url: string, options: any) => Promise<Response>;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = (url: string, options: any) => {\n      return new Promise<Response>((resolve, reject) => {\n        fetchMiddleware(url, options, async (url: string, options: any) => {\n          try {\n            resolve(await fetch(url, options));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      });\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlockSignatures\" message\n */\nconst GetConfirmedBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch infor for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: Function,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retring calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch a processed transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const result = await this.getBlock(slot, {commitment});\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const result = await this.getTransaction(signature, {commitment});\n    if (!result) return result;\n    const {message, signatures} = result.transaction;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        publicKeyOffset,\n        publicKeyInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  | 'AuthorizeWithSeed'\n  | 'Authorize'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Split'\n  | 'Withdraw'\n  | 'Merge';\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS: {\n  [type in StakeInstructionType]: InstructionType;\n} = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedVoterPubkey'),\n  Layout.publicKey('authorizedWithdrawerPubkey'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64('epoch'),\n  BufferLayout.nu64('credits'),\n  BufferLayout.nu64('lastEpochCredits'),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedVoterPubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  commission: number;\n  votes: Array<Lockout>;\n  rootSlot: number | null;\n  epoch: number;\n  credits: number;\n  lastEpochCredits: number;\n  epochCredits: Array<EpochCredits>;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedVoterPubkey = args.authorizedVoterPubkey;\n    this.authorizedWithdrawerPubkey = args.authorizedWithdrawerPubkey;\n    this.commission = args.commission;\n    this.votes = args.votes;\n    this.rootSlot = args.rootSlot;\n    this.epoch = args.epoch;\n    this.credits = args.credits;\n    this.lastEpochCredits = args.lastEpochCredits;\n    this.epochCredits = args.epochCredits;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const va = VoteAccountLayout.decode(toBuffer(buffer), 0);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedVoterPubkey: new PublicKey(va.authorizedVoterPubkey),\n      authorizedWithdrawerPubkey: new PublicKey(va.authorizedWithdrawerPubkey),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      epoch: va.epoch,\n      credits: va.credits,\n      lastEpochCredits: va.lastEpochCredits,\n      epochCredits: va.epochCredits,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__exportStar","exports","p","prototype","hasOwnProperty","call","value","IDO","Farming","Swap","SPLT","Lamports","utils","schema","keystore","account","RawWallet","require","rawWallet_1","default","account_1","keystore_1","schema_1","utils_1","lamports_1","splt_1","swap_1","farming_1","ido_1","toBuffer","arr","Buffer","assert","val","msg","Error","equal","l","r","inherits_browserModule","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","i","charCodeAt","length","htonl","w","zero2","word","zero8","enc","Array","isArray","slice","res","replace","push","parseInt","c","toString","endian","start","end","len","b","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","f","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","Uint8Array","hex","JSON","stringify","reason","throwError","name","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","array","arguments","isInteger","arrayify","options","result","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","data","Struct","properties","encode","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","Map","MAX_SEED_LENGTH","PublicKey","_bn","isPublicKeyData","decoded","bs58","byteLength","equals","publicKey","eq","toBase58","toBytes","toArrayLike","zeroPad","buffer","fromPublicKey","programId","seeds","seed","TypeError","publicKeyBytes","is_on_curve","nonce","seedsWithNonce","address","createProgramAddress","err","pubkey","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","property","BufferLayout","rustString","rsl","_decode","_encode","str","chars","decodeLength","size","elem","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","ix","set","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","_","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","transaction","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","TransactionInstruction","opts","Transaction","signature","signatures","feePayer","nonceInfo","add","items","item","compileMessage","accountMetas","accountMeta","isSigner","isWritable","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","sign","uniqueSigners","signer","partialSign","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","config","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","connection","status","sleep","ms","Promise","resolve","setTimeout","encodeData","type","allocLength","alloc","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","typeIndex","instructionTypeLayout","ixType","layout","SYSTEM_INSTRUCTION_LAYOUTS","fromPubkey","newAccountPubkey","lamports","toPubkey","basePubkey","space","accountPubkey","authorized","noncePubkey","newAuthorizedPubkey","SystemProgram","expectedLength","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","base","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","Math","balanceNeeded","programInfo","program","payer","dataLayout","chunkSize","offset","transactions","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","global","self","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","test","normalizeValue","iteratorFor","iterator","next","shift","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","decode","json","parse","oldValue","callback","thisArg","values","entries","methods","Request","input","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","module","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetConfirmedBlockRpcResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockSignaturesRpcResult","GetConfirmedTransactionRpcResult","GetParsedConfirmedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","client","commitmentOrConfig","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","endpoint","useHttps","Number","makeWebsocketUrl","fetchWithMiddleware","too_many_requests_retries","waitTime","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","_wsOnOpen","bind","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","_args","ownerAddress","arg","mintAddress","getAccountInfoAndContext","publicKeys","extra","configOrCommitment","encoding","decodedSignature","Date","subscriptionCommitment","confirmPromise","subscriptionId","onSignature","timeoutMs","timeoutPromise","timeoutId","clearTimeout","promiseTimeout","duration","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","limit","getRecentBlockhashAndContext","_buildArgsAtLeastConfirmed","getBlock","endSlot","transactionDetails","getTransaction","methodName","firstAvailableBlock","block","getConfirmedBlockSignatures","highestConfirmedRoot","getSlot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","getNonceAndContext","to","disableCache","expired","startTime","getRecentBlockhash","MS_PER_SLOT","transactionOrMessage","_recentBlockhash","includes","encodedTransaction","traceIndent","logTrace","sendRawTransaction","sendEncodedTransaction","setInterval","clearInterval","sub","rpcMethod","unsubscribeId","_resetSubscriptions","_updateSubscriptions","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","filters","mentions","notification","onAccountChange","subInfo","_unsubscribe","accountId","onProgramAccountChange","onLogs","onSlotChange","onSlotUpdate","override","onSignatureWithOptions","onRootChange","Keypair","keypair","encoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","lockup","STAKE_INSTRUCTION_LAYOUTS","stakePubkey","stakeAuthorizationType","authorityOwner","authorityBase","authoritySeed","splitStakePubkey","sourceStakePubKey","StakeProgram","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","custodianPubkey","newAuthorized","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","ethAddress","rawAddress","ethAddressInstructionIndex","recoveryId","pkey","publicKeyCreate","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedVoterPubkey","authorizedWithdrawerPubkey","votes","credits","lastEpochCredits","va","sendAndConfirmRawTransaction","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","BN","isBN","negative","words","red","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","dest","src","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","_strip","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","gf","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","pack25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","th","tl","wh","Int32Array","wl","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","sig","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues"],"sourceRoot":""}