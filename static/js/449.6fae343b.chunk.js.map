{"version":3,"file":"static/js/449.6fae343b.chunk.js","mappings":"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","sources":["os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","os/store/mints.reducer.ts","os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/index.ts","os/providers/tokenProvider/supplementary.ts","os/providers/tokenProvider/index.ts","os/providers/mint.provider.tsx","shared/runtime.ts","shared/storage.ts"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { ConfigProvider } from 'antd'\n\nimport { RootState } from 'os/store'\nimport { State as UIState } from 'os/store/ui.reducer'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean\n}) => {\n  const ui = useSelector((state: RootState) => state.ui)\n  const provider = useMemo(() => ({ ui }), [ui])\n  return (\n    <Context.Provider value={provider}>\n      <section\n        id={appId}\n        style={{ height: '100%', backgroundColor: 'transparent', ...style }}\n      >\n        {antd ? (\n          <ConfigProvider\n            prefixCls={appId}\n            getPopupContainer={() =>\n              document.getElementById(appId) as HTMLElement\n            }\n          >\n            {children}\n          </ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'os/store'\nimport { State as PoolState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const pools = useSelector((state: RootState) => state.pools)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'os/store'\nimport { State as WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const wallet = useSelector((state: RootState) => state.wallet)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'os/store'\nimport { State as AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const accounts = useSelector((state: RootState) => state.accounts)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  State,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force = false }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  State,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  senAddress: string\n  senPoolAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    senPoolAddress: '3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    senAddress: '',\n    senPoolAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    senPoolAddress: '',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  extra: SenReg\n  senreg: string\n}\n\nconst devApp = {\n  [process.env.REACT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: process.env.REACT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    supportedViews: (process.env.REACT_APP_SUPPORTED_VIEWS || '')\n      .split(',')\n      .map((view) => view.trim())\n      .filter((view) => ['page', 'widget'].includes(view)) as Array<\n      'widget' | 'page'\n    >,\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","// Pseudo native sol info\n// It's for all networks\nexport const sol = (chainId: 101 | 102 | 103) => ({\n  symbol: 'SOL',\n  name: 'Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'solana',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n})\n\n// Pseudo sen info\n// Only for testnet and mainnet\nexport const sen = (chainId: 102 | 103) => ({\n  symbol: 'SEN',\n  name: 'Sen',\n  address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'sen',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M/logo.png',\n})\n\n// Pseudo token infos for devnet\nconst supplementary = [\n  sol(103),\n  sen(103),\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/qfnqNqs3nCAHjnyCgLRDbBtq4p2MtHZxw8YjSyYhPoL/logo.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/3MVa4e32PaKmPxYUQ6n8vFkWtCma68Ld7e7fTktWDueQ/logo.png',\n  },\n  {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'usd-coin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png',\n  },\n]\n\nexport default supplementary\n","import { Document } from 'flexsearch'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net } from 'shared/runtime'\nimport configs from 'os/configs'\nimport supplementary, { sen, sol } from './supplementary'\n\nconst {\n  sol: { chainId },\n} = configs\nconst DELIMITER = /[\\W_]+/g\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\nconst DOCUMENT = {\n  document: {\n    id: 'address',\n    index: [\n      { field: 'symbol', ...PRESET },\n      { field: 'name', ...PRESET },\n    ],\n  },\n}\n\nclass TokenProvider {\n  private tokenMap: Map<string, TokenInfo>\n  private engine: typeof Document | undefined\n  readonly chainId: typeof chainId\n  readonly cluster: typeof net\n\n  constructor() {\n    this.tokenMap = new Map<string, TokenInfo>()\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<Map<string, TokenInfo>> => {\n    if (this.tokenMap.size) return this.tokenMap\n    // Build token list\n    let tokenList = await (await new TokenListProvider().resolve())\n      .filterByChainId(this.chainId)\n      .getList()\n    if (this.cluster === 'devnet') tokenList = tokenList.concat(supplementary)\n    if (this.cluster === 'testnet')\n      tokenList = tokenList.concat([sen(102), sol(102)])\n    else tokenList = tokenList.concat([sol(101)])\n    // Build token map\n    tokenList.forEach((token) => this.tokenMap.set(token.address, token))\n    return this.tokenMap\n  }\n\n  private _engine = async () => {\n    if (this.engine) return this.engine\n    const tm = await this._init()\n    this.engine = new Document(DOCUMENT)\n    tm.forEach(({ address, ...doc }) => this.engine.add(address, doc))\n    return this.engine\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    const tm = await this._init()\n    return Array.from(tm.values())\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const tm = await this._init()\n    return tm.get(addr)\n  }\n\n  find = async (keyword: string, limit?: 10): Promise<TokenInfo[]> => {\n    const tm = await this._init()\n    const engine = await this._engine()\n    let tokens: TokenInfo[] = []\n    keyword.split(DELIMITER).forEach((key) => {\n      const raw: Array<{ result: string[] }> = engine.search(key, limit)\n      return raw.forEach(({ result }) => {\n        return result.forEach((id: string) => {\n          if (tokens.findIndex(({ address }) => address === id) < 0) {\n            const token = tm.get(id)\n            if (token) tokens.push(token)\n          }\n        })\n      })\n    })\n    return tokens\n  }\n}\n\nexport default TokenProvider\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { RootState, RootDispatch } from 'os/store'\nimport { getMint as _getMint, State as MintState } from 'os/store/mints.reducer'\nimport TokenProvider from './tokenProvider'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintState\n  getMint: (...agrs: Parameters<typeof _getMint>) => Promise<MintState>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useDispatch<RootDispatch>()\n  const mints = useSelector((state: RootState) => state.mints)\n  const getMint = useCallback(\n    async (...agrs: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...agrs)).unwrap(),\n    [dispatch],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, tokenProvider }),\n    [mints, getMint],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n"],"names":["Context","createContext","children","appId","style","antd","ui","useSelector","state","provider","useMemo","Provider","value","id","height","backgroundColor","ConfigProvider","prefixCls","getPopupContainer","document","getElementById","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","this","props","forwardedRef","rest","ref","Component","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","NAME","getMint","createAsyncThunk","address","force","getState","account","Error","data","splt","window","sentre","getMintData","raw","upsetMint","deleteMint","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","Object","assign","SOLVARS","spltAddress","splataAddress","devnet","node","chainId","senAddress","senPoolAddress","swapAddress","taxmanAddress","testnet","mainnet","devApp","process","url","author","email","supportedViews","split","map","view","trim","filter","includes","tags","tag","description","verified","development","extra","senreg","staging","production","sol","net","register","env","symbol","decimals","extensions","coingeckoId","logoURI","sen","configs","DELIMITER","PRESET","tokenize","context","minlength","DOCUMENT","index","field","tokenMap","engine","cluster","_init","size","TokenListProvider","resolve","filterByChainId","getList","tokenList","concat","supplementary","forEach","token","set","_engine","tm","Document","doc","add","all","Array","from","values","findByAddress","addr","get","find","keyword","limit","tokens","key","search","result","findIndex","push","Map","undefined","tokenProvider","TokenProvider","dispatch","useDispatch","mints","useCallback","_getMint","unwrap","MintContextComsumer","withMint","useMint","storage","getNetwork","KEY","driver","localStorage","convert","JSON","parse","e","getItem","setItem","stringify","clear"],"sourceRoot":""}