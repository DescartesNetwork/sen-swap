{"version":3,"file":"static/js/405.09e2adc7.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../../../../src/lib/tokenlist.ts","../node_modules/@solana/spl-token-registry/node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction-constants.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/base64-js/index.js","../node_modules/bn.js/lib/bn.js"],"sourcesContent":[null,null,"var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (this._message) {\n      if (JSON.stringify(this.toJSON()) !== JSON.stringify(this._json)) {\n        throw new Error(\n          'Transaction message mutated after being populated from Message',\n        );\n      }\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: number;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        BufferLayout.ns64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'RequestUnits' | 'RequestHeapFrame';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n\n  /** Additional fee to pay */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport crossFetch from 'cross-fetch';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: typeof crossFetch,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : crossFetch;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: typeof crossFetch;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; lastValidBlockHeight: number}> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; lastValidBlockHeight: number}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction({\n        recentBlockhash: originalTx.recentBlockhash,\n        nonceInfo: originalTx.nonceInfo,\n        feePayer: originalTx.feePayer,\n        signatures: [...originalTx.signatures],\n      });\n      transaction.instructions = transactionOrMessage.instructions;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './compute-budget';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './transaction-constants';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","exports","ExternalLayout","isCount","Error","GreedyCount","elementSpan","decode","rem","Math","floor","encode","src","OffsetLayout","layout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","ENV","CLUSTER_SLUGS","MainnetBeta","testnet","Testnet","devnet","Devnet","queryJsonFiles","Promise","all","files","map","response","fetch","repo","json","console","info","tokenlist","tokens","arr","concat","Strategy","TokenListProvider","strategy","CDN","TokenListContainer","strategies","resolve","GitHub","repositories","Static","Solana","tokenList","filter","item","tags","includes","chainId","slug","filterByChainId","keys","__self__","root","F","this","DOMException","self","support","Symbol","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","done","Headers","headers","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","byteLength","set","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","JSON","parse","oldValue","has","callback","thisArg","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","clone","redirectStatuses","redirect","location","err","message","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","module","toBuffer","Buffer","minimalisticAssert","assert","val","msg","equal","l","r","inherits_browserModule","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","zero8","utils","enc","res","parseInt","p","c","endian","end","len","k","m","a","d","pos","ah","al","bh","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","join32","_update","digest","_pad","_digest","t","rotr32","ch32","x","y","z","maj32","p32","s","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","_1","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","f","g","T1","T2","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","sha","require$$4","sum32_3","RIPEMD160","j","K","Kh","ripemd","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","warning","off","_logLevel","_globalLogger","_normalizeError","missing","normalize","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","_log","logLevel","args","level","throwArgumentError","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","hex","stringify","reason","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","array","arguments","arrayify","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","data","Struct","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","super","enum","Map","MAX_SEED_LENGTH","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","toArrayLike","zeroPad","fromPublicKey","seed","programId","seeds","publicKeyBytes","is_on_curve","createProgramAddressSync","nonce","address","seedsWithNonce","findProgramAddressSync","pubkeyData","default","naclLowLevel","nacl","gf","chk","den","den2","den4","den6","neq25519","set25519","gf1","unpack25519","S","M","Z","pow2523","I","pack25519","crypto_verify_32","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","SIGNATURE_LENGTH_IN_BYTES","BufferLayout","rustString","rsl","_decode","_encode","rslShim","str","alloc","decodeLength","size","elem","encodeLength","rem_len","Message","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","instruction","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","pubkey","isSigner","isWritable","Transaction","signature","signatures","feePayer","nonceInfo","_message","_json","nonceInstruction","signers","add","compileMessage","accountMetas","accountMeta","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","valid","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","sign","uniqueSigners","signer","_partialSign","_verifySignatures","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","checkProgramId","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","base","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","authorized","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","ceil","chunkSize","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","units","additionalFee","RequestUnits","RequestHeapFrame","ComputeBudgetProgram","global","ponyfill","ctx","objToString","objKeys","isArrayProp","max","propVal","toStr","isFinite","returnVal","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","lastValidBlockHeight","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","endpoint","commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","URL","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","confirmTransactionInitialTimeout","useHttps","host","port","makeWebsocketUrl","customFetch","crossFetch","fetchWithMiddleware","modifiedFetchArgs","modifiedUrl","modifiedOptions","RpcClient","agent","too_many_requests_retries","waitTime","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","extra","encoding","filters","decodedSignature","Date","now","subscriptionCommitment","subscriptionId","confirmPromise","onSignature","timeoutMs","timeoutId","timeoutPromise","race","clearTimeout","promiseTimeout","removeSignatureListener","duration","toFixed","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","addresses","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","block","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","getNonceAndContext","to","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","getRecentBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","_recentBlockhash","encodedTransaction","sigVerify","traceIndent","logTrace","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","delete","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","onSignatureWithOptions","onRootChange","Keypair","keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","lockup","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","publicKeyCreate","ecdsaSign","secp256k1","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","authorizedVoter","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","VoteInit","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","voteInit","InitializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","sendAndConfirmRawTransaction","http","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","output","isBN","negative","words","red","wordSize","window","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","mod","imuln","_iaddn","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u"],"sourceRoot":""}